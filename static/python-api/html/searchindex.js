Search.setIndex({"docnames": ["autoapi/bittensor/axon/index", "autoapi/bittensor/btlogging/index", "autoapi/bittensor/chain_data/index", "autoapi/bittensor/cli/index", "autoapi/bittensor/config/index", "autoapi/bittensor/dendrite/index", "autoapi/bittensor/errors/index", "autoapi/bittensor/index", "autoapi/bittensor/keyfile/index", "autoapi/bittensor/metagraph/index", "autoapi/bittensor/stream/index", "autoapi/bittensor/subtensor/index", "autoapi/bittensor/synapse/index", "autoapi/bittensor/tensor/index", "autoapi/bittensor/threadpool/index", "autoapi/bittensor/types/index", "autoapi/bittensor/wallet/index", "autoapi/index", "index"], "filenames": ["autoapi/bittensor/axon/index.rst", "autoapi/bittensor/btlogging/index.rst", "autoapi/bittensor/chain_data/index.rst", "autoapi/bittensor/cli/index.rst", "autoapi/bittensor/config/index.rst", "autoapi/bittensor/dendrite/index.rst", "autoapi/bittensor/errors/index.rst", "autoapi/bittensor/index.rst", "autoapi/bittensor/keyfile/index.rst", "autoapi/bittensor/metagraph/index.rst", "autoapi/bittensor/stream/index.rst", "autoapi/bittensor/subtensor/index.rst", "autoapi/bittensor/synapse/index.rst", "autoapi/bittensor/tensor/index.rst", "autoapi/bittensor/threadpool/index.rst", "autoapi/bittensor/types/index.rst", "autoapi/bittensor/wallet/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.axon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.btlogging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.chain_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.cli</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.dendrite</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.errors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.keyfile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.metagraph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.stream</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.subtensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.synapse</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.threadpool</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bittensor.wallet</span></code>", "API Reference", "Welcome to Bittensor API Documentation"], "terms": {"creat": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 16, 17], "init": 0, "whcih": 0, "servic": [0, 7, 11], "forward": [0, 5, 7], "backward": 0, "request": [0, 5, 7, 10, 11, 12], "from": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16], "other": [0, 2, 5, 7, 9, 11, 14, 16], "neuron": [0, 2, 5, 6, 7, 9, 11, 18], "fastapithreadedserv": 0, "config": [0, 1, 3, 7, 9, 10, 11, 12, 13, 14, 16, 17], "base": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "uvicorn": 0, "server": [0, 5, 7, 10], "paramet": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "should_exit": 0, "bool": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 16], "fals": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 16], "is_run": 0, "install_signal_handl": 0, "run_in_thread": 0, "_wrapper_run": 0, "start": [0, 7, 11], "stop": [0, 7], "wallet": [0, 5, 7, 11, 17], "none": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16], "port": [0, 2, 7, 11, 12, 15], "ip": [0, 2, 5, 7, 9, 11, 12, 15], "external_ip": [0, 5, 7], "external_port": [0, 7], "max_work": [0, 7, 14], "The": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 16], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "an": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16], "object": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16], "form": [0, 4, 7, 9, 11], "core": [0, 7, 9], "part": [0, 7, 9, 10, 11], "": [0, 2, 5, 7, 8, 9, 10, 11, 12, 16], "serv": [0, 2, 7, 9, 11, 15], "synaps": [0, 5, 7, 10, 17], "reli": [0, 5, 7], "heavili": [0, 7], "underli": [0, 7, 9, 11], "fastapi": [0, 5, 7], "router": [0, 7], "which": [0, 4, 7, 9, 10, 11, 12, 16], "util": [0, 2, 7, 9, 11], "endpoint": [0, 2, 5, 7, 11], "differ": [0, 1, 3, 4, 7, 9, 11, 12], "messag": [0, 1, 5, 7, 11, 16], "type": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "method": [0, 2, 5, 7, 9, 10, 11, 12, 14], "thi": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18], "ar": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16], "equip": [0, 7], "deal": [0, 7], "incom": [0, 7, 11], "scenario": [0, 5, 7, 8], "network": [0, 5, 7, 9, 10, 11], "face": [0, 7, 11], "It": [0, 5, 7, 8, 9, 10, 11, 14], "accept": [0, 1, 7, 14, 16], "multipl": [0, 5, 7, 11], "argument": [0, 1, 2, 3, 4, 7, 11, 14, 16], "like": [0, 3, 7, 9, 11], "configur": [0, 3, 4, 7, 9, 11], "address": [0, 5, 7, 9, 11, 16], "bind": [0, 7], "extern": [0, 5, 7], "max": [0, 7], "worker": [0, 7, 14], "kei": [0, 2, 3, 7, 8, 9, 11, 16], "involv": [0, 7, 11], "manag": [0, 3, 4, 5, 7, 9, 10, 11, 16], "oper": [0, 3, 5, 7, 8, 9, 11, 16], "applic": [0, 7, 9, 10], "includ": [0, 5, 7, 9, 10, 11], "attach": [0, 7], "offer": [0, 7, 11], "flexibl": [0, 7, 11], "specifi": [0, 5, 7, 9, 11], "custom": [0, 7, 9, 11, 12], "rule": [0, 7, 11], "blacklist": [0, 7, 12], "priorit": [0, 7], "verifi": [0, 7, 8, 11], "against": [0, 7, 8], "function": [0, 5, 10, 11], "also": [0, 5, 7, 10, 11, 16], "encapsul": [0, 5, 7, 9, 10], "add": [0, 3, 4, 7, 11, 12], "command": [0, 3, 4, 7], "line": [0, 3, 4, 7, 11], "user": [0, 2, 7, 8, 9, 11, 16], "friendli": [0, 7], "interact": [0, 7, 9, 11], "program": [0, 7], "support": [0, 7, 8, 11], "handl": [0, 3, 5, 7, 9, 10, 11], "defin": [0, 7, 8, 11], "behavior": [0, 7, 9, 11, 12], "intern": [0, 5, 7, 9, 10, 11], "mechan": [0, 7, 9, 11], "thread": [0, 7, 14], "pool": [0, 7], "concurr": [0, 5, 7, 14], "us": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16], "prioriti": [0, 7, 14, 16], "level": [0, 7, 9, 11], "exampl": [0, 2, 5, 7, 9, 11], "usag": [0, 5, 7, 9, 11], "python": [0, 7, 12, 18], "import": [0, 7, 9, 11], "mysyanps": [0, 7], "input": [0, 2, 5, 7, 8, 11, 12, 16], "int": [0, 1, 2, 7, 9, 11, 12, 13, 15, 16], "1": [0, 2, 4, 7, 9, 11, 14, 17], "output": [0, 7, 9], "def": [0, 7], "appli": [0, 7, 9, 11], "logic": [0, 7, 10, 12], "return": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16], "2": [0, 2, 4, 7, 11], "verif": [0, 7, 12], "verify_my_synaps": [0, 7], "option": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 16], "rais": [0, 5, 6, 7, 8, 11, 13, 14, 16], "except": [0, 1, 4, 5, 6, 7, 8, 13, 14], "fucntion": [0, 7], "blacklist_my_synaps": [0, 7], "non": [0, 6, 7, 8, 12, 16], "true": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16], "prioritize_my_synap": [0, 7], "float": [0, 2, 5, 7, 11, 12], "0": [0, 2, 5, 7, 11], "initi": [0, 2, 5, 7, 9, 10, 11, 14], "my_axon": [0, 7], "my_config": [0, 7], "my_wallet": [0, 7], "9090": [0, 7], "192": [0, 7], "203": [0, 7], "113": [0, 7], "7070": [0, 7], "forward_fn": [0, 7], "forward_my_synaps": [0, 7], "verify_fn": [0, 7], "blacklist_fn": [0, 7], "priority_fn": [0, 7], "forward_my_synapse_2": [0, 7], "verify_my_synapse_2": [0, 7], "blacklist_my_synapse_2": [0, 7], "prioritize_my_synape_2": [0, 7], "netuid": [0, 2, 7, 9, 11, 15], "subtensor": [0, 7, 9, 17], "str": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 16], "info": [0, 1, 2, 7], "associ": [0, 2, 7, 9, 11, 14], "axoninfo": [0, 2, 5, 7, 11], "regist": [0, 6, 7, 11], "api": [0, 7, 11], "name": [0, 2, 7, 8, 9, 11, 12, 16], "first": [0, 7, 9, 12], "callabl": [0, 7, 10, 14], "call": [0, 5, 7, 9, 10, 11, 14, 15], "when": [0, 5, 6, 7, 9, 12, 14], "access": [0, 2, 5, 7, 9, 11, 12, 16], "should": [0, 5, 7, 9, 10, 12, 16], "have": [0, 2, 7, 9, 11, 12, 14], "least": [0, 7], "one": [0, 2, 4, 5, 7, 9, 11, 14], "filter": [0, 1, 7], "out": [0, 1, 7], "undesir": [0, 7], "take": [0, 2, 4, 7, 10, 11], "same": [0, 7, 8, 9, 16], "boolean": [0, 4, 7, 9], "valu": [0, 2, 4, 7, 9, 11, 12, 13], "default": [0, 4, 5, 7, 8, 9, 11, 12, 16], "mean": [0, 7, 12], "rank": [0, 2, 7, 9, 11], "numer": [0, 7, 9], "repres": [0, 5, 7, 8, 9, 11, 12, 13, 14], "sort": [0, 7], "If": [0, 4, 5, 7, 8, 9, 11, 12, 13, 14], "self": [0, 2, 4, 5, 7, 8, 9, 11, 12], "default_verifi": [0, 7], "note": [0, 5, 7, 11, 16], "design": [0, 5, 7, 8, 10, 11], "receiv": [0, 5, 7, 9, 10, 11], "assertionerror": [0, 7], "doe": [0, 7, 8, 12], "signatur": [0, 7, 10, 12], "yoursynaps": [0, 7], "instanc": [0, 5, 7, 9, 11, 12, 14], "axonserv": [0, 7], "potenti": [0, 7, 11], "chain": [0, 6, 7, 11, 15], "classmethod": [0, 1, 2, 4, 7, 11, 12, 14, 16], "pars": [0, 4, 5, 7, 10, 12], "set": [0, 1, 3, 4, 5, 7, 8, 9, 11, 12, 16], "help": [0, 1, 7, 11, 16], "print": [0, 1, 4, 5, 7, 8, 9, 11, 16], "text": [0, 1, 7, 18], "list": [0, 2, 3, 4, 5, 7, 9, 11, 12, 13, 16], "descript": [0, 7, 9], "stdout": [0, 1, 7, 11, 16], "add_arg": [0, 1, 7, 11, 14, 16], "parser": [0, 1, 3, 4, 7, 11, 14, 16], "prefix": [0, 1, 7, 11, 12, 14, 16], "specif": [0, 1, 7, 9, 10, 11, 12, 14, 16], "argpars": [0, 1, 3, 4, 7, 11, 14, 16], "argumentpars": [0, 1, 3, 4, 7, 11, 14, 16], "ad": [0, 2, 7, 12], "environ": [0, 7, 8, 9, 11], "variabl": [0, 7, 8, 12], "async": [0, 5, 7, 10], "verify_body_integr": [0, 7], "asynchron": [0, 5, 7, 10], "integr": [0, 7, 9, 11], "bodi": [0, 7, 10, 11, 12], "compar": [0, 7], "hash": [0, 7, 11, 12], "requir": [0, 6, 7, 8, 9, 10, 11, 16], "field": [0, 7, 12], "correspond": [0, 7, 9, 11], "provid": [0, 5, 7, 8, 9, 10, 11, 12, 18], "header": [0, 5, 7, 10, 12], "critic": [0, 7, 9, 11], "ensur": [0, 5, 7, 9, 10, 11], "payload": [0, 7], "ha": [0, 2, 4, 5, 7, 9, 10, 11], "been": [0, 4, 5, 7, 10, 11, 12, 14], "alter": [0, 7], "tamper": [0, 7], "dure": [0, 5, 7, 9, 11], "transmiss": [0, 7], "establish": [0, 5, 7, 11], "trust": [0, 2, 7, 9, 11], "secur": [0, 7, 9, 11], "between": [0, 7, 9, 11], "sender": [0, 7], "contain": [0, 5, 7, 9, 10, 11, 16, 17], "both": [0, 7, 11], "dictionari": [0, 2, 7, 9, 11, 12], "all": [0, 4, 5, 7, 9, 11, 14], "comparison": [0, 7], "match": [0, 7], "indic": [0, 4, 5, 7, 8, 9, 11, 12], "intact": [0, 7], "dict": [0, 2, 4, 5, 7, 9, 10, 11, 12, 16], "jsonrespons": [0, 7], "400": [0, 7], "statu": [0, 7, 9, 11, 12], "code": [0, 7, 12, 16], "ani": [0, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13], "fail": [0, 6, 7, 11, 12, 14], "issu": [0, 7, 11], "respons": [0, 5, 7, 9, 10, 11], "detail": [0, 2, 7, 9, 11, 12], "error": [0, 1, 5, 7, 11, 13, 16, 17], "mismatch": [0, 7], "assum": [0, 7, 9, 11], "depend": [0, 7], "rout": [0, 7], "app": [0, 7], "post": [0, 7], "some_endpoint": [0, 7], "body_dict": [0, 7], "avail": [0, 7, 9, 11], "onli": [0, 7, 9, 12, 16], "execut": [0, 3, 7, 9, 11, 14], "success": [0, 1, 7, 11, 12], "check_config": [0, 1, 3, 7], "check": [0, 1, 3, 5, 7, 8, 11, 12, 16], "hold": [0, 7, 9, 11, 16], "rang": [0, 7, 11], "1024": [0, 7], "65535": [0, 2, 7], "to_str": [0, 2, 4, 7], "human": [0, 7, 9, 12], "readabl": [0, 6, 7, 8, 9, 12], "represent": [0, 2, 5, 7, 8, 9, 12, 16], "__str__": [0, 2, 4, 5, 7, 8, 9, 11, 12, 16], "__repr__": [0, 2, 4, 5, 7, 8, 9, 11, 12, 16], "machin": [0, 7, 9, 11], "unambigu": [0, 7, 9], "made": [0, 7, 11], "ident": [0, 6, 7, 11], "case": [0, 5, 7, 11], "__del__": [0, 5, 7], "magic": [0, 7], "about": [0, 5, 7, 9, 10, 11], "destroi": [0, 5, 7], "shut": [0, 7], "down": [0, 7], "properli": [0, 7, 9], "grpc": [0, 7, 11], "mark": [0, 7], "pass": [0, 4, 7, 8, 10, 11, 16], "connect": [0, 5, 6, 7, 9, 11], "subnet": [0, 2, 7, 11, 18], "uid": [0, 2, 7, 9, 11], "authent": [0, 7, 9], "digit": [0, 7, 9, 11], "wa": [0, 5, 7, 9, 11, 12], "sent": [0, 7, 10], "expect": [0, 5, 7, 9, 10], "receiver_hotkei": [0, 7], "doesn": [0, 7], "t": [0, 4, 7, 8, 9], "nonc": [0, 7, 12], "larger": [0, 7], "than": [0, 7], "previou": [0, 7, 9], "after": [0, 5, 7, 9, 10, 14], "given": [0, 7, 9, 11, 12, 13, 14], "updat": [0, 5, 7, 8, 9, 11], "process": [0, 5, 7, 9, 10, 11, 13], "asymmetr": [0, 7], "encrypt": [0, 7, 8, 16], "algorithm": [0, 7, 9, 11], "where": [0, 5, 7, 8, 9, 11], "sign": [0, 5, 7, 9, 11], "privat": [0, 7], "public": [0, 7, 9, 11, 16], "axonmiddlewar": 0, "starlett": [0, 7, 10], "middlewar": 0, "basehttpmiddlewar": 0, "entir": [0, 5, 7], "fill": [0, 5, 7], "necessari": [0, 7, 9, 11], "inform": [0, 5, 7, 9, 10, 11], "log": [0, 1, 5, 7, 9], "run": [0, 3, 7, 11, 14, 16], "dispatch": 0, "call_next": 0, "requestresponseendpoint": 0, "preprocess": [0, 5, 7], "perform": [0, 7, 9, 10, 11], "gener": [0, 5, 7, 10, 11, 16, 17], "state": [0, 5, 7, 9, 11], "A": [0, 4, 5, 7, 9, 10, 11, 12, 14], "determin": [0, 5, 7, 9, 11], "urgenc": 0, "param": [0, 4, 7, 8, 11, 16], "time": [0, 7, 9, 11, 14], "starlet": 0, "postprocess": 0, "start_tim": [0, 14], "standard": [1, 7, 9, 11], "logger": [1, 11], "_remove_loguru_ansi_direct": 1, "__has_been_inited__": [1, 7], "__debug_on__": [1, 7], "__trace_on__": [1, 7], "__std_sink__": [1, 7], "__file_sink__": [1, 7], "get": [1, 4, 5, 7, 9, 12, 14, 16], "fro": [1, 7], "set_debug": [1, 7], "debug_on": [1, 7], "debug": [1, 7, 9], "cl": [1, 7], "set_trac": [1, 7], "trace_on": [1, 7], "trace": [1, 7], "back": [1, 5, 7, 10], "get_level": [1, 7], "log_filt": [1, 7], "record": [1, 7, 9], "log_save_filt": [1, 7], "log_formatt": [1, 7], "format": [1, 5, 7, 9, 10, 11], "accord": [1, 7, 9, 10], "extra": [1, 7], "log_save_formatt": [1, 7], "_format": [1, 7], "sufix": [1, 7], "warn": [1, 7, 16], "traceback": [1, 5, 7], "custom_rpc_type_registri": [2, 7], "properti": [2, 5, 7, 8, 9, 11, 12, 14, 16], "is_serv": [2, 7], "version": [2, 7, 8, 9, 11, 12, 15], "ip_typ": [2, 7, 15], "hotkei": [2, 3, 6, 7, 9, 11, 12, 16], "coldkei": [2, 3, 7, 9, 11, 16], "protocol": [2, 3, 7, 11], "4": [2, 7], "placeholder1": [2, 7, 11], "placeholder2": [2, 7, 11], "ip_str": [2, 7], "whole": [2, 7], "string": [2, 4, 5, 7, 8, 9, 11, 12, 13, 16], "__eq__": [2, 7], "repr": [2, 4, 7, 8, 9, 11], "convert": [2, 7, 9, 12], "json": [2, 5, 7, 10, 16], "from_str": [2, 7], "its": [2, 5, 7, 9, 11, 12], "from_neuron_info": [2, 7], "neuron_info": [2, 7], "axon_info": [2, 7], "to_parameter_dict": [2, 7], "torch": [2, 5, 7, 9, 11, 13], "tensor": [2, 7, 9, 12, 17], "nn": [2, 5, 7, 9], "parameterdict": [2, 7], "from_parameter_dict": [2, 7], "parameter_dict": [2, 7], "chaindatatyp": [2, 7], "arg": [2, 3, 4, 5, 7, 14], "kwd": [2, 7], "enum": [2, 7], "collect": [2, 4, 7, 9, 11], "pair": [2, 7, 11], "enumer": [2, 7], "color": [2, 7], "red": [2, 7], "blue": [2, 7], "green": [2, 7], "3": [2, 7, 11], "them": [2, 5, 7, 10, 11, 16], "lookup": [2, 7], "can": [2, 5, 7, 9, 10, 11, 14, 16], "iter": [2, 5, 7, 9, 11], "over": [2, 5, 7, 9], "know": [2, 7, 11], "how": [2, 7, 9, 11], "mani": [2, 7], "member": [2, 7, 11], "thei": [2, 7, 8, 9, 11], "len": [2, 7], "own": [2, 7, 9, 12], "see": [2, 7, 11, 12], "document": [2, 7, 11, 17], "neuroninfo": [2, 7, 11], "subnetinfo": [2, 7, 11], "delegateinfo": [2, 7, 11], "neuroninfolit": [2, 7, 11], "delegatedinfo": [2, 7], "5": [2, 4, 7], "stakeinfo": [2, 7, 11], "6": [2, 7], "ipinfo": [2, 7, 11], "7": [2, 7], "subnethyperparamet": [2, 7, 11], "8": [2, 7], "raopertao": [2, 7], "1000000000": [2, 7], "u16_max": [2, 7], "u64_max": [2, 7], "18446744073709551615": [2, 7], "from_scale_encod": [2, 7], "type_nam": [2, 7], "is_vec": [2, 7], "is_opt": [2, 7], "union": [2, 5, 7, 11, 13, 16], "byte": [2, 7, 8, 11, 16], "scalecodec": [2, 7], "scalebyt": [2, 7], "from_scale_encoding_using_type_str": [2, 7], "type_str": [2, 7], "dataclass": [2, 7], "metadata": [2, 7, 9], "activ": [2, 7, 9, 11], "stake": [2, 6, 7, 9, 11, 16], "balanc": [2, 7, 11, 16], "stake_dict": [2, 7], "total_stak": [2, 7, 9, 11], "emiss": [2, 7, 9, 11], "incent": [2, 7, 9, 11], "consensu": [2, 7, 9, 11], "validator_trust": [2, 7, 9], "dividend": [2, 7, 9], "last_upd": [2, 7, 9], "validator_permit": [2, 7, 9], "weight": [2, 7, 9, 11, 16], "bond": [2, 7, 9, 11], "prometheus_info": [2, 7], "prometheusinfo": [2, 7], "pruning_scor": [2, 7], "is_nul": [2, 7], "fix_decoded_valu": [2, 7], "neuron_info_decod": [2, 7], "fix": [2, 7, 11], "from_vec_u8": [2, 7], "vec_u8": [2, 7], "list_from_vec_u8": [2, 7], "static": [2, 3, 4, 7, 9, 11, 13], "_null_neuron": [2, 7, 11], "from_weights_bonds_and_neuron_lit": [2, 7], "neuron_lit": [2, 7], "weights_as_dict": [2, 7], "bonds_as_dict": [2, 7], "tupl": [2, 7, 11, 16], "_neuron_dict_to_namespac": [2, 7], "neuron_dict": [2, 7], "without": [2, 5, 7, 8, 11], "prometheu": [2, 7, 11, 15], "block": [2, 7, 9, 11], "prometheus_info_decod": [2, 7], "deleg": [2, 6, 7, 9, 10, 11], "hotkey_ss58": [2, 7, 11], "nomin": [2, 6, 7, 11], "owner_ss58": [2, 7], "registr": [2, 6, 7, 11], "return_per_1000": [2, 7], "total_daily_return": [2, 7], "decod": [2, 7, 11], "delegated_list_from_vec_u8": [2, 7], "amount": [2, 7, 9, 11], "coldkey_ss58": [2, 7, 11], "list_of_tuple_from_vec_u8": [2, 7], "rho": [2, 7, 11], "kappa": [2, 7, 11], "difficulti": [2, 7, 11], "immunity_period": [2, 7, 11], "max_allowed_valid": [2, 7, 11], "min_allowed_weight": [2, 7, 11], "max_weight_limit": [2, 7, 11], "scaling_law_pow": [2, 7, 11], "subnetwork_n": [2, 7, 11], "max_n": [2, 7, 11], "blocks_since_epoch": [2, 7, 11], "tempo": [2, 7, 11], "modal": [2, 7], "connection_requir": [2, 7], "emission_valu": [2, 7], "burn": [2, 7, 11], "hyperparamet": [2, 7, 11], "min_difficulti": [2, 7], "max_difficulti": [2, 7], "weights_vers": [2, 7], "weights_rate_limit": [2, 7], "adjustment_interv": [2, 7], "activity_cutoff": [2, 7], "registration_allow": [2, 7], "target_regs_per_interv": [2, 7], "min_burn": [2, 7], "max_burn": [2, 7], "bonds_moving_avg": [2, 7], "max_regs_per_block": [2, 7], "encod": [2, 7, 11, 12], "proposalvotedata": [2, 7, 11], "typeddict": [2, 7, 11, 15], "new": [2, 5, 7, 9, 11, 12, 16], "empti": [2, 7, 8, 11], "map": [2, 7, 11], "via": [2, 7, 11], "d": [2, 4, 5, 7, 9, 11], "k": [2, 7, 11], "v": [2, 7, 11], "kwarg": [2, 4, 5, 7, 10, 11, 14], "keyword": [2, 7, 11], "For": [2, 5, 7, 9, 11, 12], "two": [2, 4, 7, 11], "index": [2, 7, 11], "threshold": [2, 7, 11], "ay": [2, 7], "nai": [2, 7], "end": [2, 7], "proposalcalldata": [2, 7, 11], "consol": 3, "alias_to_command": 3, "implement": [3, 4, 5, 7, 10, 11, 12, 14, 16], "interfac": [3, 7, 8, 9, 10, 11], "token": [3, 7, 10, 11, 16], "transfer": [3, 6, 7, 11, 16], "__create_parser__": [3, 7], "create_config": [3, 7], "executor": [3, 7, 14], "local": [3, 5, 7, 9, 11], "essenti": [3, 7, 9, 11], "exist": [3, 7, 8, 11, 16], "under": [3, 7, 8, 11, 16], "invalidconfigfil": [4, 7], "In": [4, 5, 7, 9, 12], "place": [4, 7, 9, 11], "yamlerror": [4, 7], "strict": [4, 7], "munch": [4, 7], "defaultmunch": [4, 7], "__is_set": [4, 7], "translat": [4, 7], "nest": [4, 7], "strictli": [4, 7], "undefin": [4, 7], "__split_params__": [4, 7], "_config": [4, 7], "namespac": [4, 7], "__parse_args__": [4, 7], "__deepcopy__": [4, 7], "memo": [4, 7], "invert": [4, 7], "b": [4, 7, 8, 9, 11], "foo": [4, 7], "lol": [4, 7], "hello": [4, 7], "42": [4, 7], "poni": [4, 7], "pretti": [4, 7], "eval": [4, 7], "with_spac": [4, 7], "9": [4, 7], "c": [4, 7, 9], "simpl": [4, 7, 9], "so": [4, 7], "long": [4, 7, 11], "each": [4, 5, 7, 9, 11, 16], "_remove_private_kei": [4, 7], "copi": [4, 7, 9], "shallow": [4, 7], "item": [4, 7, 12, 14], "update_with_kwarg": [4, 7], "_merg": [4, 7], "merg": [4, 5, 7], "recurs": [4, 7, 12], "conflict": [4, 7], "second": [4, 5, 7], "preced": [4, 7], "current": [4, 5, 7, 8, 9, 11, 12], "anoth": [4, 7, 9, 11], "merge_al": [4, 7], "last": [4, 7, 9], "is_set": [4, 7], "param_nam": [4, 7], "whether": [4, 7, 9, 11, 16], "still": [4, 7], "defaultconfig": [4, 7], "abstract": [4, 5, 7, 9, 10], "inherit": [5, 7, 12], "pytorch": [5, 7, 9], "client": [5, 7, 10], "brain": [5, 7], "analogi": [5, 7], "signal": [5, 7], "axon": [5, 7, 9, 11, 12, 15, 17], "here": [5, 7, 9, 11], "send": [5, 7, 9, 10, 11], "those": [5, 7], "reciev": [5, 7], "keypair": [5, 7, 8, 16], "make": [5, 7, 9, 11, 12], "http": [5, 7, 11, 12], "system": [5, 7, 8, 9, 11], "synapse_histori": [5, 7], "histor": [5, 7, 9], "act": [5, 7, 9, 11], "fallback": [5, 7], "queri": [5, 6, 7, 9, 11], "synchron": [5, 7, 9, 11], "target": [5, 7, 11], "streamingsynaps": [5, 7, 10], "timeout": [5, 7, 12], "12": [5, 7, 16], "deseri": [5, 7, 8, 10, 12, 13], "run_async": [5, 7], "stream": [5, 7, 17], "collat": [5, 7], "asyncgener": [5, 7], "bittenst": [5, 7], "target_axon": [5, 7], "call_stream": [5, 7], "yield": [5, 7], "chunk": [5, 7, 10], "befor": [5, 7, 11, 12], "final": [5, 7, 11, 12], "element": [5, 7, 9, 13], "preprocess_synapse_for_request": [5, 7], "target_axon_info": [5, 7], "build": [5, 7], "process_server_respons": [5, 7], "server_respons": [5, 7], "json_respons": [5, 7], "local_synaps": [5, 7], "close_sess": [5, 7], "close": [5, 7], "aiohttp": [5, 7], "session": [5, 7, 9], "aclose_sess": [5, 7], "work": [5, 7, 14], "recommend": [5, 7], "context": [5, 7, 8, 9, 11, 12], "aysnc": [5, 7], "ping": [5, 7], "howev": [5, 7, 9], "you": [5, 6, 7, 9], "abl": [5, 7], "safe": [5, 7, 14, 16], "clientsess": [5, 7], "alreadi": [5, 7], "instanti": [5, 7, 10], "manner": [5, 7, 9], "resourc": [5, 7, 9, 11, 14], "ti": [5, 7], "releas": [5, 7, 9], "longer": [5, 7], "need": [5, 7, 8, 9, 11], "typic": [5, 7, 9, 10, 11, 12], "cleanup": [5, 7], "phase": [5, 7], "dendrite_inst": [5, 7], "similar": [5, 7, 9], "within": [5, 7, 9, 10, 11], "relat": [5, 6, 7, 11], "await": [5, 7, 10], "_get_endpoint_url": [5, 7], "request_nam": [5, 7], "_handle_request_error": [5, 7], "_log_outgoing_request": [5, 7], "_log_incoming_respons": [5, 7], "automat": [5, 7, 9], "upon": [5, 7, 9, 11], "complet": [5, 7, 9, 14], "durat": [5, 7, 11], "singl": [5, 7, 11], "bridg": [5, 7], "sequenti": [5, 7], "off": [5, 7], "unifi": [5, 7], "data": [5, 7, 8, 9, 10, 11, 12, 13], "individu": [5, 7, 11], "dendrt": [5, 7], "maximum": [5, 7, 11], "wait": [5, 7, 11, 14], "otherwis": [5, 7, 11, 12, 14], "through": [5, 7, 11, 16], "larg": [5, 7], "piec": [5, 7], "transmit": [5, 7], "arbitrari": [5, 7], "exhaust": [5, 7], "attribut": [5, 9], "silent": [5, 7], "ignor": [5, 7, 8], "user_wallet_address": [5, 7], "__aenter__": [5, 7], "entri": [5, 7, 11], "enabl": [5, 7, 9, 11], "statement": [5, 7], "enter": [5, 7, 8, 16], "some_async_method": [5, 7], "__aexit__": [5, 7], "exc_typ": [5, 7], "exc_valu": [5, 7], "exit": [5, 7], "proper": [5, 7, 9], "baseexcept": [5, 6, 7], "tracebacktyp": [5, 7], "stack": [5, 7], "point": [5, 7, 9, 11], "destructor": [5, 7], "invok": [5, 7, 9], "fulli": [5, 7], "remain": [5, 7, 9, 12], "unpredict": [5, 7], "explicitli": [5, 7, 9], "some": [5, 7], "del": [5, 7], "implicitli": [5, 7], "chainerror": [6, 7], "chainconnectionerror": [6, 7], "chaintransactionerror": [6, 7], "transact": [6, 7, 9, 11], "chainqueryerror": [6, 7], "stakeerror": [6, 7, 11], "unstakeerror": [6, 7], "unstak": [6, 7, 11, 16], "identityerror": [6, 7], "nominationerror": [6, 7], "transfererror": [6, 7], "registrationerror": [6, 7], "notregisterederror": [6, 7], "notdelegateerror": [6, 7], "try": [6, 7], "keyfileerror": [6, 7, 8, 16], "thrown": [6, 7], "keyfil": [6, 7, 16, 17], "corrupt": [6, 7, 8, 16], "writabl": [6, 7, 8], "password": [6, 7, 8, 16], "decrypt": [6, 7, 8, 16], "invalid": [6, 7, 13], "btlog": [7, 17], "chain_data": [7, 11, 17], "cli": [7, 11, 17], "dendrit": [7, 12, 17], "metagraph": [7, 11, 16, 17], "threadpool": [7, 17], "__version__": 7, "version_split": 7, "__version_as_int__": [7, 11], "__new_signature_version__": 7, "360": 7, "__console__": 7, "__use_console__": 7, "turn_console_off": 7, "turn_console_on": 7, "__blocktime__": 7, "__pipaddress__": 7, "pypi": 7, "org": 7, "__delegates_details_url__": 7, "raw": [7, 9, 12, 13], "githubusercont": 7, "com": [7, 14], "opentensor": 7, "main": [7, 11], "__ss58_format__": 7, "__ss58_address_length__": 7, "48": 7, "__networks__": 7, "finnei": [7, 9, 11], "test": [7, 8, 9, 11], "archiv": [7, 9], "__finney_entrypoint__": 7, "wss": 7, "entrypoint": 7, "ai": [7, 9, 11], "443": 7, "__finney_test_entrypoint__": 7, "__archive_entrypoint__": 7, "__bellagene_entrypoint__": 7, "parachain": 7, "__local_entrypoint__": 7, "w": [7, 9, 11], "127": 7, "9944": 7, "__tao_symbol__": 7, "__rao_symbol__": 7, "__network_explorer_map__": 7, "__type_registry__": 7, "modul": 7, "nacl_salt": [7, 8], "x13q": [7, 8], "x83": [7, 8], "xdf": [7, 8], "xf1z": [7, 8], "xbc": [7, 8], "x9c": [7, 8], "x90": [7, 8], "xb5q": [7, 8], "x879": [7, 8], "xe9": [7, 8], "xb1": [7, 8], "serialized_keypair_to_keyfile_data": [7, 8], "serial": [7, 8, 12, 13], "deserialize_keypair_from_keyfile_data": [7, 8], "keyfile_data": [7, 8], "load": [7, 8, 9, 11, 16], "cannot": [7, 8], "construct": [7, 8, 9, 11, 12], "validate_password": [7, 8], "valid": [7, 8, 9, 10, 11], "polici": [7, 8], "meet": [7, 8], "ask_password_to_encrypt": [7, 8], "prompt": [7, 8, 11, 18], "rtype": [7, 8, 11, 16], "keyfile_data_is_encrypted_nacl": [7, 8], "nacl": [7, 8], "ansibl": [7, 8], "is_nacl": [7, 8], "keyfile_data_is_encrypted_ans": [7, 8], "is_ans": [7, 8], "keyfile_data_is_encrypted_legaci": [7, 8], "legaci": [7, 8], "is_legaci": [7, 8], "keyfile_data_is_encrypt": [7, 8], "is_encrypt": [7, 8], "keyfile_data_encryption_method": [7, 8], "encryption_method": [7, 8], "legacy_encrypt_keyfile_data": [7, 8], "encrypt_keyfile_data": [7, 8], "vault": [7, 8], "ask": [7, 8], "encrypted_data": [7, 8], "get_coldkey_password_from_environ": [7, 8], "coldkey_nam": [7, 8], "retriev": [7, 8, 9, 10, 11, 12], "cold": [7, 8], "found": [7, 8, 11], "decrypt_keyfile_data": [7, 8], "decrypted_data": [7, 8], "file": [7, 8, 9, 16], "incorrect": [7, 8, 16], "path": [7, 8, 9, 11, 16], "substrat": [7, 8, 11], "store": [7, 8, 9], "devic": [7, 8, 16], "set_keypair": [7, 8], "overwrit": [7, 8, 16], "write": [7, 8], "forc": [7, 8], "get_keypair": [7, 8], "make_dir": [7, 8], "directori": [7, 8, 9], "do": [7, 8], "exists_on_devic": [7, 8], "on_devic": [7, 8], "is_read": [7, 8], "is_writ": [7, 8], "_may_overwrit": [7, 8], "okai": [7, 8], "allow": [7, 8, 9, 10, 11], "may_overwrit": [7, 8], "check_and_update_encrypt": [7, 8], "print_result": [7, 8], "no_prompt": [7, 8], "result": [7, 8, 11, 12], "skip": [7, 8], "most": [7, 8, 9, 11], "els": [7, 8], "_read_keyfile_data_from_fil": [7, 8], "read": [7, 8, 12], "_write_keyfile_data_to_fil": [7, 8], "permiss": [7, 8], "respond": [7, 8], "No": [7, 8], "mockkeyfil": [7, 8], "mock": [7, 8], "simul": [7, 8, 11], "actual": [7, 8, 10, 11], "filesystem": [7, 8], "treat": [7, 8], "noth": [7, 8], "sinc": [7, 8], "although": [7, 8], "alwai": [7, 8], "written": [7, 8], "valueerror": [7, 8], "anyth": [7, 8], "display_mnemonic_msg": [7, 16], "key_typ": [7, 16], "displai": [7, 9, 16], "mnemon": [7, 16], "keep": [7, 16], "mainten": [7, 11, 16], "primari": [7, 16], "wai": [7, 11, 16], "tao": [7, 11, 16], "your": [7, 16], "must": [7, 9, 10, 11, 16], "fund": [7, 11, 16], "node": [7, 9, 11, 16], "hand": [7, 16], "subscrib": [7, 16], "link": [7, 11, 16], "hotkey_fil": [7, 16], "coldkey_fil": [7, 16], "coldkeypub_fil": [7, 16], "coldkeypub": [7, 16], "cryptokeyerror": [7, 16], "incorrec": [7, 16], "colkei": [7, 16], "txt": [7, 16], "colkeypub": [7, 16], "regen_coldkeypub": [7, 16], "regen_coldkei": [7, 16], "regen_hotkei": [7, 16], "create_if_non_exist": [7, 16], "coldkey_use_password": [7, 16], "hotkey_use_password": [7, 16], "recreat": [7, 16], "set_hotkei": [7, 16], "set_coldkeypub": [7, 16], "set_coldkei": [7, 16], "get_coldkei": [7, 16], "get_hotkei": [7, 16], "get_coldkeypub": [7, 16], "create_coldkey_from_uri": [7, 16], "uri": [7, 16], "use_password": [7, 16], "suppress": [7, 16], "suri": [7, 16], "e": [7, 9, 11, 16], "alic": [7, 16], "bob": [7, 16], "protect": [7, 9, 11, 16], "Will": [7, 16], "newli": [7, 16], "create_hotkey_from_uri": [7, 16], "new_coldkei": [7, 16], "n_word": [7, 16], "save": [7, 9, 16], "disk": [7, 9, 16], "number": [7, 9, 11, 16], "word": [7, 16], "create_new_coldkei": [7, 16], "new_hotkei": [7, 16], "create_new_hotkei": [7, 16], "regenerate_coldkeypub": [7, 16], "ss58_address": [7, 11, 16], "public_kei": [7, 16], "regener": [7, 16], "either": [7, 11, 16], "ss58": [7, 11, 16], "hex": [7, 11, 16], "re": [7, 16], "regenerate_coldkei": [7, 16], "seed": [7, 16], "space": [7, 16], "separ": [7, 16], "restor": [7, 9, 16], "backup": [7, 16], "json_data": [7, 16], "passphras": [7, 16], "order": [7, 16], "regenerate_hotkei": [7, 16], "_mock": [7, 11], "crucial": [7, 9, 11], "blockchain": [7, 9, 11], "facilit": [7, 9, 11], "decentr": [7, 9, 11], "learn": [7, 9, 11], "particip": [7, 9, 11], "engag": [7, 11], "inter": [7, 9, 11], "ledger": [7, 9, 11], "peer": [7, 9, 11], "These": [7, 9, 11], "themselv": [7, 11], "plai": [7, 9, 11], "role": [7, 9, 11], "higher": [7, 9, 11], "contribut": [7, 9, 11], "more": [7, 9, 11, 12], "variou": [7, 9, 11], "gatewai": [7, 11], "layer": [7, 9, 11], "leverag": [7, 9, 11], "fair": [7, 11], "distribut": [7, 9, 11], "primarili": [7, 9, 11], "alloc": [7, 9, 11], "major": [7, 9, 11], "8203": [7, 11], "oaicit": [7, 11], "addition": [7, 11], "introduc": [7, 11], "specul": [7, 9, 11], "reward": [7, 9, 11], "accumul": [7, 9, 10, 11], "futur": [7, 9, 11, 14], "align": [7, 9, 11], "market": [7, 11], "incentiv": [7, 9, 11], "judici": [7, 11], "decis": [7, 9, 11], "invest": [7, 9, 11], "g": [7, 11], "chain_endpoint": [7, 11], "url": [7, 11], "direct": [7, 9, 11], "commun": [7, 9, 11], "finney_subtensor": [7, 11], "collabor": [7, 9, 11], "set_weight": [7, 11], "promis": [7, 11], "delegate_ss58": [7, 11], "other_neuron_ss58": [7, 11], "bond_amount": [7, 11], "By": [7, 11, 12], "instrument": [7, 9, 11], "maintain": [7, 9, 11], "intellig": [7, 9, 11], "dynam": [7, 9, 11], "envis": [7, 11], "foundat": [7, 11], "principl": [7, 9, 11], "describ": [7, 11], "neurip": [7, 9, 11], "paper": [7, 9, 11], "get_proposal_vote_data": [7, 11], "determine_chain_endpoint_and_network": [7, 11], "flag": [7, 9, 11], "choic": [7, 11], "overrid": [7, 11, 12], "setup_config": [7, 11], "wait_for_fin": [7, 11], "wait_for_inclus": [7, 11], "becom": [7, 11], "identifi": [7, 9, 11, 12], "until": [7, 11, 14], "govern": [7, 9, 11], "select": [7, 11], "undeleg": [7, 11], "remov": [7, 11], "action": [7, 11], "reduc": [7, 9, 11], "effect": [7, 11], "withdraw": [7, 11], "confirm": [7, 11], "proceed": [7, 11], "reflect": [7, 9, 11], "natur": [7, 9, 11], "adjust": [7, 11], "chang": [7, 11], "percept": [7, 11], "set_delegate_tak": [7, 11], "percentag": [7, 11], "100": [7, 9, 11], "share": [7, 9, 11], "version_kei": [7, 11], "influenc": [7, 9, 11], "fundament": [7, 9, 11], "aspect": [7, 9, 11], "architectur": [7, 9, 11], "uniqu": [7, 9, 11], "longtensor": [7, 11], "being": [7, 10, 11], "floattensor": [7, 9, 11], "compat": [7, 9, 11], "shape": [7, 11, 13], "toward": [7, 9, 11], "81": [7, 11], "sourc": [7, 11], "_do_set_weight": [7, 11], "val": [7, 11], "submit": [7, 11, 14], "retri": [7, 11], "vital": [7, 9, 11], "observ": [7, 11], "max_allowed_attempt": [7, 11], "output_in_plac": [7, 11], "cuda": [7, 11], "dev_id": [7, 11], "tpb": [7, 11], "256": [7, 11, 12], "num_process": [7, 11], "update_interv": [7, 11], "log_verbos": [7, 11], "step": [7, 9, 11], "growth": [7, 11], "scalabl": [7, 11], "ecosystem": [7, 9, 11], "run_faucet": [7, 11], "faucet": [7, 11], "particularli": [7, 9, 11], "newcom": [7, 11], "small": [7, 11], "onboard": [7, 11], "begin": [7, 11], "journei": [7, 11], "burned_regist": [7, 11], "recycl": [7, 11], "deflationari": [7, 11], "altern": [7, 11], "circul": [7, 11], "conserv": [7, 11], "_do_pow_regist": [7, 11], "pow_result": [7, 11], "pow": [7, 11], "extrins": [7, 11], "powsolut": [7, 11], "inclus": [7, 11], "_do_burned_regist": [7, 11], "dest": [7, 11], "destin": [7, 11], "move": [7, 11], "fluid": [7, 11], "movement": [7, 11], "econom": [7, 11], "get_transfer_fe": [7, 11], "calcul": [7, 9, 11, 12], "fee": [7, 11], "estim": [7, 11], "cost": [7, 11], "account": [7, 11], "condit": [7, 11], "complex": [7, 9, 11], "rao": [7, 11], "unit": [7, 11], "plan": [7, 11], "suffici": [7, 11], "cover": [7, 9, 11], "tool": [7, 11], "financi": [7, 11], "_do_transf": [7, 11], "transfer_bal": [7, 11], "block_hash": [7, 11], "On": [7, 11], "wait_for_": [7, 11], "get_existential_deposit": [7, 11], "existenti": [7, 11], "deposit": [7, 11], "minimum": [7, 11], "below": [7, 11], "reap": [7, 11], "effici": [7, 9, 11], "storag": [7, 11], "prevent": [7, 11], "prolifer": [7, 11], "dust": [7, 11], "register_subnetwork": [7, 11], "subnetwork": [7, 11], "creation": [7, 11], "special": [7, 9, 10, 11], "segment": [7, 11], "overal": [7, 11], "expans": [7, 11], "diversif": [7, 11], "adapt": [7, 9, 11], "set_hyperparamet": [7, 11], "characterist": [7, 11], "fine": [7, 11], "tune": [7, 11], "announc": [7, 11], "placehold": [7, 11], "extens": [7, 11], "presenc": [7, 11], "serve_axon": [7, 11], "up": [7, 9, 11, 14], "compon": [7, 9, 11], "task": [7, 11], "comput": [7, 9, 11, 12], "infrastructur": [7, 9, 11], "_do_serve_axon": [7, 11], "call_param": [7, 11], "axonservecallparam": [7, 11, 15], "enhanc": [7, 9, 11], "capabl": [7, 11], "serve_prometheu": [7, 11], "_do_serve_prometheu": [7, 11], "prometheusservecallparam": [7, 11, 15], "_do_associate_ip": [7, 11], "ip_info_list": [7, 11], "add_stak": [7, 11], "earn": [7, 9, 11], "increas": [7, 11], "add_stake_multipl": [7, 11], "bulk": [7, 11], "across": [7, 9, 11], "_do_stak": [7, 11], "unstake_multipl": [7, 11], "batch": [7, 11], "withdrawn": [7, 11], "strateg": [7, 11], "realloc": [7, 11], "accrual": [7, 11], "_do_unstak": [7, 11], "register_sen": [7, 11], "leave_sen": [7, 11], "vote_sen": [7, 11], "proposal_hash": [7, 11], "proposal_idx": [7, 11], "vote": [7, 11], "is_senate_memb": [7, 11], "senat": [7, 11], "overse": [7, 11], "approv": [7, 11], "propos": [7, 11], "membership": [7, 11], "understand": [7, 9, 11], "power": [7, 11], "get_vote_data": [7, 11], "track": [7, 9, 11], "get_senate_memb": [7, 11], "composit": [7, 11], "grasp": [7, 11], "structur": [7, 9, 10, 11], "author": [7, 9, 11], "get_proposal_call_data": [7, 11], "purpos": [7, 9, 11], "analyz": [7, 9, 11], "intend": [7, 9, 10, 11, 12], "get_proposal_hash": [7, 11], "present": [7, 11], "review": [7, 11], "insight": [7, 11], "get_propos": [7, 11], "along": [7, 11], "comprehens": [7, 11], "view": [7, 11], "thorough": [7, 11], "recept": [7, 11], "holist": [7, 11], "impact": [7, 9, 11], "root_regist": [7, 11], "root": [7, 9, 11], "highest": [7, 11], "influenti": [7, 11], "signifi": [7, 9, 11], "high": [7, 11], "commit": [7, 11], "_do_root_regist": [7, 11], "root_set_weight": [7, 11], "pivot": [7, 9, 11], "query_ident": [7, 11], "update_ident": [7, 11], "modifi": [7, 10, 11], "whose": [7, 11], "accuraci": [7, 11], "currenc": [7, 11], "query_subtensor": [7, 11], "valuabl": [7, 9, 11], "query_map_subtensor": [7, 11], "wide": [7, 9, 11], "querymapresult": [7, 11], "relationship": [7, 9, 11], "query_const": [7, 11], "module_nam": [7, 11], "constant_nam": [7, 11], "constant": [7, 11], "inflat": [7, 11], "rate": [7, 9, 11], "deeper": [7, 11], "query_modul": [7, 11], "divers": [7, 11], "versatil": [7, 11], "analysi": [7, 9, 11], "query_map": [7, 11], "state_cal": [7, 11], "advanc": [7, 11], "insuffici": [7, 11], "query_runtime_api": [7, 11], "runtime_api": [7, 11], "runtim": [7, 9, 11], "scale": [7, 11], "who": [7, 11], "paramwithtyp": [7, 11], "_encode_param": [7, 11], "call_definit": [7, 11], "global": [7, 11], "directli": [7, 10, 11, 12], "model": [7, 9, 10, 11], "mathemat": [7, 11], "p": [7, 11], "cryptocurr": [7, 9, 11], "economi": [7, 11], "formula": [7, 11], "staking_target": [7, 11], "staking_actu": [7, 11], "inflation_target": [7, 11], "desir": [7, 11, 12], "total": [7, 9, 11, 12], "while": [7, 9, 11], "predefin": [7, 11], "goal": [7, 11], "affect": [7, 11], "control": [7, 11], "among": [7, 9, 11], "\u03ba": [7, 11], "deriv": [7, 11], "softmax": [7, 11], "\u03ba_i": [7, 11], "exp": [7, 11], "w_i": [7, 11], "\u03c3": [7, 11], "w_j": [7, 11], "denomin": [7, 11], "sum": [7, 11, 12], "exponenti": [7, 11], "normal": [7, 11], "probabilist": [7, 11], "rel": [7, 11], "signific": [7, 9, 11], "challeng": [7, 11], "effort": [7, 11], "suppli": [7, 9, 11], "nativ": [7, 11], "immunityperiod": [7, 11], "certain": [7, 11], "penalti": [7, 11], "restrict": [7, 11], "grace": [7, 11], "period": [7, 11], "immedi": [7, 11], "punit": [7, 11], "validator_batch_s": [7, 11], "validatorbatchs": [7, 11], "hyper": [7, 11], "validator_prune_len": [7, 11], "validatorprunelen": [7, 11], "validator_logits_diverg": [7, 11], "validatorlogitsdiverg": [7, 11], "validator_sequence_length": [7, 11], "validatorsequencelength": [7, 11], "validator_epochs_per_reset": [7, 11], "validatorepochsperreset": [7, 11], "validator_epoch_length": [7, 11], "validatorepochlen": [7, 11], "validator_exclude_quantil": [7, 11], "maxallowedvalid": [7, 11], "minallowedweight": [7, 11], "maxweightslimit": [7, 11], "scalinglawpow": [7, 11], "synergy_scaling_law_pow": [7, 11], "synergyscalinglawpow": [7, 11], "subnetworkn": [7, 11], "maxalloweduid": [7, 11], "blockssincelaststep": [7, 11], "get_total_stake_for_hotkei": [7, 11], "held": [7, 9, 11], "get_total_stake_for_coldkei": [7, 11], "get_stake_for_coldkey_and_hotkei": [7, 11], "get_stak": [7, 11], "owner": [7, 11], "does_hotkey_exist": [7, 11], "known": [7, 11], "get_hotkey_own": [7, 11], "get_axon_info": [7, 11], "get_prometheus_info": [7, 11], "total_issu": [7, 11], "issuanc": [7, 11], "mine": [7, 11], "health": [7, 11], "inflationari": [7, 11], "trend": [7, 11], "cumul": [7, 9, 11], "metric": [7, 9, 11], "factor": [7, 11], "serving_rate_limit": [7, 11], "limit": [7, 11], "frame": [7, 11], "overus": [7, 11], "tx_rate_limit": [7, 11], "stabil": [7, 9, 11], "congest": [7, 11], "therebi": [7, 11], "subnet_exist": [7, 11], "get_all_subnet_netuid": [7, 11], "get_total_subnet": [7, 11], "assess": [7, 9, 11], "extent": [7, 11], "get_subnet_mod": [7, 11], "get_subnet_connection_requir": [7, 11], "netuid_0": [7, 11], "netuid_1": [7, 11], "get_emission_value_by_subnet": [7, 11], "emit": [7, 11], "criteria": [7, 11], "met": [7, 11], "look": [7, 11], "complianc": [7, 11], "get_subnet": [7, 11], "overview": [7, 11], "get_all_subnets_info": [7, 11], "gain": [7, 11], "assist": [7, 11], "featur": [7, 11], "get_subnet_info": [7, 11], "stakehold": [7, 11], "interest": [7, 11], "particular": [7, 11], "broader": [7, 11], "get_subnet_hyperparamet": [7, 11], "comprehend": [7, 11], "get_subnet_own": [7, 11], "entiti": [7, 9, 11], "is_hotkey_deleg": [7, 11], "Being": [7, 11], "get_delegate_tak": [7, 11], "claim": [7, 11], "get_nominators_for_hotkei": [7, 11], "get_delegate_by_hotkei": [7, 11], "get_deleg": [7, 11], "popul": [7, 11], "holder": [7, 11], "get_stake_info_for_coldkei": [7, 11], "coldkey_ss58_list": [7, 11], "aggreg": [7, 11], "pattern": [7, 11], "simultan": [7, 11], "perspect": [7, 11], "strategi": [7, 11], "is_hotkey_registered_ani": [7, 11], "is_hotkey_registered_on_subnet": [7, 11], "area": [7, 11], "is_hotkey_regist": [7, 11], "aid": [7, 11], "elig": [7, 11], "get_uid_for_hotkey_on_subnet": [7, 11], "get_all_uids_for_hotkei": [7, 11], "get_netuids_for_hotkei": [7, 11], "illustr": [7, 11], "get_neuron_for_pubkey_and_subnet": [7, 11], "get_all_neurons_for_pubkei": [7, 11], "neuron_has_validator_permit": [7, 11], "permit": [7, 11], "regard": [7, 11], "neuron_for_wallet": [7, 11], "neuron_for_uid": [7, 11], "snapshot": [7, 9, 11], "neuron_for_uid_lit": [7, 11], "lightweight": [7, 11], "lite": [7, 9, 11], "focus": [7, 11], "simplifi": [7, 9, 11], "quick": [7, 11], "analys": [7, 9, 11], "neurons_lit": [7, 11], "streamlin": [7, 11], "sync": [7, 9, 11], "latest": [7, 9, 11], "topologi": [7, 11], "interconnect": [7, 11], "motiv": [7, 11], "driver": [7, 11], "assign": [7, 9, 11, 12], "perceiv": [7, 11], "approach": [7, 11], "measur": [7, 9, 11], "recogn": [7, 11], "nich": [7, 11], "associated_validator_ip_info": [7, 11], "identif": [7, 9, 11], "reliabl": [7, 9, 11], "get_subnet_burn_cost": [7, 11], "lock": [7, 11], "term": [7, 11], "viabil": [7, 11], "_do_deleg": [7, 11], "_do_undeleg": [7, 11], "_do_nomin": [7, 11], "_do_set_delegate_tak": [7, 11], "get_bal": [7, 11], "monitor": [7, 11], "capac": [7, 11], "get_current_block": [7, 11], "recent": [7, 11], "real": [7, 11], "sensit": [7, 9, 11], "refer": [7, 9, 11, 18], "landscap": [7, 11], "get_block_hash": [7, 11], "block_id": [7, 11], "cryptograph": [7, 9, 11], "immut": [7, 11], "technologi": [7, 11], "consist": [7, 9, 11], "trustworthi": [7, 9, 11], "all_command": 7, "neural": [7, 9], "graph": [7, 9], "backbon": [7, 9], "captur": [7, 9], "interconnected": [7, 9], "just": [7, 9], "live": [7, 9], "constantli": [7, 9], "akin": [7, 9], "yuma": [7, 9], "outlin": [7, 9], "distinguish": [7, 9], "n": [7, 9], "size": [7, 9, 12], "per": [7, 9], "score": [7, 9], "mainli": [7, 9], "miner": [7, 9, 18], "timestamp": [7, 9], "everyth": [7, 9], "propag": [7, 9], "embodi": [7, 9], "bt": [7, 9], "neuron_rank": [7, 9], "r": [7, 9], "neuron_incent": [7, 9], "deepcopi": [7, 9], "concept": [7, 9], "abil": [7, 9], "benefit": [7, 9], "greater": [7, 9], "respect": [7, 9], "emploi": [7, 9], "accru": [7, 9], "denot": [7, 9], "often": [7, 9], "central": [7, 9], "appropri": [7, 9, 10, 12], "much": [7, 9], "agre": [7, 9], "judgment": [7, 9], "agreement": [7, 9], "achiev": [7, 9], "reput": [7, 9], "past": [7, 9], "matrix": [7, 9], "infer": [7, 9], "suggest": [7, 9], "stronger": [7, 9], "tv": [7, 9], "encourag": [7, 9], "benefici": [7, 9], "belief": [7, 9], "correct": [7, 9], "addit": [7, 9], "proport": [7, 9], "wij": [], "ith": [], "row": [7, 9], "impli": [7, 9], "j": [7, 9], "mai": [7, 9], "offlin": [7, 9], "asset": [7, 9], "practic": [7, 9], "exchang": [7, 9], "basic": [7, 9], "easier": [7, 9], "quickli": [7, 9], "succinctli": [7, 9], "concis": [7, 9], "500": [7, 9], "simpli": [7, 9, 12], "formal": [7, 9], "clear": [7, 9, 10], "metagraph_repr": [7, 9], "mirror": [7, 9], "softwar": [7, 9], "well": [7, 9], "evolut": [7, 9], "examin": [7, 9], "quicker": [7, 9], "full": [7, 9], "overhead": [7, 9], "12345": [7, 9], "attempt": [7, 9, 12], "beyond": [7, 9], "300": [7, 9], "light": [7, 9], "_initialize_subtensor": [7, 9], "readi": [7, 9, 10], "_assign_neuron": [7, 9], "fetch": [7, 9], "relev": [7, 9], "_set_metagraph_attribut": [7, 9], "_create_tensor": [7, 9], "dtype": [7, 9, 13], "could": [7, 9], "etc": [7, 9], "float32": [7, 9], "int64": [7, 9], "neuron_stak": [7, 9], "_set_weights_and_bond": [7, 9], "obtain": [7, 9], "suitabl": [7, 9], "_process_weights_or_bond": [7, 9], "transform": [7, 9, 12], "unstructur": [7, 9], "come": [7, 9], "raw_weights_data": [7, 9], "_process_root_weight": [7, 9], "tailor": [7, 9], "root_weight": [7, 9], "raw_root_weights_data": [7, 9], "persist": [7, 9], "later": [7, 9], "reload": [7, 9], "load_from_path": [7, 9], "dir_path": [7, 9], "locat": [7, 9], "continu": [7, 9], "restart": [7, 9], "exact": [7, 9], "correctli": [7, 9], "accur": [7, 9], "reconstitut": [7, 9], "now": [7, 9], "prioritythreadpoolexecutor": [7, 14], "maxsiz": [7, 14], "thread_name_prefix": [7, 14], "initarg": [7, 14], "_base": [7, 14], "queue": [7, 14], "is_empti": [7, 14], "_counter": [7, 14], "fn": [7, 14], "schedul": [7, 14], "_adjust_thread_count": [7, 14], "_initializer_fail": [7, 14], "shutdown": [7, 14], "clean": [7, 14], "sever": [7, 14], "finish": [7, 14], "reclaim": [7, 14], "cancel_futur": [7, 14], "cancel": [7, 14], "pend": [7, 14], "get_siz": [7, 12], "obj": [7, 12], "seen": [7, 12], "find": [7, 12], "travers": [7, 12], "everi": [7, 12], "id": [7, 12], "cast_int": [7, 12], "integ": [7, 12], "cast_float": [7, 12], "terminalinfo": [7, 12], "pydant": [7, 10, 12, 13], "basemodel": [7, 10, 12, 13], "mixin": [7, 12], "__pretty__": [7, 12], "884": [7, 12], "devtool": [7, 12], "helpmanu": [7, 12], "io": [7, 12], "validate_assign": [7, 10, 12, 13], "status_cod": [7, 12], "_extract_status_cod": [7, 12], "status_messag": [7, 12], "process_tim": [7, 12], "_extract_process_tim": [7, 12], "_extract_port": [7, 12], "_extract_vers": [7, 12], "_extract_nonc": [7, 12], "uuid": [7, 12], "is_success": [7, 12], "200": [7, 12], "is_failur": [7, 12], "failur": [7, 12], "would": [7, 12], "is_timeout": [7, 12], "408": [7, 12], "is_blacklist": [7, 12], "403": [7, 12], "forbidden": [7, 12], "failed_verif": [7, 12], "401": [7, 12], "unauthor": [7, 12], "body_hash": [7, 12], "sha3": [7, 12], "compris": [7, 12], "required_fields_hash": [7, 12], "concaten": [7, 12], "hexadecim": [7, 12], "_extract_timeout": [7, 12], "total_s": [7, 12], "_extract_total_s": [7, 12], "header_s": [7, 12], "_extract_header_s": [7, 12], "computed_body_hash": [7, 12], "required_hash_field": [7, 12], "overridden": [7, 12], "subclass": [7, 10, 12], "superclass": [7, 12], "itself": [7, 10, 12], "set_name_typ": [7, 12], "__setattr__": [7, 12], "get_total_s": [7, 12], "to_head": [7, 12], "taken": [7, 12], "further": [7, 12], "parse_headers_to_input": [7, 12], "input_obj": [7, 12], "extract": [7, 10, 12], "from_head": [7, 12], "btstreamingresponsemodel": [7, 10], "streamer": [7, 10], "btstreamingrespons": [7, 10], "conform": [7, 10], "token_stream": [7, 10], "asgi": [7, 10], "abc": [7, 10], "streamingrespons": [7, 10], "develop": [7, 10], "instead": [7, 10], "create_streaming_respons": [7, 10], "stream_respons": [7, 10], "event": [7, 10], "__call__": [7, 10], "scope": [7, 10], "process_streaming_respons": [7, 10], "extract_response_json": [7, 10], "torch_dtyp": [7, 13], "cast_dtyp": [7, 13], "cast": [7, 13], "cast_shap": [7, 13], "buffer": [7, 13], "_extract_dtyp": [7, 13], "_extract_shap": [7, 13], "tolist": [7, 13], "numpi": [7, 13], "ndarrai": [7, 13], "encount": [7, 13], "get_save_dir": 9, "latest_block_path": 9, "threadpoolexecutor": 14, "__author__": 14, "brian": 14, "quinlan": 14, "sweetapp": 14, "_threads_queu": 14, "_shutdown": 14, "_workitem": 14, "null_entri": 14, "_worker": 14, "executor_refer": 14, "work_queu": 14, "brokenthreadpool": 14, "brokenexecutor": 14, "page": 17, "auto": 17, "bittensor": 17, "sphinx": 17, "autoapi": 17, "section": 18, "submodul": 18, "packag": 18, "content": 18, "follow": [], "site": [], "gemv": [], "sdk": [], "pdf": [], "academia": [], "neurips_dao_workshop_2022_3_3": [], "w_": [7, 9], "ij": [7, 9], "th": [7, 9]}, "objects": {"": [[7, 0, 0, "-", "bittensor"]], "bittensor": [[7, 1, 1, "", "ALL_COMMANDS"], [7, 2, 1, "", "AxonInfo"], [7, 2, 1, "", "BTStreamingResponseModel"], [7, 6, 1, "", "ChainConnectionError"], [7, 2, 1, "", "ChainDataType"], [7, 6, 1, "", "ChainError"], [7, 6, 1, "", "ChainQueryError"], [7, 6, 1, "", "ChainTransactionError"], [7, 2, 1, "", "DefaultConfig"], [7, 2, 1, "", "DelegateInfo"], [7, 2, 1, "", "IPInfo"], [7, 6, 1, "", "IdentityError"], [7, 6, 1, "", "InvalidConfigFile"], [7, 6, 1, "id0", "KeyFileError"], [7, 2, 1, "", "Mockkeyfile"], [7, 1, 1, "", "NACL_SALT"], [7, 2, 1, "", "NeuronInfo"], [7, 2, 1, "", "NeuronInfoLite"], [7, 6, 1, "", "NominationError"], [7, 6, 1, "", "NotDelegateError"], [7, 6, 1, "", "NotRegisteredError"], [7, 2, 1, "", "PriorityThreadPoolExecutor"], [7, 2, 1, "", "PrometheusInfo"], [7, 1, 1, "", "ProposalCallData"], [7, 2, 1, "", "ProposalVoteData"], [7, 1, 1, "", "RAOPERTAO"], [7, 6, 1, "", "RegistrationError"], [7, 6, 1, "", "StakeError"], [7, 2, 1, "", "StakeInfo"], [7, 2, 1, "", "StreamingSynapse"], [7, 2, 1, "", "SubnetHyperparameters"], [7, 2, 1, "", "SubnetInfo"], [7, 2, 1, "", "Synapse"], [7, 1, 1, "", "T"], [7, 1, 1, "", "TORCH_DTYPES"], [7, 2, 1, "", "Tensor"], [7, 2, 1, "", "TerminalInfo"], [7, 6, 1, "", "TransferError"], [7, 1, 1, "", "U16_MAX"], [7, 1, 1, "", "U64_MAX"], [7, 6, 1, "", "UnstakeError"], [7, 1, 1, "", "__archive_entrypoint__"], [7, 1, 1, "", "__bellagene_entrypoint__"], [7, 1, 1, "", "__blocktime__"], [7, 1, 1, "", "__console__"], [7, 1, 1, "", "__delegates_details_url__"], [7, 1, 1, "", "__finney_entrypoint__"], [7, 1, 1, "", "__finney_test_entrypoint__"], [7, 1, 1, "", "__local_entrypoint__"], [7, 1, 1, "", "__network_explorer_map__"], [7, 1, 1, "", "__networks__"], [7, 1, 1, "", "__new_signature_version__"], [7, 1, 1, "", "__pipaddress__"], [7, 1, 1, "", "__rao_symbol__"], [7, 1, 1, "", "__ss58_address_length__"], [7, 1, 1, "", "__ss58_format__"], [7, 1, 1, "", "__tao_symbol__"], [7, 1, 1, "", "__type_registry__"], [7, 1, 1, "", "__use_console__"], [7, 1, 1, "", "__version__"], [7, 1, 1, "", "__version_as_int__"], [7, 7, 1, "", "ask_password_to_encrypt"], [7, 2, 1, "", "axon"], [0, 0, 0, "-", "axon"], [1, 0, 0, "-", "btlogging"], [7, 7, 1, "", "cast_dtype"], [7, 7, 1, "", "cast_float"], [7, 7, 1, "", "cast_int"], [7, 7, 1, "", "cast_shape"], [2, 0, 0, "-", "chain_data"], [7, 2, 1, "", "cli"], [3, 0, 0, "-", "cli"], [7, 2, 1, "", "config"], [4, 0, 0, "-", "config"], [7, 1, 1, "", "configs"], [7, 1, 1, "", "custom_rpc_type_registry"], [7, 7, 1, "", "debug"], [7, 7, 1, "", "decrypt_keyfile_data"], [7, 1, 1, "", "defaults"], [7, 2, 1, "", "dendrite"], [5, 0, 0, "-", "dendrite"], [7, 7, 1, "", "deserialize_keypair_from_keyfile_data"], [7, 7, 1, "", "display_mnemonic_msg"], [7, 7, 1, "", "encrypt_keyfile_data"], [6, 0, 0, "-", "errors"], [7, 7, 1, "", "from_scale_encoding"], [7, 7, 1, "", "from_scale_encoding_using_type_string"], [7, 7, 1, "", "get_coldkey_password_from_environment"], [7, 7, 1, "", "get_size"], [8, 0, 0, "-", "keyfile"], [7, 7, 1, "", "keyfile_data_encryption_method"], [7, 7, 1, "", "keyfile_data_is_encrypted"], [7, 7, 1, "", "keyfile_data_is_encrypted_ansible"], [7, 7, 1, "", "keyfile_data_is_encrypted_legacy"], [7, 7, 1, "", "keyfile_data_is_encrypted_nacl"], [7, 7, 1, "", "legacy_encrypt_keyfile_data"], [7, 2, 1, "", "logging"], [9, 0, 0, "-", "metagraph"], [7, 7, 1, "", "serialized_keypair_to_keyfile_data"], [10, 0, 0, "-", "stream"], [11, 0, 0, "-", "subtensor"], [12, 0, 0, "-", "synapse"], [13, 0, 0, "-", "tensor"], [14, 0, 0, "-", "threadpool"], [7, 7, 1, "", "trace"], [7, 7, 1, "", "turn_console_off"], [7, 7, 1, "", "turn_console_on"], [15, 0, 0, "-", "types"], [7, 7, 1, "", "validate_password"], [7, 1, 1, "", "version_split"], [16, 0, 0, "-", "wallet"]], "bittensor.AxonInfo": [[7, 3, 1, "", "__eq__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 4, 1, "", "coldkey"], [7, 3, 1, "", "from_neuron_info"], [7, 3, 1, "", "from_parameter_dict"], [7, 3, 1, "", "from_string"], [7, 4, 1, "", "hotkey"], [7, 4, 1, "", "ip"], [7, 3, 1, "", "ip_str"], [7, 4, 1, "", "ip_type"], [7, 5, 1, "", "is_serving"], [7, 4, 1, "", "placeholder1"], [7, 4, 1, "", "placeholder2"], [7, 4, 1, "", "port"], [7, 4, 1, "", "protocol"], [7, 3, 1, "", "to_parameter_dict"], [7, 3, 1, "", "to_string"], [7, 4, 1, "", "version"]], "bittensor.BTStreamingResponseModel": [[7, 4, 1, "id9", "token_streamer"]], "bittensor.ChainDataType": [[7, 4, 1, "", "DelegateInfo"], [7, 4, 1, "", "DelegatedInfo"], [7, 4, 1, "", "IPInfo"], [7, 4, 1, "", "NeuronInfo"], [7, 4, 1, "", "NeuronInfoLite"], [7, 4, 1, "", "StakeInfo"], [7, 4, 1, "", "SubnetHyperparameters"], [7, 4, 1, "", "SubnetInfo"]], "bittensor.DefaultConfig": [[7, 3, 1, "", "default"]], "bittensor.DelegateInfo": [[7, 3, 1, "", "delegated_list_from_vec_u8"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_vec_u8"], [7, 4, 1, "", "hotkey_ss58"], [7, 3, 1, "", "list_from_vec_u8"], [7, 4, 1, "", "nominators"], [7, 4, 1, "", "owner_ss58"], [7, 4, 1, "", "registrations"], [7, 4, 1, "", "return_per_1000"], [7, 4, 1, "", "take"], [7, 4, 1, "", "total_daily_return"], [7, 4, 1, "", "total_stake"], [7, 4, 1, "", "validator_permits"]], "bittensor.IPInfo": [[7, 3, 1, "", "encode"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_parameter_dict"], [7, 3, 1, "", "from_vec_u8"], [7, 4, 1, "", "ip"], [7, 4, 1, "", "ip_type"], [7, 3, 1, "", "list_from_vec_u8"], [7, 4, 1, "", "protocol"], [7, 3, 1, "", "to_parameter_dict"]], "bittensor.Mockkeyfile": [[7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "check_and_update_encryption"], [7, 5, 1, "", "data"], [7, 3, 1, "", "decrypt"], [7, 3, 1, "", "encrypt"], [7, 3, 1, "", "exists_on_device"], [7, 3, 1, "", "get_keypair"], [7, 3, 1, "", "is_encrypted"], [7, 3, 1, "", "is_readable"], [7, 3, 1, "", "is_writable"], [7, 5, 1, "", "keypair"], [7, 3, 1, "", "make_dirs"], [7, 3, 1, "", "set_keypair"]], "bittensor.NeuronInfo": [[7, 3, 1, "", "_neuron_dict_to_namespace"], [7, 3, 1, "", "_null_neuron"], [7, 4, 1, "", "active"], [7, 4, 1, "", "axon_info"], [7, 4, 1, "", "bonds"], [7, 4, 1, "", "coldkey"], [7, 4, 1, "", "consensus"], [7, 4, 1, "", "dividends"], [7, 4, 1, "", "emission"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_vec_u8"], [7, 3, 1, "", "from_weights_bonds_and_neuron_lite"], [7, 4, 1, "", "hotkey"], [7, 4, 1, "", "incentive"], [7, 4, 1, "", "is_null"], [7, 4, 1, "", "last_update"], [7, 3, 1, "", "list_from_vec_u8"], [7, 4, 1, "", "netuid"], [7, 4, 1, "", "prometheus_info"], [7, 4, 1, "", "pruning_score"], [7, 4, 1, "", "rank"], [7, 4, 1, "", "stake"], [7, 4, 1, "", "stake_dict"], [7, 4, 1, "", "total_stake"], [7, 4, 1, "", "trust"], [7, 4, 1, "", "uid"], [7, 4, 1, "", "validator_permit"], [7, 4, 1, "", "validator_trust"], [7, 4, 1, "", "weights"]], "bittensor.NeuronInfoLite": [[7, 3, 1, "", "_neuron_dict_to_namespace"], [7, 3, 1, "", "_null_neuron"], [7, 4, 1, "", "active"], [7, 4, 1, "", "axon_info"], [7, 4, 1, "", "coldkey"], [7, 4, 1, "", "consensus"], [7, 4, 1, "", "dividends"], [7, 4, 1, "", "emission"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_vec_u8"], [7, 4, 1, "", "hotkey"], [7, 4, 1, "", "incentive"], [7, 4, 1, "", "is_null"], [7, 4, 1, "", "last_update"], [7, 3, 1, "", "list_from_vec_u8"], [7, 4, 1, "", "netuid"], [7, 4, 1, "", "prometheus_info"], [7, 4, 1, "", "pruning_score"], [7, 4, 1, "", "rank"], [7, 4, 1, "", "stake"], [7, 4, 1, "", "stake_dict"], [7, 4, 1, "", "total_stake"], [7, 4, 1, "", "trust"], [7, 4, 1, "", "uid"], [7, 4, 1, "", "validator_permit"], [7, 4, 1, "", "validator_trust"]], "bittensor.PriorityThreadPoolExecutor": [[7, 3, 1, "", "_adjust_thread_count"], [7, 4, 1, "", "_counter"], [7, 3, 1, "", "_initializer_failed"], [7, 3, 1, "", "add_args"], [7, 3, 1, "", "config"], [7, 5, 1, "", "is_empty"], [7, 3, 1, "", "shutdown"], [7, 3, 1, "", "submit"]], "bittensor.PrometheusInfo": [[7, 4, 1, "", "block"], [7, 3, 1, "", "fix_decoded_values"], [7, 4, 1, "", "ip"], [7, 4, 1, "", "ip_type"], [7, 4, 1, "", "port"], [7, 4, 1, "", "version"]], "bittensor.ProposalVoteData": [[7, 4, 1, "", "ayes"], [7, 4, 1, "", "end"], [7, 4, 1, "", "index"], [7, 4, 1, "", "nays"], [7, 4, 1, "", "threshold"]], "bittensor.StakeInfo": [[7, 4, 1, "", "coldkey_ss58"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_vec_u8"], [7, 4, 1, "", "hotkey_ss58"], [7, 3, 1, "", "list_from_vec_u8"], [7, 3, 1, "", "list_of_tuple_from_vec_u8"], [7, 4, 1, "", "stake"]], "bittensor.StreamingSynapse": [[7, 2, 1, "", "BTStreamingResponse"], [7, 2, 1, "", "Config"], [7, 3, 1, "", "create_streaming_response"], [7, 3, 1, "", "extract_response_json"], [7, 3, 1, "", "process_streaming_response"]], "bittensor.StreamingSynapse.BTStreamingResponse": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "stream_response"]], "bittensor.StreamingSynapse.Config": [[7, 4, 1, "", "validate_assignment"]], "bittensor.SubnetHyperparameters": [[7, 4, 1, "", "activity_cutoff"], [7, 4, 1, "", "adjustment_interval"], [7, 4, 1, "", "bonds_moving_avg"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_parameter_dict"], [7, 3, 1, "", "from_vec_u8"], [7, 4, 1, "", "immunity_period"], [7, 4, 1, "", "kappa"], [7, 3, 1, "", "list_from_vec_u8"], [7, 4, 1, "", "max_burn"], [7, 4, 1, "", "max_difficulty"], [7, 4, 1, "", "max_regs_per_block"], [7, 4, 1, "", "max_weight_limit"], [7, 4, 1, "", "min_allowed_weights"], [7, 4, 1, "", "min_burn"], [7, 4, 1, "", "min_difficulty"], [7, 4, 1, "", "registration_allowed"], [7, 4, 1, "", "rho"], [7, 4, 1, "", "target_regs_per_interval"], [7, 4, 1, "", "tempo"], [7, 3, 1, "", "to_parameter_dict"], [7, 4, 1, "", "weights_rate_limit"], [7, 4, 1, "", "weights_version"]], "bittensor.SubnetInfo": [[7, 4, 1, "", "blocks_since_epoch"], [7, 4, 1, "", "burn"], [7, 4, 1, "", "connection_requirements"], [7, 4, 1, "", "difficulty"], [7, 4, 1, "", "emission_value"], [7, 3, 1, "", "fix_decoded_values"], [7, 3, 1, "", "from_parameter_dict"], [7, 3, 1, "", "from_vec_u8"], [7, 4, 1, "", "immunity_period"], [7, 4, 1, "", "kappa"], [7, 3, 1, "", "list_from_vec_u8"], [7, 4, 1, "", "max_allowed_validators"], [7, 4, 1, "", "max_n"], [7, 4, 1, "", "max_weight_limit"], [7, 4, 1, "", "min_allowed_weights"], [7, 4, 1, "", "modality"], [7, 4, 1, "", "netuid"], [7, 4, 1, "", "owner_ss58"], [7, 4, 1, "", "rho"], [7, 4, 1, "", "scaling_law_power"], [7, 4, 1, "", "subnetwork_n"], [7, 4, 1, "", "tempo"], [7, 3, 1, "", "to_parameter_dict"]], "bittensor.Synapse": [[7, 2, 1, "", "Config"], [7, 3, 1, "", "__setattr__"], [7, 4, 1, "", "_extract_header_size"], [7, 4, 1, "", "_extract_timeout"], [7, 4, 1, "", "_extract_total_size"], [7, 4, 1, "", "axon"], [7, 5, 1, "", "body_hash"], [7, 4, 1, "", "computed_body_hash"], [7, 4, 1, "", "dendrite"], [7, 3, 1, "", "deserialize"], [7, 5, 1, "", "failed_verification"], [7, 3, 1, "", "from_headers"], [7, 3, 1, "", "get_total_size"], [7, 4, 1, "", "header_size"], [7, 5, 1, "", "is_blacklist"], [7, 5, 1, "", "is_failure"], [7, 5, 1, "", "is_success"], [7, 5, 1, "", "is_timeout"], [7, 4, 1, "", "name"], [7, 3, 1, "", "parse_headers_to_inputs"], [7, 4, 1, "", "required_hash_fields"], [7, 3, 1, "", "set_name_type"], [7, 4, 1, "", "timeout"], [7, 3, 1, "", "to_headers"], [7, 4, 1, "", "total_size"]], "bittensor.Synapse.Config": [[7, 4, 1, "", "validate_assignment"]], "bittensor.Tensor": [[7, 2, 1, "", "Config"], [7, 4, 1, "", "_extract_dtype"], [7, 4, 1, "", "_extract_shape"], [7, 4, 1, "id10", "buffer"], [7, 3, 1, "", "deserialize"], [7, 4, 1, "id11", "dtype"], [7, 3, 1, "", "numpy"], [7, 3, 1, "", "serialize"], [7, 4, 1, "id12", "shape"], [7, 3, 1, "", "tensor"], [7, 3, 1, "", "tolist"]], "bittensor.Tensor.Config": [[7, 4, 1, "", "validate_assignment"]], "bittensor.TerminalInfo": [[7, 2, 1, "", "Config"], [7, 4, 1, "", "_extract_nonce"], [7, 4, 1, "", "_extract_port"], [7, 4, 1, "", "_extract_process_time"], [7, 4, 1, "", "_extract_status_code"], [7, 4, 1, "", "_extract_version"], [7, 4, 1, "", "hotkey"], [7, 4, 1, "", "ip"], [7, 4, 1, "", "nonce"], [7, 4, 1, "", "port"], [7, 4, 1, "", "process_time"], [7, 4, 1, "", "signature"], [7, 4, 1, "", "status_code"], [7, 4, 1, "", "status_message"], [7, 4, 1, "", "uuid"], [7, 4, 1, "", "version"]], "bittensor.TerminalInfo.Config": [[7, 4, 1, "", "validate_assignment"]], "bittensor.axon": [[0, 2, 1, "", "AxonMiddleware"], [0, 2, 1, "", "FastAPIThreadedServer"], [7, 3, 1, "", "__del__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "add_args"], [7, 3, 1, "", "attach"], [0, 2, 1, "", "axon"], [7, 3, 1, "", "check_config"], [7, 3, 1, "", "config"], [7, 3, 1, "", "default_verify"], [7, 3, 1, "", "help"], [7, 3, 1, "", "info"], [7, 3, 1, "", "serve"], [7, 3, 1, "", "start"], [7, 3, 1, "", "stop"], [7, 3, 1, "", "to_string"], [7, 3, 1, "", "verify_body_integrity"]], "bittensor.axon.AxonMiddleware": [[0, 3, 1, "", "blacklist"], [0, 3, 1, "", "dispatch"], [0, 3, 1, "", "postprocess"], [0, 3, 1, "", "preprocess"], [0, 3, 1, "", "priority"], [0, 3, 1, "", "run"], [0, 3, 1, "", "verify"]], "bittensor.axon.FastAPIThreadedServer": [[0, 3, 1, "", "_wrapper_run"], [0, 3, 1, "", "install_signal_handlers"], [0, 4, 1, "", "is_running"], [0, 3, 1, "", "run_in_thread"], [0, 4, 1, "", "should_exit"], [0, 3, 1, "", "start"], [0, 3, 1, "", "stop"]], "bittensor.axon.axon": [[0, 3, 1, "", "__del__"], [0, 3, 1, "", "__repr__"], [0, 3, 1, "", "__str__"], [0, 3, 1, "", "add_args"], [0, 3, 1, "", "attach"], [0, 3, 1, "", "check_config"], [0, 3, 1, "", "config"], [0, 3, 1, "", "default_verify"], [0, 3, 1, "", "help"], [0, 3, 1, "", "info"], [0, 3, 1, "", "serve"], [0, 3, 1, "", "start"], [0, 3, 1, "", "stop"], [0, 3, 1, "", "to_string"], [0, 3, 1, "", "verify_body_integrity"]], "bittensor.btlogging": [[1, 7, 1, "", "_remove_loguru_ansi_directive"], [1, 1, 1, "", "logger"], [1, 2, 1, "", "logging"]], "bittensor.btlogging.logging": [[1, 4, 1, "", "__debug_on__"], [1, 4, 1, "", "__file_sink__"], [1, 4, 1, "", "__has_been_inited__"], [1, 4, 1, "", "__std_sink__"], [1, 4, 1, "", "__trace_on__"], [1, 3, 1, "", "_format"], [1, 3, 1, "", "add_args"], [1, 3, 1, "", "check_config"], [1, 3, 1, "", "config"], [1, 3, 1, "", "debug"], [1, 3, 1, "", "error"], [1, 3, 1, "", "exception"], [1, 3, 1, "", "get_level"], [1, 3, 1, "", "help"], [1, 3, 1, "", "info"], [1, 3, 1, "", "log_filter"], [1, 3, 1, "", "log_formatter"], [1, 3, 1, "", "log_save_filter"], [1, 3, 1, "", "log_save_formatter"], [1, 3, 1, "", "set_debug"], [1, 3, 1, "", "set_trace"], [1, 3, 1, "", "success"], [1, 3, 1, "", "trace"], [1, 3, 1, "", "warning"]], "bittensor.chain_data": [[2, 2, 1, "", "AxonInfo"], [2, 2, 1, "", "ChainDataType"], [2, 2, 1, "", "DelegateInfo"], [2, 2, 1, "", "IPInfo"], [2, 2, 1, "", "NeuronInfo"], [2, 2, 1, "", "NeuronInfoLite"], [2, 2, 1, "", "PrometheusInfo"], [2, 1, 1, "", "ProposalCallData"], [2, 2, 1, "", "ProposalVoteData"], [2, 1, 1, "", "RAOPERTAO"], [2, 2, 1, "", "StakeInfo"], [2, 2, 1, "", "SubnetHyperparameters"], [2, 2, 1, "", "SubnetInfo"], [2, 1, 1, "", "U16_MAX"], [2, 1, 1, "", "U64_MAX"], [2, 1, 1, "", "custom_rpc_type_registry"], [2, 7, 1, "", "from_scale_encoding"], [2, 7, 1, "", "from_scale_encoding_using_type_string"]], "bittensor.chain_data.AxonInfo": [[2, 3, 1, "", "__eq__"], [2, 3, 1, "", "__repr__"], [2, 3, 1, "", "__str__"], [2, 4, 1, "", "coldkey"], [2, 3, 1, "", "from_neuron_info"], [2, 3, 1, "", "from_parameter_dict"], [2, 3, 1, "", "from_string"], [2, 4, 1, "", "hotkey"], [2, 4, 1, "", "ip"], [2, 3, 1, "", "ip_str"], [2, 4, 1, "", "ip_type"], [2, 5, 1, "", "is_serving"], [2, 4, 1, "", "placeholder1"], [2, 4, 1, "", "placeholder2"], [2, 4, 1, "", "port"], [2, 4, 1, "", "protocol"], [2, 3, 1, "", "to_parameter_dict"], [2, 3, 1, "", "to_string"], [2, 4, 1, "", "version"]], "bittensor.chain_data.ChainDataType": [[2, 4, 1, "", "DelegateInfo"], [2, 4, 1, "", "DelegatedInfo"], [2, 4, 1, "", "IPInfo"], [2, 4, 1, "", "NeuronInfo"], [2, 4, 1, "", "NeuronInfoLite"], [2, 4, 1, "", "StakeInfo"], [2, 4, 1, "", "SubnetHyperparameters"], [2, 4, 1, "", "SubnetInfo"]], "bittensor.chain_data.DelegateInfo": [[2, 3, 1, "", "delegated_list_from_vec_u8"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_vec_u8"], [2, 4, 1, "", "hotkey_ss58"], [2, 3, 1, "", "list_from_vec_u8"], [2, 4, 1, "", "nominators"], [2, 4, 1, "", "owner_ss58"], [2, 4, 1, "", "registrations"], [2, 4, 1, "", "return_per_1000"], [2, 4, 1, "", "take"], [2, 4, 1, "", "total_daily_return"], [2, 4, 1, "", "total_stake"], [2, 4, 1, "", "validator_permits"]], "bittensor.chain_data.IPInfo": [[2, 3, 1, "", "encode"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_parameter_dict"], [2, 3, 1, "", "from_vec_u8"], [2, 4, 1, "", "ip"], [2, 4, 1, "", "ip_type"], [2, 3, 1, "", "list_from_vec_u8"], [2, 4, 1, "", "protocol"], [2, 3, 1, "", "to_parameter_dict"]], "bittensor.chain_data.NeuronInfo": [[2, 3, 1, "", "_neuron_dict_to_namespace"], [2, 3, 1, "", "_null_neuron"], [2, 4, 1, "", "active"], [2, 4, 1, "", "axon_info"], [2, 4, 1, "", "bonds"], [2, 4, 1, "", "coldkey"], [2, 4, 1, "", "consensus"], [2, 4, 1, "", "dividends"], [2, 4, 1, "", "emission"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_vec_u8"], [2, 3, 1, "", "from_weights_bonds_and_neuron_lite"], [2, 4, 1, "", "hotkey"], [2, 4, 1, "", "incentive"], [2, 4, 1, "", "is_null"], [2, 4, 1, "", "last_update"], [2, 3, 1, "", "list_from_vec_u8"], [2, 4, 1, "", "netuid"], [2, 4, 1, "", "prometheus_info"], [2, 4, 1, "", "pruning_score"], [2, 4, 1, "", "rank"], [2, 4, 1, "", "stake"], [2, 4, 1, "", "stake_dict"], [2, 4, 1, "", "total_stake"], [2, 4, 1, "", "trust"], [2, 4, 1, "", "uid"], [2, 4, 1, "", "validator_permit"], [2, 4, 1, "", "validator_trust"], [2, 4, 1, "", "weights"]], "bittensor.chain_data.NeuronInfoLite": [[2, 3, 1, "", "_neuron_dict_to_namespace"], [2, 3, 1, "", "_null_neuron"], [2, 4, 1, "", "active"], [2, 4, 1, "", "axon_info"], [2, 4, 1, "", "coldkey"], [2, 4, 1, "", "consensus"], [2, 4, 1, "", "dividends"], [2, 4, 1, "", "emission"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_vec_u8"], [2, 4, 1, "", "hotkey"], [2, 4, 1, "", "incentive"], [2, 4, 1, "", "is_null"], [2, 4, 1, "", "last_update"], [2, 3, 1, "", "list_from_vec_u8"], [2, 4, 1, "", "netuid"], [2, 4, 1, "", "prometheus_info"], [2, 4, 1, "", "pruning_score"], [2, 4, 1, "", "rank"], [2, 4, 1, "", "stake"], [2, 4, 1, "", "stake_dict"], [2, 4, 1, "", "total_stake"], [2, 4, 1, "", "trust"], [2, 4, 1, "", "uid"], [2, 4, 1, "", "validator_permit"], [2, 4, 1, "", "validator_trust"]], "bittensor.chain_data.PrometheusInfo": [[2, 4, 1, "", "block"], [2, 3, 1, "", "fix_decoded_values"], [2, 4, 1, "", "ip"], [2, 4, 1, "", "ip_type"], [2, 4, 1, "", "port"], [2, 4, 1, "", "version"]], "bittensor.chain_data.ProposalVoteData": [[2, 4, 1, "", "ayes"], [2, 4, 1, "", "end"], [2, 4, 1, "", "index"], [2, 4, 1, "", "nays"], [2, 4, 1, "", "threshold"]], "bittensor.chain_data.StakeInfo": [[2, 4, 1, "", "coldkey_ss58"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_vec_u8"], [2, 4, 1, "", "hotkey_ss58"], [2, 3, 1, "", "list_from_vec_u8"], [2, 3, 1, "", "list_of_tuple_from_vec_u8"], [2, 4, 1, "", "stake"]], "bittensor.chain_data.SubnetHyperparameters": [[2, 4, 1, "", "activity_cutoff"], [2, 4, 1, "", "adjustment_interval"], [2, 4, 1, "", "bonds_moving_avg"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_parameter_dict"], [2, 3, 1, "", "from_vec_u8"], [2, 4, 1, "", "immunity_period"], [2, 4, 1, "", "kappa"], [2, 3, 1, "", "list_from_vec_u8"], [2, 4, 1, "", "max_burn"], [2, 4, 1, "", "max_difficulty"], [2, 4, 1, "", "max_regs_per_block"], [2, 4, 1, "", "max_weight_limit"], [2, 4, 1, "", "min_allowed_weights"], [2, 4, 1, "", "min_burn"], [2, 4, 1, "", "min_difficulty"], [2, 4, 1, "", "registration_allowed"], [2, 4, 1, "", "rho"], [2, 4, 1, "", "target_regs_per_interval"], [2, 4, 1, "", "tempo"], [2, 3, 1, "", "to_parameter_dict"], [2, 4, 1, "", "weights_rate_limit"], [2, 4, 1, "", "weights_version"]], "bittensor.chain_data.SubnetInfo": [[2, 4, 1, "", "blocks_since_epoch"], [2, 4, 1, "", "burn"], [2, 4, 1, "", "connection_requirements"], [2, 4, 1, "", "difficulty"], [2, 4, 1, "", "emission_value"], [2, 3, 1, "", "fix_decoded_values"], [2, 3, 1, "", "from_parameter_dict"], [2, 3, 1, "", "from_vec_u8"], [2, 4, 1, "", "immunity_period"], [2, 4, 1, "", "kappa"], [2, 3, 1, "", "list_from_vec_u8"], [2, 4, 1, "", "max_allowed_validators"], [2, 4, 1, "", "max_n"], [2, 4, 1, "", "max_weight_limit"], [2, 4, 1, "", "min_allowed_weights"], [2, 4, 1, "", "modality"], [2, 4, 1, "", "netuid"], [2, 4, 1, "", "owner_ss58"], [2, 4, 1, "", "rho"], [2, 4, 1, "", "scaling_law_power"], [2, 4, 1, "", "subnetwork_n"], [2, 4, 1, "", "tempo"], [2, 3, 1, "", "to_parameter_dict"]], "bittensor.cli": [[3, 1, 1, "", "ALIAS_TO_COMMAND"], [3, 1, 1, "", "COMMANDS"], [7, 3, 1, "", "__create_parser__"], [7, 3, 1, "", "check_config"], [3, 2, 1, "", "cli"], [3, 1, 1, "", "console"], [7, 3, 1, "", "create_config"], [7, 3, 1, "", "run"]], "bittensor.cli.cli": [[3, 3, 1, "", "__create_parser__"], [3, 3, 1, "", "check_config"], [3, 3, 1, "", "create_config"], [3, 3, 1, "", "run"]], "bittensor.config": [[4, 2, 1, "", "DefaultConfig"], [4, 6, 1, "", "InvalidConfigFile"], [4, 1, 1, "", "T"], [7, 3, 1, "", "__deepcopy__"], [7, 4, 1, "", "__is_set"], [7, 3, 1, "", "__parse_args__"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__split_params__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "_merge"], [7, 3, 1, "", "_remove_private_keys"], [4, 2, 1, "", "config"], [7, 3, 1, "", "copy"], [7, 3, 1, "", "is_set"], [7, 3, 1, "", "merge"], [7, 3, 1, "", "merge_all"], [7, 3, 1, "", "to_string"], [7, 3, 1, "", "update_with_kwargs"]], "bittensor.config.DefaultConfig": [[4, 3, 1, "", "default"]], "bittensor.config.config": [[4, 3, 1, "", "__deepcopy__"], [4, 4, 1, "", "__is_set"], [4, 3, 1, "", "__parse_args__"], [4, 3, 1, "", "__repr__"], [4, 3, 1, "", "__split_params__"], [4, 3, 1, "", "__str__"], [4, 3, 1, "", "_merge"], [4, 3, 1, "", "_remove_private_keys"], [4, 3, 1, "", "copy"], [4, 3, 1, "", "is_set"], [4, 3, 1, "", "merge"], [4, 3, 1, "", "merge_all"], [4, 3, 1, "", "to_string"], [4, 3, 1, "", "update_with_kwargs"]], "bittensor.dendrite": [[7, 3, 1, "", "__aenter__"], [7, 3, 1, "", "__aexit__"], [7, 3, 1, "", "__del__"], [7, 3, 1, "id30", "__repr__"], [7, 3, 1, "id29", "__str__"], [7, 3, 1, "", "_get_endpoint_url"], [7, 3, 1, "", "_handle_request_errors"], [7, 3, 1, "", "_log_incoming_response"], [7, 3, 1, "", "_log_outgoing_request"], [7, 3, 1, "id22", "aclose_session"], [7, 3, 1, "id25", "call"], [7, 3, 1, "id26", "call_stream"], [7, 3, 1, "id21", "close_session"], [5, 2, 1, "", "dendrite"], [7, 4, 1, "", "external_ip"], [7, 3, 1, "id24", "forward"], [7, 4, 1, "", "keypair"], [7, 3, 1, "id27", "preprocess_synapse_for_request"], [7, 3, 1, "id28", "process_server_response"], [7, 3, 1, "id23", "query"], [7, 5, 1, "", "session"], [7, 4, 1, "", "synapse_history"]], "bittensor.dendrite.dendrite": [[5, 3, 1, "", "__aenter__"], [5, 3, 1, "", "__aexit__"], [5, 3, 1, "", "__del__"], [5, 3, 1, "id9", "__repr__"], [5, 3, 1, "id8", "__str__"], [5, 3, 1, "", "_get_endpoint_url"], [5, 3, 1, "", "_handle_request_errors"], [5, 3, 1, "", "_log_incoming_response"], [5, 3, 1, "", "_log_outgoing_request"], [5, 3, 1, "id1", "aclose_session"], [5, 3, 1, "id4", "call"], [5, 3, 1, "id5", "call_stream"], [5, 3, 1, "id0", "close_session"], [5, 4, 1, "", "external_ip"], [5, 3, 1, "id3", "forward"], [5, 4, 1, "", "keypair"], [5, 3, 1, "id6", "preprocess_synapse_for_request"], [5, 3, 1, "id7", "process_server_response"], [5, 3, 1, "id2", "query"], [5, 5, 1, "", "session"], [5, 4, 1, "", "synapse_history"]], "bittensor.errors": [[6, 6, 1, "", "ChainConnectionError"], [6, 6, 1, "", "ChainError"], [6, 6, 1, "", "ChainQueryError"], [6, 6, 1, "", "ChainTransactionError"], [6, 6, 1, "", "IdentityError"], [6, 6, 1, "", "KeyFileError"], [6, 6, 1, "", "NominationError"], [6, 6, 1, "", "NotDelegateError"], [6, 6, 1, "", "NotRegisteredError"], [6, 6, 1, "", "RegistrationError"], [6, 6, 1, "", "StakeError"], [6, 6, 1, "", "TransferError"], [6, 6, 1, "", "UnstakeError"]], "bittensor.keyfile": [[8, 2, 1, "", "Mockkeyfile"], [8, 1, 1, "", "NACL_SALT"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "_may_overwrite"], [7, 3, 1, "", "_read_keyfile_data_from_file"], [7, 3, 1, "", "_write_keyfile_data_to_file"], [8, 7, 1, "", "ask_password_to_encrypt"], [7, 3, 1, "", "check_and_update_encryption"], [7, 5, 1, "", "data"], [7, 3, 1, "", "decrypt"], [8, 7, 1, "", "decrypt_keyfile_data"], [8, 7, 1, "", "deserialize_keypair_from_keyfile_data"], [7, 3, 1, "", "encrypt"], [8, 7, 1, "", "encrypt_keyfile_data"], [7, 3, 1, "", "exists_on_device"], [8, 7, 1, "", "get_coldkey_password_from_environment"], [7, 3, 1, "", "get_keypair"], [7, 3, 1, "", "is_encrypted"], [7, 3, 1, "", "is_readable"], [7, 3, 1, "", "is_writable"], [8, 2, 1, "", "keyfile"], [7, 5, 1, "", "keyfile_data"], [8, 7, 1, "", "keyfile_data_encryption_method"], [8, 7, 1, "", "keyfile_data_is_encrypted"], [8, 7, 1, "", "keyfile_data_is_encrypted_ansible"], [8, 7, 1, "", "keyfile_data_is_encrypted_legacy"], [8, 7, 1, "", "keyfile_data_is_encrypted_nacl"], [7, 5, 1, "", "keypair"], [8, 7, 1, "", "legacy_encrypt_keyfile_data"], [7, 3, 1, "", "make_dirs"], [8, 7, 1, "", "serialized_keypair_to_keyfile_data"], [7, 3, 1, "", "set_keypair"], [8, 7, 1, "", "validate_password"]], "bittensor.keyfile.Mockkeyfile": [[8, 3, 1, "", "__repr__"], [8, 3, 1, "", "__str__"], [8, 3, 1, "", "check_and_update_encryption"], [8, 5, 1, "", "data"], [8, 3, 1, "", "decrypt"], [8, 3, 1, "", "encrypt"], [8, 3, 1, "", "exists_on_device"], [8, 3, 1, "", "get_keypair"], [8, 3, 1, "", "is_encrypted"], [8, 3, 1, "", "is_readable"], [8, 3, 1, "", "is_writable"], [8, 5, 1, "", "keypair"], [8, 3, 1, "", "make_dirs"], [8, 3, 1, "", "set_keypair"]], "bittensor.keyfile.keyfile": [[8, 3, 1, "", "__repr__"], [8, 3, 1, "", "__str__"], [8, 3, 1, "", "_may_overwrite"], [8, 3, 1, "", "_read_keyfile_data_from_file"], [8, 3, 1, "", "_write_keyfile_data_to_file"], [8, 3, 1, "", "check_and_update_encryption"], [8, 5, 1, "", "data"], [8, 3, 1, "", "decrypt"], [8, 3, 1, "", "encrypt"], [8, 3, 1, "", "exists_on_device"], [8, 3, 1, "", "get_keypair"], [8, 3, 1, "", "is_encrypted"], [8, 3, 1, "", "is_readable"], [8, 3, 1, "", "is_writable"], [8, 5, 1, "", "keyfile_data"], [8, 5, 1, "", "keypair"], [8, 3, 1, "", "make_dirs"], [8, 3, 1, "", "set_keypair"]], "bittensor.logging": [[7, 4, 1, "", "__debug_on__"], [7, 4, 1, "", "__file_sink__"], [7, 4, 1, "", "__has_been_inited__"], [7, 4, 1, "", "__std_sink__"], [7, 4, 1, "", "__trace_on__"], [7, 3, 1, "", "_format"], [7, 3, 1, "", "add_args"], [7, 3, 1, "", "check_config"], [7, 3, 1, "", "config"], [7, 3, 1, "", "debug"], [7, 3, 1, "", "error"], [7, 3, 1, "", "exception"], [7, 3, 1, "", "get_level"], [7, 3, 1, "", "help"], [7, 3, 1, "", "info"], [7, 3, 1, "", "log_filter"], [7, 3, 1, "", "log_formatter"], [7, 3, 1, "", "log_save_filter"], [7, 3, 1, "", "log_save_formatter"], [7, 3, 1, "", "set_debug"], [7, 3, 1, "", "set_trace"], [7, 3, 1, "", "success"], [7, 3, 1, "", "trace"], [7, 3, 1, "", "warning"]], "bittensor.metagraph": [[7, 5, 1, "", "B"], [7, 5, 1, "", "C"], [7, 5, 1, "", "D"], [7, 5, 1, "", "E"], [7, 5, 1, "", "I"], [7, 5, 1, "", "R"], [7, 5, 1, "", "S"], [7, 5, 1, "", "T"], [7, 5, 1, "", "Tv"], [7, 5, 1, "", "W"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "_assign_neurons"], [7, 3, 1, "", "_create_tensor"], [7, 3, 1, "", "_initialize_subtensor"], [7, 3, 1, "", "_process_root_weights"], [7, 3, 1, "", "_process_weights_or_bonds"], [7, 3, 1, "", "_set_metagraph_attributes"], [7, 3, 1, "", "_set_weights_and_bonds"], [7, 5, 1, "", "addresses"], [7, 5, 1, "", "coldkeys"], [9, 7, 1, "", "get_save_dir"], [7, 5, 1, "", "hotkeys"], [9, 7, 1, "", "latest_block_path"], [7, 3, 1, "", "load"], [7, 3, 1, "", "load_from_path"], [7, 3, 1, "", "metadata"], [9, 2, 1, "", "metagraph"], [7, 3, 1, "", "save"], [7, 3, 1, "", "sync"]], "bittensor.metagraph.metagraph": [[9, 5, 1, "", "B"], [9, 5, 1, "", "C"], [9, 5, 1, "", "D"], [9, 5, 1, "", "E"], [9, 5, 1, "", "I"], [9, 5, 1, "", "R"], [9, 5, 1, "", "S"], [9, 5, 1, "", "T"], [9, 5, 1, "", "Tv"], [9, 5, 1, "", "W"], [9, 3, 1, "", "__repr__"], [9, 3, 1, "", "__str__"], [9, 3, 1, "", "_assign_neurons"], [9, 3, 1, "", "_create_tensor"], [9, 3, 1, "", "_initialize_subtensor"], [9, 3, 1, "", "_process_root_weights"], [9, 3, 1, "", "_process_weights_or_bonds"], [9, 3, 1, "", "_set_metagraph_attributes"], [9, 3, 1, "", "_set_weights_and_bonds"], [9, 5, 1, "", "addresses"], [9, 5, 1, "", "coldkeys"], [9, 5, 1, "", "hotkeys"], [9, 3, 1, "", "load"], [9, 3, 1, "", "load_from_path"], [9, 3, 1, "", "metadata"], [9, 3, 1, "", "save"], [9, 3, 1, "", "sync"]], "bittensor.stream": [[10, 2, 1, "", "BTStreamingResponseModel"], [10, 2, 1, "", "StreamingSynapse"]], "bittensor.stream.BTStreamingResponseModel": [[10, 4, 1, "id0", "token_streamer"]], "bittensor.stream.StreamingSynapse": [[10, 2, 1, "", "BTStreamingResponse"], [10, 2, 1, "", "Config"], [10, 3, 1, "", "create_streaming_response"], [10, 3, 1, "", "extract_response_json"], [10, 3, 1, "", "process_streaming_response"]], "bittensor.stream.StreamingSynapse.BTStreamingResponse": [[10, 3, 1, "", "__call__"], [10, 3, 1, "", "stream_response"]], "bittensor.stream.StreamingSynapse.Config": [[10, 4, 1, "", "validate_assignment"]], "bittensor.subtensor": [[11, 2, 1, "", "ParamWithTypes"], [7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "_do_associate_ips"], [7, 3, 1, "", "_do_burned_register"], [7, 3, 1, "", "_do_delegation"], [7, 3, 1, "", "_do_nominate"], [7, 3, 1, "", "_do_pow_register"], [7, 3, 1, "", "_do_root_register"], [7, 3, 1, "", "_do_serve_axon"], [7, 3, 1, "", "_do_serve_prometheus"], [7, 3, 1, "", "_do_set_delegate_take"], [7, 3, 1, "", "_do_set_weights"], [7, 3, 1, "", "_do_stake"], [7, 3, 1, "", "_do_transfer"], [7, 3, 1, "", "_do_undelegation"], [7, 3, 1, "", "_do_unstake"], [7, 3, 1, "", "_encode_params"], [7, 3, 1, "", "_null_neuron"], [7, 3, 1, "", "add_args"], [7, 3, 1, "", "add_stake"], [7, 3, 1, "", "add_stake_multiple"], [7, 3, 1, "", "associated_validator_ip_info"], [7, 5, 1, "", "block"], [7, 3, 1, "", "blocks_since_epoch"], [7, 3, 1, "", "bonds"], [7, 3, 1, "", "burn"], [7, 3, 1, "", "burned_register"], [7, 4, 1, "", "chain_endpoint"], [7, 3, 1, "", "config"], [7, 3, 1, "", "delegate"], [7, 3, 1, "", "determine_chain_endpoint_and_network"], [7, 3, 1, "", "difficulty"], [7, 3, 1, "", "does_hotkey_exist"], [7, 3, 1, "", "get_all_neurons_for_pubkey"], [7, 3, 1, "", "get_all_subnet_netuids"], [7, 3, 1, "", "get_all_subnets_info"], [7, 3, 1, "", "get_all_uids_for_hotkey"], [7, 3, 1, "", "get_axon_info"], [7, 3, 1, "", "get_balance"], [7, 3, 1, "", "get_balances"], [7, 3, 1, "", "get_block_hash"], [7, 3, 1, "", "get_current_block"], [7, 3, 1, "", "get_delegate_by_hotkey"], [7, 3, 1, "", "get_delegate_take"], [7, 3, 1, "", "get_delegated"], [7, 3, 1, "", "get_delegates"], [7, 3, 1, "", "get_emission_value_by_subnet"], [7, 3, 1, "", "get_existential_deposit"], [7, 3, 1, "", "get_hotkey_owner"], [7, 3, 1, "", "get_netuids_for_hotkey"], [7, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [7, 3, 1, "", "get_nominators_for_hotkey"], [7, 3, 1, "", "get_prometheus_info"], [7, 3, 1, "", "get_proposal_call_data"], [7, 3, 1, "", "get_proposal_hashes"], [7, 4, 1, "", "get_proposal_vote_data"], [7, 3, 1, "", "get_proposals"], [7, 3, 1, "", "get_senate_members"], [7, 3, 1, "", "get_stake"], [7, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [7, 3, 1, "", "get_stake_info_for_coldkey"], [7, 3, 1, "", "get_stake_info_for_coldkeys"], [7, 3, 1, "", "get_subnet_burn_cost"], [7, 3, 1, "", "get_subnet_connection_requirement"], [7, 3, 1, "", "get_subnet_connection_requirements"], [7, 3, 1, "", "get_subnet_hyperparameters"], [7, 3, 1, "", "get_subnet_info"], [7, 3, 1, "", "get_subnet_modality"], [7, 3, 1, "", "get_subnet_owner"], [7, 3, 1, "", "get_subnets"], [7, 3, 1, "", "get_total_stake_for_coldkey"], [7, 3, 1, "", "get_total_stake_for_hotkey"], [7, 3, 1, "", "get_total_subnets"], [7, 3, 1, "", "get_transfer_fee"], [7, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [7, 3, 1, "", "get_vote_data"], [7, 3, 1, "", "help"], [7, 3, 1, "", "immunity_period"], [7, 3, 1, "", "incentive"], [7, 3, 1, "", "is_hotkey_delegate"], [7, 3, 1, "", "is_hotkey_registered"], [7, 3, 1, "", "is_hotkey_registered_any"], [7, 3, 1, "", "is_hotkey_registered_on_subnet"], [7, 3, 1, "", "is_senate_member"], [7, 3, 1, "", "kappa"], [7, 3, 1, "", "leave_senate"], [11, 1, 1, "", "logger"], [7, 3, 1, "", "max_allowed_validators"], [7, 3, 1, "", "max_n"], [7, 3, 1, "", "max_weight_limit"], [7, 3, 1, "", "metagraph"], [7, 3, 1, "", "min_allowed_weights"], [7, 4, 1, "", "network"], [7, 3, 1, "", "neuron_for_uid"], [7, 3, 1, "", "neuron_for_uid_lite"], [7, 3, 1, "", "neuron_for_wallet"], [7, 3, 1, "", "neuron_has_validator_permit"], [7, 3, 1, "", "neurons"], [7, 3, 1, "", "neurons_lite"], [7, 3, 1, "", "nominate"], [7, 3, 1, "", "query_constant"], [7, 3, 1, "", "query_identity"], [7, 3, 1, "", "query_map"], [7, 3, 1, "", "query_map_subtensor"], [7, 3, 1, "", "query_module"], [7, 3, 1, "", "query_runtime_api"], [7, 3, 1, "", "query_subtensor"], [7, 3, 1, "", "register"], [7, 3, 1, "", "register_senate"], [7, 3, 1, "", "register_subnetwork"], [7, 3, 1, "", "rho"], [7, 3, 1, "", "root_register"], [7, 3, 1, "", "root_set_weights"], [7, 3, 1, "", "run_faucet"], [7, 3, 1, "", "scaling_law_power"], [7, 3, 1, "", "serve"], [7, 3, 1, "", "serve_axon"], [7, 3, 1, "", "serve_prometheus"], [7, 3, 1, "", "serving_rate_limit"], [7, 3, 1, "", "set_delegate_take"], [7, 3, 1, "", "set_hyperparameter"], [7, 3, 1, "", "set_weights"], [7, 3, 1, "", "setup_config"], [7, 3, 1, "", "state_call"], [7, 3, 1, "", "subnet_exists"], [7, 3, 1, "", "subnetwork_n"], [11, 2, 1, "", "subtensor"], [7, 3, 1, "", "synergy_scaling_law_power"], [7, 3, 1, "", "tempo"], [7, 3, 1, "", "total_issuance"], [7, 3, 1, "", "total_stake"], [7, 3, 1, "", "transfer"], [7, 3, 1, "", "tx_rate_limit"], [7, 3, 1, "", "undelegate"], [7, 3, 1, "", "unstake"], [7, 3, 1, "", "unstake_multiple"], [7, 3, 1, "", "update_identity"], [7, 3, 1, "", "validator_batch_size"], [7, 3, 1, "", "validator_epoch_length"], [7, 3, 1, "", "validator_epochs_per_reset"], [7, 3, 1, "", "validator_exclude_quantile"], [7, 3, 1, "", "validator_logits_divergence"], [7, 3, 1, "", "validator_prune_len"], [7, 3, 1, "", "validator_sequence_length"], [7, 3, 1, "", "vote_senate"], [7, 3, 1, "", "weights"]], "bittensor.subtensor.ParamWithTypes": [[11, 4, 1, "", "name"], [11, 4, 1, "", "type"]], "bittensor.subtensor.subtensor": [[11, 3, 1, "", "__repr__"], [11, 3, 1, "", "__str__"], [11, 3, 1, "", "_do_associate_ips"], [11, 3, 1, "", "_do_burned_register"], [11, 3, 1, "", "_do_delegation"], [11, 3, 1, "", "_do_nominate"], [11, 3, 1, "", "_do_pow_register"], [11, 3, 1, "", "_do_root_register"], [11, 3, 1, "", "_do_serve_axon"], [11, 3, 1, "", "_do_serve_prometheus"], [11, 3, 1, "", "_do_set_delegate_take"], [11, 3, 1, "", "_do_set_weights"], [11, 3, 1, "", "_do_stake"], [11, 3, 1, "", "_do_transfer"], [11, 3, 1, "", "_do_undelegation"], [11, 3, 1, "", "_do_unstake"], [11, 3, 1, "", "_encode_params"], [11, 3, 1, "", "_null_neuron"], [11, 3, 1, "", "add_args"], [11, 3, 1, "", "add_stake"], [11, 3, 1, "", "add_stake_multiple"], [11, 3, 1, "", "associated_validator_ip_info"], [11, 5, 1, "", "block"], [11, 3, 1, "", "blocks_since_epoch"], [11, 3, 1, "", "bonds"], [11, 3, 1, "", "burn"], [11, 3, 1, "", "burned_register"], [11, 4, 1, "", "chain_endpoint"], [11, 3, 1, "", "config"], [11, 3, 1, "", "delegate"], [11, 3, 1, "", "determine_chain_endpoint_and_network"], [11, 3, 1, "", "difficulty"], [11, 3, 1, "", "does_hotkey_exist"], [11, 3, 1, "", "get_all_neurons_for_pubkey"], [11, 3, 1, "", "get_all_subnet_netuids"], [11, 3, 1, "", "get_all_subnets_info"], [11, 3, 1, "", "get_all_uids_for_hotkey"], [11, 3, 1, "", "get_axon_info"], [11, 3, 1, "", "get_balance"], [11, 3, 1, "", "get_balances"], [11, 3, 1, "", "get_block_hash"], [11, 3, 1, "", "get_current_block"], [11, 3, 1, "", "get_delegate_by_hotkey"], [11, 3, 1, "", "get_delegate_take"], [11, 3, 1, "", "get_delegated"], [11, 3, 1, "", "get_delegates"], [11, 3, 1, "", "get_emission_value_by_subnet"], [11, 3, 1, "", "get_existential_deposit"], [11, 3, 1, "", "get_hotkey_owner"], [11, 3, 1, "", "get_netuids_for_hotkey"], [11, 3, 1, "", "get_neuron_for_pubkey_and_subnet"], [11, 3, 1, "", "get_nominators_for_hotkey"], [11, 3, 1, "", "get_prometheus_info"], [11, 3, 1, "", "get_proposal_call_data"], [11, 3, 1, "", "get_proposal_hashes"], [11, 4, 1, "", "get_proposal_vote_data"], [11, 3, 1, "", "get_proposals"], [11, 3, 1, "", "get_senate_members"], [11, 3, 1, "", "get_stake"], [11, 3, 1, "", "get_stake_for_coldkey_and_hotkey"], [11, 3, 1, "", "get_stake_info_for_coldkey"], [11, 3, 1, "", "get_stake_info_for_coldkeys"], [11, 3, 1, "", "get_subnet_burn_cost"], [11, 3, 1, "", "get_subnet_connection_requirement"], [11, 3, 1, "", "get_subnet_connection_requirements"], [11, 3, 1, "", "get_subnet_hyperparameters"], [11, 3, 1, "", "get_subnet_info"], [11, 3, 1, "", "get_subnet_modality"], [11, 3, 1, "", "get_subnet_owner"], [11, 3, 1, "", "get_subnets"], [11, 3, 1, "", "get_total_stake_for_coldkey"], [11, 3, 1, "", "get_total_stake_for_hotkey"], [11, 3, 1, "", "get_total_subnets"], [11, 3, 1, "", "get_transfer_fee"], [11, 3, 1, "", "get_uid_for_hotkey_on_subnet"], [11, 3, 1, "", "get_vote_data"], [11, 3, 1, "", "help"], [11, 3, 1, "", "immunity_period"], [11, 3, 1, "", "incentive"], [11, 3, 1, "", "is_hotkey_delegate"], [11, 3, 1, "", "is_hotkey_registered"], [11, 3, 1, "", "is_hotkey_registered_any"], [11, 3, 1, "", "is_hotkey_registered_on_subnet"], [11, 3, 1, "", "is_senate_member"], [11, 3, 1, "", "kappa"], [11, 3, 1, "", "leave_senate"], [11, 3, 1, "", "max_allowed_validators"], [11, 3, 1, "", "max_n"], [11, 3, 1, "", "max_weight_limit"], [11, 3, 1, "", "metagraph"], [11, 3, 1, "", "min_allowed_weights"], [11, 4, 1, "", "network"], [11, 3, 1, "", "neuron_for_uid"], [11, 3, 1, "", "neuron_for_uid_lite"], [11, 3, 1, "", "neuron_for_wallet"], [11, 3, 1, "", "neuron_has_validator_permit"], [11, 3, 1, "", "neurons"], [11, 3, 1, "", "neurons_lite"], [11, 3, 1, "", "nominate"], [11, 3, 1, "", "query_constant"], [11, 3, 1, "", "query_identity"], [11, 3, 1, "", "query_map"], [11, 3, 1, "", "query_map_subtensor"], [11, 3, 1, "", "query_module"], [11, 3, 1, "", "query_runtime_api"], [11, 3, 1, "", "query_subtensor"], [11, 3, 1, "", "register"], [11, 3, 1, "", "register_senate"], [11, 3, 1, "", "register_subnetwork"], [11, 3, 1, "", "rho"], [11, 3, 1, "", "root_register"], [11, 3, 1, "", "root_set_weights"], [11, 3, 1, "", "run_faucet"], [11, 3, 1, "", "scaling_law_power"], [11, 3, 1, "", "serve"], [11, 3, 1, "", "serve_axon"], [11, 3, 1, "", "serve_prometheus"], [11, 3, 1, "", "serving_rate_limit"], [11, 3, 1, "", "set_delegate_take"], [11, 3, 1, "", "set_hyperparameter"], [11, 3, 1, "", "set_weights"], [11, 3, 1, "", "setup_config"], [11, 3, 1, "", "state_call"], [11, 3, 1, "", "subnet_exists"], [11, 3, 1, "", "subnetwork_n"], [11, 3, 1, "", "synergy_scaling_law_power"], [11, 3, 1, "", "tempo"], [11, 3, 1, "", "total_issuance"], [11, 3, 1, "", "total_stake"], [11, 3, 1, "", "transfer"], [11, 3, 1, "", "tx_rate_limit"], [11, 3, 1, "", "undelegate"], [11, 3, 1, "", "unstake"], [11, 3, 1, "", "unstake_multiple"], [11, 3, 1, "", "update_identity"], [11, 3, 1, "", "validator_batch_size"], [11, 3, 1, "", "validator_epoch_length"], [11, 3, 1, "", "validator_epochs_per_reset"], [11, 3, 1, "", "validator_exclude_quantile"], [11, 3, 1, "", "validator_logits_divergence"], [11, 3, 1, "", "validator_prune_len"], [11, 3, 1, "", "validator_sequence_length"], [11, 3, 1, "", "vote_senate"], [11, 3, 1, "", "weights"]], "bittensor.synapse": [[12, 2, 1, "", "Synapse"], [12, 2, 1, "", "TerminalInfo"], [12, 7, 1, "", "cast_float"], [12, 7, 1, "", "cast_int"], [12, 7, 1, "", "get_size"]], "bittensor.synapse.Synapse": [[12, 2, 1, "", "Config"], [12, 3, 1, "", "__setattr__"], [12, 4, 1, "", "_extract_header_size"], [12, 4, 1, "", "_extract_timeout"], [12, 4, 1, "", "_extract_total_size"], [12, 4, 1, "", "axon"], [12, 5, 1, "", "body_hash"], [12, 4, 1, "", "computed_body_hash"], [12, 4, 1, "", "dendrite"], [12, 3, 1, "", "deserialize"], [12, 5, 1, "", "failed_verification"], [12, 3, 1, "", "from_headers"], [12, 3, 1, "", "get_total_size"], [12, 4, 1, "", "header_size"], [12, 5, 1, "", "is_blacklist"], [12, 5, 1, "", "is_failure"], [12, 5, 1, "", "is_success"], [12, 5, 1, "", "is_timeout"], [12, 4, 1, "", "name"], [12, 3, 1, "", "parse_headers_to_inputs"], [12, 4, 1, "", "required_hash_fields"], [12, 3, 1, "", "set_name_type"], [12, 4, 1, "", "timeout"], [12, 3, 1, "", "to_headers"], [12, 4, 1, "", "total_size"]], "bittensor.synapse.Synapse.Config": [[12, 4, 1, "", "validate_assignment"]], "bittensor.synapse.TerminalInfo": [[12, 2, 1, "", "Config"], [12, 4, 1, "", "_extract_nonce"], [12, 4, 1, "", "_extract_port"], [12, 4, 1, "", "_extract_process_time"], [12, 4, 1, "", "_extract_status_code"], [12, 4, 1, "", "_extract_version"], [12, 4, 1, "", "hotkey"], [12, 4, 1, "", "ip"], [12, 4, 1, "", "nonce"], [12, 4, 1, "", "port"], [12, 4, 1, "", "process_time"], [12, 4, 1, "", "signature"], [12, 4, 1, "", "status_code"], [12, 4, 1, "", "status_message"], [12, 4, 1, "", "uuid"], [12, 4, 1, "", "version"]], "bittensor.synapse.TerminalInfo.Config": [[12, 4, 1, "", "validate_assignment"]], "bittensor.tensor": [[13, 1, 1, "", "TORCH_DTYPES"], [13, 2, 1, "", "Tensor"], [13, 7, 1, "", "cast_dtype"], [13, 7, 1, "", "cast_shape"], [13, 2, 1, "", "tensor"]], "bittensor.tensor.Tensor": [[13, 2, 1, "", "Config"], [13, 4, 1, "", "_extract_dtype"], [13, 4, 1, "", "_extract_shape"], [13, 4, 1, "id0", "buffer"], [13, 3, 1, "", "deserialize"], [13, 4, 1, "id1", "dtype"], [13, 3, 1, "", "numpy"], [13, 3, 1, "", "serialize"], [13, 4, 1, "id2", "shape"], [13, 3, 1, "", "tensor"], [13, 3, 1, "", "tolist"]], "bittensor.tensor.Tensor.Config": [[13, 4, 1, "", "validate_assignment"]], "bittensor.threadpool": [[14, 6, 1, "", "BrokenThreadPool"], [14, 1, 1, "", "NULL_ENTRY"], [14, 2, 1, "", "PriorityThreadPoolExecutor"], [14, 2, 1, "", "_WorkItem"], [14, 1, 1, "", "__author__"], [14, 1, 1, "", "_shutdown"], [14, 1, 1, "", "_threads_queues"], [14, 7, 1, "", "_worker"]], "bittensor.threadpool.PriorityThreadPoolExecutor": [[14, 3, 1, "", "_adjust_thread_count"], [14, 4, 1, "", "_counter"], [14, 3, 1, "", "_initializer_failed"], [14, 3, 1, "", "add_args"], [14, 3, 1, "", "config"], [14, 5, 1, "", "is_empty"], [14, 3, 1, "", "shutdown"], [14, 3, 1, "", "submit"]], "bittensor.threadpool._WorkItem": [[14, 3, 1, "", "run"]], "bittensor.types": [[15, 2, 1, "", "AxonServeCallParams"], [15, 2, 1, "", "PrometheusServeCallParams"]], "bittensor.types.AxonServeCallParams": [[15, 4, 1, "", "ip"], [15, 4, 1, "", "ip_type"], [15, 4, 1, "", "netuid"], [15, 4, 1, "", "port"], [15, 4, 1, "", "version"]], "bittensor.types.PrometheusServeCallParams": [[15, 4, 1, "", "ip"], [15, 4, 1, "", "ip_type"], [15, 4, 1, "", "netuid"], [15, 4, 1, "", "port"], [15, 4, 1, "", "version"]], "bittensor.wallet": [[7, 3, 1, "", "__repr__"], [7, 3, 1, "", "__str__"], [7, 3, 1, "", "add_args"], [7, 5, 1, "", "coldkey"], [7, 5, 1, "", "coldkey_file"], [7, 5, 1, "", "coldkeypub"], [7, 5, 1, "", "coldkeypub_file"], [7, 3, 1, "", "config"], [7, 3, 1, "", "create"], [7, 3, 1, "", "create_coldkey_from_uri"], [7, 3, 1, "", "create_hotkey_from_uri"], [7, 3, 1, "", "create_if_non_existent"], [7, 3, 1, "", "create_new_coldkey"], [7, 3, 1, "", "create_new_hotkey"], [16, 7, 1, "", "display_mnemonic_msg"], [7, 3, 1, "", "get_coldkey"], [7, 3, 1, "", "get_coldkeypub"], [7, 3, 1, "", "get_hotkey"], [7, 3, 1, "", "help"], [7, 5, 1, "", "hotkey"], [7, 5, 1, "", "hotkey_file"], [7, 3, 1, "", "new_coldkey"], [7, 3, 1, "", "new_hotkey"], [7, 3, 1, "", "recreate"], [7, 4, 1, "", "regen_coldkey"], [7, 4, 1, "", "regen_coldkeypub"], [7, 4, 1, "", "regen_hotkey"], [7, 3, 1, "", "regenerate_coldkey"], [7, 3, 1, "", "regenerate_coldkeypub"], [7, 3, 1, "", "regenerate_hotkey"], [7, 3, 1, "", "set_coldkey"], [7, 3, 1, "", "set_coldkeypub"], [7, 3, 1, "", "set_hotkey"], [16, 2, 1, "", "wallet"]], "bittensor.wallet.wallet": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "__str__"], [16, 3, 1, "", "add_args"], [16, 5, 1, "", "coldkey"], [16, 5, 1, "", "coldkey_file"], [16, 5, 1, "", "coldkeypub"], [16, 5, 1, "", "coldkeypub_file"], [16, 3, 1, "", "config"], [16, 3, 1, "", "create"], [16, 3, 1, "", "create_coldkey_from_uri"], [16, 3, 1, "", "create_hotkey_from_uri"], [16, 3, 1, "", "create_if_non_existent"], [16, 3, 1, "", "create_new_coldkey"], [16, 3, 1, "", "create_new_hotkey"], [16, 3, 1, "", "get_coldkey"], [16, 3, 1, "", "get_coldkeypub"], [16, 3, 1, "", "get_hotkey"], [16, 3, 1, "", "help"], [16, 5, 1, "", "hotkey"], [16, 5, 1, "", "hotkey_file"], [16, 3, 1, "", "new_coldkey"], [16, 3, 1, "", "new_hotkey"], [16, 3, 1, "", "recreate"], [16, 4, 1, "", "regen_coldkey"], [16, 4, 1, "", "regen_coldkeypub"], [16, 4, 1, "", "regen_hotkey"], [16, 3, 1, "", "regenerate_coldkey"], [16, 3, 1, "", "regenerate_coldkeypub"], [16, 3, 1, "", "regenerate_hotkey"], [16, 3, 1, "", "set_coldkey"], [16, 3, 1, "", "set_coldkeypub"], [16, 3, 1, "", "set_hotkey"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "function", "Python function"]}, "titleterms": {"bittensor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "axon": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "btlog": 1, "function": [1, 2, 7, 8, 9, 12, 13, 14, 16], "attribut": [1, 2, 3, 4, 7, 8, 11, 13, 14], "chain_data": 2, "cli": 3, "config": 4, "dendrit": 5, "error": 6, "submodul": 7, "packag": 7, "keyfil": 8, "metagraph": 9, "stream": 10, "subtensor": 11, "synaps": 12, "tensor": 13, "threadpool": 14, "type": 15, "wallet": 16, "api": [17, 18], "refer": 17, "welcom": 18, "document": 18, "updat": [], "28": [], "march": [], "2022": [], "25": [], "februari": [], "05": [], "novemb": [], "2021": []}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Welcome to Bittensor API Documentation": [[18, "welcome-to-bittensor-api-documentation"]], "bittensor.axon": [[0, "module-bittensor.axon"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"]], "bittensor.btlogging": [[1, "module-bittensor.btlogging"]], "Functions": [[1, "functions"], [2, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [16, "functions"]], "Attributes": [[1, "attributes"], [2, "attributes"], [3, "attributes"], [4, "attributes"], [7, "attributes"], [8, "attributes"], [11, "attributes"], [13, "attributes"], [14, "attributes"]], "bittensor.chain_data": [[2, "module-bittensor.chain_data"]], "bittensor.cli": [[3, "module-bittensor.cli"]], "bittensor.config": [[4, "module-bittensor.config"]], "bittensor.dendrite": [[5, "module-bittensor.dendrite"]], "bittensor.errors": [[6, "module-bittensor.errors"]], "bittensor": [[7, "module-bittensor"]], "Submodules": [[7, "submodules"]], "Package Contents": [[7, "package-contents"]], "bittensor.keyfile": [[8, "module-bittensor.keyfile"]], "bittensor.metagraph": [[9, "module-bittensor.metagraph"]], "bittensor.stream": [[10, "module-bittensor.stream"]], "bittensor.subtensor": [[11, "module-bittensor.subtensor"]], "bittensor.synapse": [[12, "module-bittensor.synapse"]], "bittensor.tensor": [[13, "module-bittensor.tensor"]], "bittensor.threadpool": [[14, "module-bittensor.threadpool"]], "bittensor.types": [[15, "module-bittensor.types"]], "bittensor.wallet": [[16, "module-bittensor.wallet"]], "API Reference": [[17, "api-reference"]]}, "indexentries": {"axonmiddleware (class in bittensor.axon)": [[0, "bittensor.axon.AxonMiddleware"]], "fastapithreadedserver (class in bittensor.axon)": [[0, "bittensor.axon.FastAPIThreadedServer"]], "__del__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__del__"]], "__repr__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__repr__"]], "__str__() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.__str__"]], "_wrapper_run() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer._wrapper_run"]], "add_args() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.add_args"]], "attach() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.attach"]], "axon (class in bittensor.axon)": [[0, "bittensor.axon.axon"]], "bittensor.axon": [[0, "module-bittensor.axon"]], "blacklist() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.blacklist"]], "check_config() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.check_config"]], "config() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.config"]], "default_verify() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.default_verify"]], "dispatch() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.dispatch"]], "help() (bittensor.axon.axon class method)": [[0, "bittensor.axon.axon.help"]], "info() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.info"]], "install_signal_handlers() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.install_signal_handlers"]], "is_running (bittensor.axon.fastapithreadedserver attribute)": [[0, "bittensor.axon.FastAPIThreadedServer.is_running"]], "module": [[0, "module-bittensor.axon"], [1, "module-bittensor.btlogging"], [2, "module-bittensor.chain_data"], [3, "module-bittensor.cli"], [4, "module-bittensor.config"], [5, "module-bittensor.dendrite"], [6, "module-bittensor.errors"], [7, "module-bittensor"], [8, "module-bittensor.keyfile"], [9, "module-bittensor.metagraph"], [10, "module-bittensor.stream"], [11, "module-bittensor.subtensor"], [12, "module-bittensor.synapse"], [13, "module-bittensor.tensor"], [14, "module-bittensor.threadpool"], [15, "module-bittensor.types"], [16, "module-bittensor.wallet"]], "postprocess() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.postprocess"]], "preprocess() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.preprocess"]], "priority() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.priority"]], "run() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.run"]], "run_in_thread() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.run_in_thread"]], "serve() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.serve"]], "should_exit (bittensor.axon.fastapithreadedserver attribute)": [[0, "bittensor.axon.FastAPIThreadedServer.should_exit"]], "start() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.start"]], "start() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.start"]], "stop() (bittensor.axon.fastapithreadedserver method)": [[0, "bittensor.axon.FastAPIThreadedServer.stop"]], "stop() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.stop"]], "to_string() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.to_string"]], "verify() (bittensor.axon.axonmiddleware method)": [[0, "bittensor.axon.AxonMiddleware.verify"]], "verify_body_integrity() (bittensor.axon.axon method)": [[0, "bittensor.axon.axon.verify_body_integrity"]], "__debug_on__ (bittensor.btlogging.logging attribute)": [[1, "bittensor.btlogging.logging.__debug_on__"]], "__file_sink__ (bittensor.btlogging.logging attribute)": [[1, "bittensor.btlogging.logging.__file_sink__"]], "__has_been_inited__ (bittensor.btlogging.logging attribute)": [[1, "bittensor.btlogging.logging.__has_been_inited__"]], "__std_sink__ (bittensor.btlogging.logging attribute)": [[1, "bittensor.btlogging.logging.__std_sink__"]], "__trace_on__ (bittensor.btlogging.logging attribute)": [[1, "bittensor.btlogging.logging.__trace_on__"]], "_format() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging._format"]], "_remove_loguru_ansi_directive() (in module bittensor.btlogging)": [[1, "bittensor.btlogging._remove_loguru_ansi_directive"]], "add_args() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.add_args"]], "bittensor.btlogging": [[1, "module-bittensor.btlogging"]], "check_config() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.check_config"]], "config() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.config"]], "debug() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.debug"]], "error() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.error"]], "exception() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.exception"]], "get_level() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.get_level"]], "help() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.help"]], "info() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.info"]], "log_filter() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.log_filter"]], "log_formatter() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.log_formatter"]], "log_save_filter() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.log_save_filter"]], "log_save_formatter() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.log_save_formatter"]], "logger (in module bittensor.btlogging)": [[1, "bittensor.btlogging.logger"]], "logging (class in bittensor.btlogging)": [[1, "bittensor.btlogging.logging"]], "set_debug() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.set_debug"]], "set_trace() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.set_trace"]], "success() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.success"]], "trace() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.trace"]], "warning() (bittensor.btlogging.logging class method)": [[1, "bittensor.btlogging.logging.warning"]], "axoninfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.AxonInfo"]], "chaindatatype (class in bittensor.chain_data)": [[2, "bittensor.chain_data.ChainDataType"]], "delegateinfo (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.DelegateInfo"]], "delegateinfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.DelegateInfo"]], "delegatedinfo (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.DelegatedInfo"]], "ipinfo (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.IPInfo"]], "ipinfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.IPInfo"]], "neuroninfo (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.NeuronInfo"]], "neuroninfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.NeuronInfo"]], "neuroninfolite (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.NeuronInfoLite"]], "neuroninfolite (class in bittensor.chain_data)": [[2, "bittensor.chain_data.NeuronInfoLite"]], "prometheusinfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.PrometheusInfo"]], "proposalcalldata (in module bittensor.chain_data)": [[2, "bittensor.chain_data.ProposalCallData"]], "proposalvotedata (class in bittensor.chain_data)": [[2, "bittensor.chain_data.ProposalVoteData"]], "raopertao (in module bittensor.chain_data)": [[2, "bittensor.chain_data.RAOPERTAO"]], "stakeinfo (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.StakeInfo"]], "stakeinfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.StakeInfo"]], "subnethyperparameters (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.SubnetHyperparameters"]], "subnethyperparameters (class in bittensor.chain_data)": [[2, "bittensor.chain_data.SubnetHyperparameters"]], "subnetinfo (bittensor.chain_data.chaindatatype attribute)": [[2, "bittensor.chain_data.ChainDataType.SubnetInfo"]], "subnetinfo (class in bittensor.chain_data)": [[2, "bittensor.chain_data.SubnetInfo"]], "u16_max (in module bittensor.chain_data)": [[2, "bittensor.chain_data.U16_MAX"]], "u64_max (in module bittensor.chain_data)": [[2, "bittensor.chain_data.U64_MAX"]], "__eq__() (bittensor.chain_data.axoninfo method)": [[2, "bittensor.chain_data.AxonInfo.__eq__"]], "__repr__() (bittensor.chain_data.axoninfo method)": [[2, "bittensor.chain_data.AxonInfo.__repr__"]], "__str__() (bittensor.chain_data.axoninfo method)": [[2, "bittensor.chain_data.AxonInfo.__str__"]], "_neuron_dict_to_namespace() (bittensor.chain_data.neuroninfo static method)": [[2, "bittensor.chain_data.NeuronInfo._neuron_dict_to_namespace"]], "_neuron_dict_to_namespace() (bittensor.chain_data.neuroninfolite static method)": [[2, "bittensor.chain_data.NeuronInfoLite._neuron_dict_to_namespace"]], "_null_neuron() (bittensor.chain_data.neuroninfo static method)": [[2, "bittensor.chain_data.NeuronInfo._null_neuron"]], "_null_neuron() (bittensor.chain_data.neuroninfolite static method)": [[2, "bittensor.chain_data.NeuronInfoLite._null_neuron"]], "active (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.active"]], "active (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.active"]], "activity_cutoff (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.activity_cutoff"]], "adjustment_interval (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.adjustment_interval"]], "axon_info (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.axon_info"]], "axon_info (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.axon_info"]], "ayes (bittensor.chain_data.proposalvotedata attribute)": [[2, "bittensor.chain_data.ProposalVoteData.ayes"]], "bittensor.chain_data": [[2, "module-bittensor.chain_data"]], "block (bittensor.chain_data.prometheusinfo attribute)": [[2, "bittensor.chain_data.PrometheusInfo.block"]], "blocks_since_epoch (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.blocks_since_epoch"]], "bonds (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.bonds"]], "bonds_moving_avg (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.bonds_moving_avg"]], "burn (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.burn"]], "coldkey (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.coldkey"]], "coldkey (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.coldkey"]], "coldkey (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.coldkey"]], "coldkey_ss58 (bittensor.chain_data.stakeinfo attribute)": [[2, "bittensor.chain_data.StakeInfo.coldkey_ss58"]], "connection_requirements (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.connection_requirements"]], "consensus (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.consensus"]], "consensus (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.consensus"]], "custom_rpc_type_registry (in module bittensor.chain_data)": [[2, "bittensor.chain_data.custom_rpc_type_registry"]], "delegated_list_from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[2, "bittensor.chain_data.DelegateInfo.delegated_list_from_vec_u8"]], "difficulty (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.difficulty"]], "dividends (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.dividends"]], "dividends (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.dividends"]], "emission (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.emission"]], "emission (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.emission"]], "emission_value (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.emission_value"]], "encode() (bittensor.chain_data.ipinfo method)": [[2, "bittensor.chain_data.IPInfo.encode"]], "end (bittensor.chain_data.proposalvotedata attribute)": [[2, "bittensor.chain_data.ProposalVoteData.end"]], "fix_decoded_values() (bittensor.chain_data.delegateinfo class method)": [[2, "bittensor.chain_data.DelegateInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.ipinfo class method)": [[2, "bittensor.chain_data.IPInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.neuroninfo class method)": [[2, "bittensor.chain_data.NeuronInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.neuroninfolite class method)": [[2, "bittensor.chain_data.NeuronInfoLite.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.prometheusinfo class method)": [[2, "bittensor.chain_data.PrometheusInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.stakeinfo class method)": [[2, "bittensor.chain_data.StakeInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.subnethyperparameters class method)": [[2, "bittensor.chain_data.SubnetHyperparameters.fix_decoded_values"]], "fix_decoded_values() (bittensor.chain_data.subnetinfo class method)": [[2, "bittensor.chain_data.SubnetInfo.fix_decoded_values"]], "from_neuron_info() (bittensor.chain_data.axoninfo class method)": [[2, "bittensor.chain_data.AxonInfo.from_neuron_info"]], "from_parameter_dict() (bittensor.chain_data.axoninfo class method)": [[2, "bittensor.chain_data.AxonInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.chain_data.ipinfo class method)": [[2, "bittensor.chain_data.IPInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.chain_data.subnethyperparameters class method)": [[2, "bittensor.chain_data.SubnetHyperparameters.from_parameter_dict"]], "from_parameter_dict() (bittensor.chain_data.subnetinfo class method)": [[2, "bittensor.chain_data.SubnetInfo.from_parameter_dict"]], "from_scale_encoding() (in module bittensor.chain_data)": [[2, "bittensor.chain_data.from_scale_encoding"]], "from_scale_encoding_using_type_string() (in module bittensor.chain_data)": [[2, "bittensor.chain_data.from_scale_encoding_using_type_string"]], "from_string() (bittensor.chain_data.axoninfo class method)": [[2, "bittensor.chain_data.AxonInfo.from_string"]], "from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[2, "bittensor.chain_data.DelegateInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.ipinfo class method)": [[2, "bittensor.chain_data.IPInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.neuroninfo class method)": [[2, "bittensor.chain_data.NeuronInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.neuroninfolite class method)": [[2, "bittensor.chain_data.NeuronInfoLite.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[2, "bittensor.chain_data.StakeInfo.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.subnethyperparameters class method)": [[2, "bittensor.chain_data.SubnetHyperparameters.from_vec_u8"]], "from_vec_u8() (bittensor.chain_data.subnetinfo class method)": [[2, "bittensor.chain_data.SubnetInfo.from_vec_u8"]], "from_weights_bonds_and_neuron_lite() (bittensor.chain_data.neuroninfo class method)": [[2, "bittensor.chain_data.NeuronInfo.from_weights_bonds_and_neuron_lite"]], "hotkey (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.hotkey"]], "hotkey (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.hotkey"]], "hotkey (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.hotkey"]], "hotkey_ss58 (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.hotkey_ss58"]], "hotkey_ss58 (bittensor.chain_data.stakeinfo attribute)": [[2, "bittensor.chain_data.StakeInfo.hotkey_ss58"]], "immunity_period (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.immunity_period"]], "immunity_period (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.immunity_period"]], "incentive (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.incentive"]], "incentive (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.incentive"]], "index (bittensor.chain_data.proposalvotedata attribute)": [[2, "bittensor.chain_data.ProposalVoteData.index"]], "ip (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.ip"]], "ip (bittensor.chain_data.ipinfo attribute)": [[2, "bittensor.chain_data.IPInfo.ip"]], "ip (bittensor.chain_data.prometheusinfo attribute)": [[2, "bittensor.chain_data.PrometheusInfo.ip"]], "ip_str() (bittensor.chain_data.axoninfo method)": [[2, "bittensor.chain_data.AxonInfo.ip_str"]], "ip_type (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.ip_type"]], "ip_type (bittensor.chain_data.ipinfo attribute)": [[2, "bittensor.chain_data.IPInfo.ip_type"]], "ip_type (bittensor.chain_data.prometheusinfo attribute)": [[2, "bittensor.chain_data.PrometheusInfo.ip_type"]], "is_null (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.is_null"]], "is_null (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.is_null"]], "is_serving (bittensor.chain_data.axoninfo property)": [[2, "bittensor.chain_data.AxonInfo.is_serving"]], "kappa (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.kappa"]], "kappa (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.kappa"]], "last_update (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.last_update"]], "last_update (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.last_update"]], "list_from_vec_u8() (bittensor.chain_data.delegateinfo class method)": [[2, "bittensor.chain_data.DelegateInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.ipinfo class method)": [[2, "bittensor.chain_data.IPInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.neuroninfo class method)": [[2, "bittensor.chain_data.NeuronInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.neuroninfolite class method)": [[2, "bittensor.chain_data.NeuronInfoLite.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[2, "bittensor.chain_data.StakeInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.subnethyperparameters class method)": [[2, "bittensor.chain_data.SubnetHyperparameters.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.chain_data.subnetinfo class method)": [[2, "bittensor.chain_data.SubnetInfo.list_from_vec_u8"]], "list_of_tuple_from_vec_u8() (bittensor.chain_data.stakeinfo class method)": [[2, "bittensor.chain_data.StakeInfo.list_of_tuple_from_vec_u8"]], "max_allowed_validators (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.max_allowed_validators"]], "max_burn (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.max_burn"]], "max_difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.max_difficulty"]], "max_n (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.max_n"]], "max_regs_per_block (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.max_regs_per_block"]], "max_weight_limit (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.max_weight_limit"]], "max_weight_limit (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.max_weight_limit"]], "min_allowed_weights (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.min_allowed_weights"]], "min_allowed_weights (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.min_allowed_weights"]], "min_burn (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.min_burn"]], "min_difficulty (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.min_difficulty"]], "modality (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.modality"]], "nays (bittensor.chain_data.proposalvotedata attribute)": [[2, "bittensor.chain_data.ProposalVoteData.nays"]], "netuid (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.netuid"]], "netuid (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.netuid"]], "netuid (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.netuid"]], "nominators (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.nominators"]], "owner_ss58 (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.owner_ss58"]], "owner_ss58 (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.owner_ss58"]], "placeholder1 (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.placeholder1"]], "placeholder2 (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.placeholder2"]], "port (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.port"]], "port (bittensor.chain_data.prometheusinfo attribute)": [[2, "bittensor.chain_data.PrometheusInfo.port"]], "prometheus_info (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.prometheus_info"]], "prometheus_info (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.prometheus_info"]], "protocol (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.protocol"]], "protocol (bittensor.chain_data.ipinfo attribute)": [[2, "bittensor.chain_data.IPInfo.protocol"]], "pruning_score (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.pruning_score"]], "pruning_score (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.pruning_score"]], "rank (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.rank"]], "rank (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.rank"]], "registration_allowed (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.registration_allowed"]], "registrations (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.registrations"]], "return_per_1000 (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.return_per_1000"]], "rho (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.rho"]], "rho (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.rho"]], "scaling_law_power (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.scaling_law_power"]], "stake (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.stake"]], "stake (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.stake"]], "stake (bittensor.chain_data.stakeinfo attribute)": [[2, "bittensor.chain_data.StakeInfo.stake"]], "stake_dict (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.stake_dict"]], "stake_dict (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.stake_dict"]], "subnetwork_n (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.subnetwork_n"]], "take (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.take"]], "target_regs_per_interval (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.target_regs_per_interval"]], "tempo (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.tempo"]], "tempo (bittensor.chain_data.subnetinfo attribute)": [[2, "bittensor.chain_data.SubnetInfo.tempo"]], "threshold (bittensor.chain_data.proposalvotedata attribute)": [[2, "bittensor.chain_data.ProposalVoteData.threshold"]], "to_parameter_dict() (bittensor.chain_data.axoninfo method)": [[2, "bittensor.chain_data.AxonInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.chain_data.ipinfo method)": [[2, "bittensor.chain_data.IPInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.chain_data.subnethyperparameters method)": [[2, "bittensor.chain_data.SubnetHyperparameters.to_parameter_dict"]], "to_parameter_dict() (bittensor.chain_data.subnetinfo method)": [[2, "bittensor.chain_data.SubnetInfo.to_parameter_dict"]], "to_string() (bittensor.chain_data.axoninfo method)": [[2, "bittensor.chain_data.AxonInfo.to_string"]], "total_daily_return (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.total_daily_return"]], "total_stake (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.total_stake"]], "total_stake (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.total_stake"]], "total_stake (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.total_stake"]], "trust (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.trust"]], "trust (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.trust"]], "uid (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.uid"]], "uid (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.uid"]], "validator_permit (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.validator_permit"]], "validator_permit (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.validator_permit"]], "validator_permits (bittensor.chain_data.delegateinfo attribute)": [[2, "bittensor.chain_data.DelegateInfo.validator_permits"]], "validator_trust (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.validator_trust"]], "validator_trust (bittensor.chain_data.neuroninfolite attribute)": [[2, "bittensor.chain_data.NeuronInfoLite.validator_trust"]], "version (bittensor.chain_data.axoninfo attribute)": [[2, "bittensor.chain_data.AxonInfo.version"]], "version (bittensor.chain_data.prometheusinfo attribute)": [[2, "bittensor.chain_data.PrometheusInfo.version"]], "weights (bittensor.chain_data.neuroninfo attribute)": [[2, "bittensor.chain_data.NeuronInfo.weights"]], "weights_rate_limit (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.weights_rate_limit"]], "weights_version (bittensor.chain_data.subnethyperparameters attribute)": [[2, "bittensor.chain_data.SubnetHyperparameters.weights_version"]], "alias_to_command (in module bittensor.cli)": [[3, "bittensor.cli.ALIAS_TO_COMMAND"]], "commands (in module bittensor.cli)": [[3, "bittensor.cli.COMMANDS"]], "__create_parser__() (bittensor.cli.cli static method)": [[3, "bittensor.cli.cli.__create_parser__"]], "bittensor.cli": [[3, "module-bittensor.cli"]], "check_config() (bittensor.cli.cli static method)": [[3, "bittensor.cli.cli.check_config"]], "cli (class in bittensor.cli)": [[3, "bittensor.cli.cli"]], "console (in module bittensor.cli)": [[3, "bittensor.cli.console"]], "create_config() (bittensor.cli.cli static method)": [[3, "bittensor.cli.cli.create_config"]], "run() (bittensor.cli.cli method)": [[3, "bittensor.cli.cli.run"]], "defaultconfig (class in bittensor.config)": [[4, "bittensor.config.DefaultConfig"]], "invalidconfigfile": [[4, "bittensor.config.InvalidConfigFile"], [7, "bittensor.InvalidConfigFile"]], "t (in module bittensor.config)": [[4, "bittensor.config.T"]], "__deepcopy__() (bittensor.config.config method)": [[4, "bittensor.config.config.__deepcopy__"]], "__is_set (bittensor.config.config attribute)": [[4, "bittensor.config.config.__is_set"]], "__parse_args__() (bittensor.config.config static method)": [[4, "bittensor.config.config.__parse_args__"]], "__repr__() (bittensor.config.config method)": [[4, "bittensor.config.config.__repr__"]], "__split_params__() (bittensor.config.config static method)": [[4, "bittensor.config.config.__split_params__"]], "__str__() (bittensor.config.config method)": [[4, "bittensor.config.config.__str__"]], "_merge() (bittensor.config.config class method)": [[4, "bittensor.config.config._merge"]], "_remove_private_keys() (bittensor.config.config static method)": [[4, "bittensor.config.config._remove_private_keys"]], "bittensor.config": [[4, "module-bittensor.config"]], "config (class in bittensor.config)": [[4, "bittensor.config.config"]], "copy() (bittensor.config.config method)": [[4, "bittensor.config.config.copy"]], "default() (bittensor.config.defaultconfig class method)": [[4, "bittensor.config.DefaultConfig.default"]], "is_set() (bittensor.config.config method)": [[4, "bittensor.config.config.is_set"]], "merge() (bittensor.config.config method)": [[4, "bittensor.config.config.merge"]], "merge_all() (bittensor.config.config class method)": [[4, "bittensor.config.config.merge_all"]], "to_string() (bittensor.config.config method)": [[4, "bittensor.config.config.to_string"]], "update_with_kwargs() (bittensor.config.config method)": [[4, "bittensor.config.config.update_with_kwargs"]], "__aenter__() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.__aenter__"]], "__aexit__() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.__aexit__"]], "__del__() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.__del__"]], "__repr__() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.__repr__"], [5, "id9"]], "__str__() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.__str__"], [5, "id8"]], "_get_endpoint_url() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite._get_endpoint_url"]], "_handle_request_errors() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite._handle_request_errors"]], "_log_incoming_response() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite._log_incoming_response"]], "_log_outgoing_request() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite._log_outgoing_request"]], "aclose_session() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.aclose_session"], [5, "id1"]], "bittensor.dendrite": [[5, "module-bittensor.dendrite"]], "call() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.call"], [5, "id4"]], "call_stream() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.call_stream"], [5, "id5"]], "close_session() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.close_session"], [5, "id0"]], "dendrite (class in bittensor.dendrite)": [[5, "bittensor.dendrite.dendrite"]], "external_ip (bittensor.dendrite.dendrite attribute)": [[5, "bittensor.dendrite.dendrite.external_ip"]], "forward() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.forward"], [5, "id3"]], "keypair (bittensor.dendrite.dendrite attribute)": [[5, "bittensor.dendrite.dendrite.keypair"]], "preprocess_synapse_for_request() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.preprocess_synapse_for_request"], [5, "id6"]], "process_server_response() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.process_server_response"], [5, "id7"]], "query() (bittensor.dendrite.dendrite method)": [[5, "bittensor.dendrite.dendrite.query"], [5, "id2"]], "session (bittensor.dendrite.dendrite property)": [[5, "bittensor.dendrite.dendrite.session"]], "synapse_history (bittensor.dendrite.dendrite attribute)": [[5, "bittensor.dendrite.dendrite.synapse_history"]], "chainconnectionerror": [[6, "bittensor.errors.ChainConnectionError"], [7, "bittensor.ChainConnectionError"]], "chainerror": [[6, "bittensor.errors.ChainError"], [7, "bittensor.ChainError"]], "chainqueryerror": [[6, "bittensor.errors.ChainQueryError"], [7, "bittensor.ChainQueryError"]], "chaintransactionerror": [[6, "bittensor.errors.ChainTransactionError"], [7, "bittensor.ChainTransactionError"]], "identityerror": [[6, "bittensor.errors.IdentityError"], [7, "bittensor.IdentityError"]], "keyfileerror": [[6, "bittensor.errors.KeyFileError"], [7, "bittensor.KeyFileError"], [7, "id0"]], "nominationerror": [[6, "bittensor.errors.NominationError"], [7, "bittensor.NominationError"]], "notdelegateerror": [[6, "bittensor.errors.NotDelegateError"], [7, "bittensor.NotDelegateError"]], "notregisterederror": [[6, "bittensor.errors.NotRegisteredError"], [7, "bittensor.NotRegisteredError"]], "registrationerror": [[6, "bittensor.errors.RegistrationError"], [7, "bittensor.RegistrationError"]], "stakeerror": [[6, "bittensor.errors.StakeError"], [7, "bittensor.StakeError"]], "transfererror": [[6, "bittensor.errors.TransferError"], [7, "bittensor.TransferError"]], "unstakeerror": [[6, "bittensor.errors.UnstakeError"], [7, "bittensor.UnstakeError"]], "bittensor.errors": [[6, "module-bittensor.errors"]], "all_commands (in module bittensor)": [[7, "bittensor.ALL_COMMANDS"]], "axoninfo (class in bittensor)": [[7, "bittensor.AxonInfo"]], "b (bittensor.metagraph property)": [[7, "bittensor.metagraph.B"]], "btstreamingresponsemodel (class in bittensor)": [[7, "bittensor.BTStreamingResponseModel"]], "c (bittensor.metagraph property)": [[7, "bittensor.metagraph.C"]], "chaindatatype (class in bittensor)": [[7, "bittensor.ChainDataType"]], "d (bittensor.metagraph property)": [[7, "bittensor.metagraph.D"]], "defaultconfig (class in bittensor)": [[7, "bittensor.DefaultConfig"]], "delegateinfo (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.DelegateInfo"]], "delegateinfo (class in bittensor)": [[7, "bittensor.DelegateInfo"]], "delegatedinfo (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.DelegatedInfo"]], "e (bittensor.metagraph property)": [[7, "bittensor.metagraph.E"]], "i (bittensor.metagraph property)": [[7, "bittensor.metagraph.I"]], "ipinfo (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.IPInfo"]], "ipinfo (class in bittensor)": [[7, "bittensor.IPInfo"]], "mockkeyfile (class in bittensor)": [[7, "bittensor.Mockkeyfile"]], "nacl_salt (in module bittensor)": [[7, "bittensor.NACL_SALT"]], "neuroninfo (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.NeuronInfo"]], "neuroninfo (class in bittensor)": [[7, "bittensor.NeuronInfo"]], "neuroninfolite (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.NeuronInfoLite"]], "neuroninfolite (class in bittensor)": [[7, "bittensor.NeuronInfoLite"]], "prioritythreadpoolexecutor (class in bittensor)": [[7, "bittensor.PriorityThreadPoolExecutor"]], "prometheusinfo (class in bittensor)": [[7, "bittensor.PrometheusInfo"]], "proposalcalldata (in module bittensor)": [[7, "bittensor.ProposalCallData"]], "proposalvotedata (class in bittensor)": [[7, "bittensor.ProposalVoteData"]], "r (bittensor.metagraph property)": [[7, "bittensor.metagraph.R"]], "raopertao (in module bittensor)": [[7, "bittensor.RAOPERTAO"]], "s (bittensor.metagraph property)": [[7, "bittensor.metagraph.S"]], "stakeinfo (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.StakeInfo"]], "stakeinfo (class in bittensor)": [[7, "bittensor.StakeInfo"]], "streamingsynapse (class in bittensor)": [[7, "bittensor.StreamingSynapse"]], "streamingsynapse.btstreamingresponse (class in bittensor)": [[7, "bittensor.StreamingSynapse.BTStreamingResponse"]], "streamingsynapse.config (class in bittensor)": [[7, "bittensor.StreamingSynapse.Config"]], "subnethyperparameters (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.SubnetHyperparameters"]], "subnethyperparameters (class in bittensor)": [[7, "bittensor.SubnetHyperparameters"]], "subnetinfo (bittensor.chaindatatype attribute)": [[7, "bittensor.ChainDataType.SubnetInfo"]], "subnetinfo (class in bittensor)": [[7, "bittensor.SubnetInfo"]], "synapse (class in bittensor)": [[7, "bittensor.Synapse"]], "synapse.config (class in bittensor)": [[7, "bittensor.Synapse.Config"]], "t (bittensor.metagraph property)": [[7, "bittensor.metagraph.T"]], "t (in module bittensor)": [[7, "bittensor.T"]], "torch_dtypes (in module bittensor)": [[7, "bittensor.TORCH_DTYPES"]], "tensor (class in bittensor)": [[7, "bittensor.Tensor"], [7, "bittensor.tensor"]], "tensor.config (class in bittensor)": [[7, "bittensor.Tensor.Config"]], "terminalinfo (class in bittensor)": [[7, "bittensor.TerminalInfo"]], "terminalinfo.config (class in bittensor)": [[7, "bittensor.TerminalInfo.Config"]], "tv (bittensor.metagraph property)": [[7, "bittensor.metagraph.Tv"]], "u16_max (in module bittensor)": [[7, "bittensor.U16_MAX"]], "u64_max (in module bittensor)": [[7, "bittensor.U64_MAX"]], "w (bittensor.metagraph property)": [[7, "bittensor.metagraph.W"]], "__aenter__() (bittensor.dendrite method)": [[7, "bittensor.dendrite.__aenter__"]], "__aexit__() (bittensor.dendrite method)": [[7, "bittensor.dendrite.__aexit__"]], "__archive_entrypoint__ (in module bittensor)": [[7, "bittensor.__archive_entrypoint__"]], "__bellagene_entrypoint__ (in module bittensor)": [[7, "bittensor.__bellagene_entrypoint__"]], "__blocktime__ (in module bittensor)": [[7, "bittensor.__blocktime__"]], "__call__() (bittensor.streamingsynapse.btstreamingresponse method)": [[7, "bittensor.StreamingSynapse.BTStreamingResponse.__call__"]], "__console__ (in module bittensor)": [[7, "bittensor.__console__"]], "__create_parser__() (bittensor.cli static method)": [[7, "bittensor.cli.__create_parser__"]], "__debug_on__ (bittensor.logging attribute)": [[7, "bittensor.logging.__debug_on__"]], "__deepcopy__() (bittensor.config method)": [[7, "bittensor.config.__deepcopy__"]], "__del__() (bittensor.axon method)": [[7, "bittensor.axon.__del__"]], "__del__() (bittensor.dendrite method)": [[7, "bittensor.dendrite.__del__"]], "__delegates_details_url__ (in module bittensor)": [[7, "bittensor.__delegates_details_url__"]], "__eq__() (bittensor.axoninfo method)": [[7, "bittensor.AxonInfo.__eq__"]], "__file_sink__ (bittensor.logging attribute)": [[7, "bittensor.logging.__file_sink__"]], "__finney_entrypoint__ (in module bittensor)": [[7, "bittensor.__finney_entrypoint__"]], "__finney_test_entrypoint__ (in module bittensor)": [[7, "bittensor.__finney_test_entrypoint__"]], "__has_been_inited__ (bittensor.logging attribute)": [[7, "bittensor.logging.__has_been_inited__"]], "__is_set (bittensor.config attribute)": [[7, "bittensor.config.__is_set"]], "__local_entrypoint__ (in module bittensor)": [[7, "bittensor.__local_entrypoint__"]], "__network_explorer_map__ (in module bittensor)": [[7, "bittensor.__network_explorer_map__"]], "__networks__ (in module bittensor)": [[7, "bittensor.__networks__"]], "__new_signature_version__ (in module bittensor)": [[7, "bittensor.__new_signature_version__"]], "__parse_args__() (bittensor.config static method)": [[7, "bittensor.config.__parse_args__"]], "__pipaddress__ (in module bittensor)": [[7, "bittensor.__pipaddress__"]], "__rao_symbol__ (in module bittensor)": [[7, "bittensor.__rao_symbol__"]], "__repr__() (bittensor.axoninfo method)": [[7, "bittensor.AxonInfo.__repr__"]], "__repr__() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.__repr__"]], "__repr__() (bittensor.axon method)": [[7, "bittensor.axon.__repr__"]], "__repr__() (bittensor.config method)": [[7, "bittensor.config.__repr__"]], "__repr__() (bittensor.dendrite method)": [[7, "bittensor.dendrite.__repr__"], [7, "id30"]], "__repr__() (bittensor.keyfile method)": [[7, "bittensor.keyfile.__repr__"]], "__repr__() (bittensor.metagraph method)": [[7, "bittensor.metagraph.__repr__"]], "__repr__() (bittensor.subtensor method)": [[7, "bittensor.subtensor.__repr__"]], "__repr__() (bittensor.wallet method)": [[7, "bittensor.wallet.__repr__"]], "__setattr__() (bittensor.synapse method)": [[7, "bittensor.Synapse.__setattr__"]], "__split_params__() (bittensor.config static method)": [[7, "bittensor.config.__split_params__"]], "__ss58_address_length__ (in module bittensor)": [[7, "bittensor.__ss58_address_length__"]], "__ss58_format__ (in module bittensor)": [[7, "bittensor.__ss58_format__"]], "__std_sink__ (bittensor.logging attribute)": [[7, "bittensor.logging.__std_sink__"]], "__str__() (bittensor.axoninfo method)": [[7, "bittensor.AxonInfo.__str__"]], "__str__() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.__str__"]], "__str__() (bittensor.axon method)": [[7, "bittensor.axon.__str__"]], "__str__() (bittensor.config method)": [[7, "bittensor.config.__str__"]], "__str__() (bittensor.dendrite method)": [[7, "bittensor.dendrite.__str__"], [7, "id29"]], "__str__() (bittensor.keyfile method)": [[7, "bittensor.keyfile.__str__"]], "__str__() (bittensor.metagraph method)": [[7, "bittensor.metagraph.__str__"]], "__str__() (bittensor.subtensor method)": [[7, "bittensor.subtensor.__str__"]], "__str__() (bittensor.wallet method)": [[7, "bittensor.wallet.__str__"]], "__tao_symbol__ (in module bittensor)": [[7, "bittensor.__tao_symbol__"]], "__trace_on__ (bittensor.logging attribute)": [[7, "bittensor.logging.__trace_on__"]], "__type_registry__ (in module bittensor)": [[7, "bittensor.__type_registry__"]], "__use_console__ (in module bittensor)": [[7, "bittensor.__use_console__"]], "__version__ (in module bittensor)": [[7, "bittensor.__version__"]], "__version_as_int__ (in module bittensor)": [[7, "bittensor.__version_as_int__"]], "_adjust_thread_count() (bittensor.prioritythreadpoolexecutor method)": [[7, "bittensor.PriorityThreadPoolExecutor._adjust_thread_count"]], "_assign_neurons() (bittensor.metagraph method)": [[7, "bittensor.metagraph._assign_neurons"]], "_counter (bittensor.prioritythreadpoolexecutor attribute)": [[7, "bittensor.PriorityThreadPoolExecutor._counter"]], "_create_tensor() (bittensor.metagraph method)": [[7, "bittensor.metagraph._create_tensor"]], "_do_associate_ips() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_associate_ips"]], "_do_burned_register() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_burned_register"]], "_do_delegation() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_delegation"]], "_do_nominate() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_nominate"]], "_do_pow_register() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_pow_register"]], "_do_root_register() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_root_register"]], "_do_serve_axon() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_serve_axon"]], "_do_serve_prometheus() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_serve_prometheus"]], "_do_set_delegate_take() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_set_delegate_take"]], "_do_set_weights() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_set_weights"]], "_do_stake() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_stake"]], "_do_transfer() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_transfer"]], "_do_undelegation() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_undelegation"]], "_do_unstake() (bittensor.subtensor method)": [[7, "bittensor.subtensor._do_unstake"]], "_encode_params() (bittensor.subtensor method)": [[7, "bittensor.subtensor._encode_params"]], "_extract_dtype (bittensor.tensor attribute)": [[7, "bittensor.Tensor._extract_dtype"]], "_extract_header_size (bittensor.synapse attribute)": [[7, "bittensor.Synapse._extract_header_size"]], "_extract_nonce (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo._extract_nonce"]], "_extract_port (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo._extract_port"]], "_extract_process_time (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo._extract_process_time"]], "_extract_shape (bittensor.tensor attribute)": [[7, "bittensor.Tensor._extract_shape"]], "_extract_status_code (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo._extract_status_code"]], "_extract_timeout (bittensor.synapse attribute)": [[7, "bittensor.Synapse._extract_timeout"]], "_extract_total_size (bittensor.synapse attribute)": [[7, "bittensor.Synapse._extract_total_size"]], "_extract_version (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo._extract_version"]], "_format() (bittensor.logging class method)": [[7, "bittensor.logging._format"]], "_get_endpoint_url() (bittensor.dendrite method)": [[7, "bittensor.dendrite._get_endpoint_url"]], "_handle_request_errors() (bittensor.dendrite method)": [[7, "bittensor.dendrite._handle_request_errors"]], "_initialize_subtensor() (bittensor.metagraph method)": [[7, "bittensor.metagraph._initialize_subtensor"]], "_initializer_failed() (bittensor.prioritythreadpoolexecutor method)": [[7, "bittensor.PriorityThreadPoolExecutor._initializer_failed"]], "_log_incoming_response() (bittensor.dendrite method)": [[7, "bittensor.dendrite._log_incoming_response"]], "_log_outgoing_request() (bittensor.dendrite method)": [[7, "bittensor.dendrite._log_outgoing_request"]], "_may_overwrite() (bittensor.keyfile method)": [[7, "bittensor.keyfile._may_overwrite"]], "_merge() (bittensor.config class method)": [[7, "bittensor.config._merge"]], "_neuron_dict_to_namespace() (bittensor.neuroninfo static method)": [[7, "bittensor.NeuronInfo._neuron_dict_to_namespace"]], "_neuron_dict_to_namespace() (bittensor.neuroninfolite static method)": [[7, "bittensor.NeuronInfoLite._neuron_dict_to_namespace"]], "_null_neuron() (bittensor.neuroninfo static method)": [[7, "bittensor.NeuronInfo._null_neuron"]], "_null_neuron() (bittensor.neuroninfolite static method)": [[7, "bittensor.NeuronInfoLite._null_neuron"]], "_null_neuron() (bittensor.subtensor static method)": [[7, "bittensor.subtensor._null_neuron"]], "_process_root_weights() (bittensor.metagraph method)": [[7, "bittensor.metagraph._process_root_weights"]], "_process_weights_or_bonds() (bittensor.metagraph method)": [[7, "bittensor.metagraph._process_weights_or_bonds"]], "_read_keyfile_data_from_file() (bittensor.keyfile method)": [[7, "bittensor.keyfile._read_keyfile_data_from_file"]], "_remove_private_keys() (bittensor.config static method)": [[7, "bittensor.config._remove_private_keys"]], "_set_metagraph_attributes() (bittensor.metagraph method)": [[7, "bittensor.metagraph._set_metagraph_attributes"]], "_set_weights_and_bonds() (bittensor.metagraph method)": [[7, "bittensor.metagraph._set_weights_and_bonds"]], "_write_keyfile_data_to_file() (bittensor.keyfile method)": [[7, "bittensor.keyfile._write_keyfile_data_to_file"]], "aclose_session() (bittensor.dendrite method)": [[7, "bittensor.dendrite.aclose_session"], [7, "id22"]], "active (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.active"]], "active (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.active"]], "activity_cutoff (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.activity_cutoff"]], "add_args() (bittensor.prioritythreadpoolexecutor class method)": [[7, "bittensor.PriorityThreadPoolExecutor.add_args"]], "add_args() (bittensor.axon class method)": [[7, "bittensor.axon.add_args"]], "add_args() (bittensor.logging class method)": [[7, "bittensor.logging.add_args"]], "add_args() (bittensor.subtensor class method)": [[7, "bittensor.subtensor.add_args"]], "add_args() (bittensor.wallet class method)": [[7, "bittensor.wallet.add_args"]], "add_stake() (bittensor.subtensor method)": [[7, "bittensor.subtensor.add_stake"]], "add_stake_multiple() (bittensor.subtensor method)": [[7, "bittensor.subtensor.add_stake_multiple"]], "addresses (bittensor.metagraph property)": [[7, "bittensor.metagraph.addresses"]], "adjustment_interval (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.adjustment_interval"]], "ask_password_to_encrypt() (in module bittensor)": [[7, "bittensor.ask_password_to_encrypt"]], "associated_validator_ip_info() (bittensor.subtensor method)": [[7, "bittensor.subtensor.associated_validator_ip_info"]], "attach() (bittensor.axon method)": [[7, "bittensor.axon.attach"]], "axon (bittensor.synapse attribute)": [[7, "bittensor.Synapse.axon"]], "axon (class in bittensor)": [[7, "bittensor.axon"]], "axon_info (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.axon_info"]], "axon_info (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.axon_info"]], "ayes (bittensor.proposalvotedata attribute)": [[7, "bittensor.ProposalVoteData.ayes"]], "bittensor": [[7, "module-bittensor"]], "block (bittensor.prometheusinfo attribute)": [[7, "bittensor.PrometheusInfo.block"]], "block (bittensor.subtensor property)": [[7, "bittensor.subtensor.block"]], "blocks_since_epoch (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.blocks_since_epoch"]], "blocks_since_epoch() (bittensor.subtensor method)": [[7, "bittensor.subtensor.blocks_since_epoch"]], "body_hash (bittensor.synapse property)": [[7, "bittensor.Synapse.body_hash"]], "bonds (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.bonds"]], "bonds() (bittensor.subtensor method)": [[7, "bittensor.subtensor.bonds"]], "bonds_moving_avg (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.bonds_moving_avg"]], "buffer (bittensor.tensor attribute)": [[7, "bittensor.Tensor.buffer"], [7, "id10"]], "burn (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.burn"]], "burn() (bittensor.subtensor method)": [[7, "bittensor.subtensor.burn"]], "burned_register() (bittensor.subtensor method)": [[7, "bittensor.subtensor.burned_register"]], "call() (bittensor.dendrite method)": [[7, "bittensor.dendrite.call"], [7, "id25"]], "call_stream() (bittensor.dendrite method)": [[7, "bittensor.dendrite.call_stream"], [7, "id26"]], "cast_dtype() (in module bittensor)": [[7, "bittensor.cast_dtype"]], "cast_float() (in module bittensor)": [[7, "bittensor.cast_float"]], "cast_int() (in module bittensor)": [[7, "bittensor.cast_int"]], "cast_shape() (in module bittensor)": [[7, "bittensor.cast_shape"]], "chain_endpoint (bittensor.subtensor attribute)": [[7, "bittensor.subtensor.chain_endpoint"]], "check_and_update_encryption() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.check_and_update_encryption"]], "check_and_update_encryption() (bittensor.keyfile method)": [[7, "bittensor.keyfile.check_and_update_encryption"]], "check_config() (bittensor.axon class method)": [[7, "bittensor.axon.check_config"]], "check_config() (bittensor.cli static method)": [[7, "bittensor.cli.check_config"]], "check_config() (bittensor.logging class method)": [[7, "bittensor.logging.check_config"]], "cli (class in bittensor)": [[7, "bittensor.cli"]], "close_session() (bittensor.dendrite method)": [[7, "bittensor.dendrite.close_session"], [7, "id21"]], "coldkey (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.coldkey"]], "coldkey (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.coldkey"]], "coldkey (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.coldkey"]], "coldkey (bittensor.wallet property)": [[7, "bittensor.wallet.coldkey"]], "coldkey_file (bittensor.wallet property)": [[7, "bittensor.wallet.coldkey_file"]], "coldkey_ss58 (bittensor.stakeinfo attribute)": [[7, "bittensor.StakeInfo.coldkey_ss58"]], "coldkeypub (bittensor.wallet property)": [[7, "bittensor.wallet.coldkeypub"]], "coldkeypub_file (bittensor.wallet property)": [[7, "bittensor.wallet.coldkeypub_file"]], "coldkeys (bittensor.metagraph property)": [[7, "bittensor.metagraph.coldkeys"]], "computed_body_hash (bittensor.synapse attribute)": [[7, "bittensor.Synapse.computed_body_hash"]], "config (class in bittensor)": [[7, "bittensor.config"]], "config() (bittensor.prioritythreadpoolexecutor class method)": [[7, "bittensor.PriorityThreadPoolExecutor.config"]], "config() (bittensor.axon class method)": [[7, "bittensor.axon.config"]], "config() (bittensor.logging class method)": [[7, "bittensor.logging.config"]], "config() (bittensor.subtensor static method)": [[7, "bittensor.subtensor.config"]], "config() (bittensor.wallet class method)": [[7, "bittensor.wallet.config"]], "configs (in module bittensor)": [[7, "bittensor.configs"]], "connection_requirements (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.connection_requirements"]], "consensus (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.consensus"]], "consensus (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.consensus"]], "copy() (bittensor.config method)": [[7, "bittensor.config.copy"]], "create() (bittensor.wallet method)": [[7, "bittensor.wallet.create"]], "create_coldkey_from_uri() (bittensor.wallet method)": [[7, "bittensor.wallet.create_coldkey_from_uri"]], "create_config() (bittensor.cli static method)": [[7, "bittensor.cli.create_config"]], "create_hotkey_from_uri() (bittensor.wallet method)": [[7, "bittensor.wallet.create_hotkey_from_uri"]], "create_if_non_existent() (bittensor.wallet method)": [[7, "bittensor.wallet.create_if_non_existent"]], "create_new_coldkey() (bittensor.wallet method)": [[7, "bittensor.wallet.create_new_coldkey"]], "create_new_hotkey() (bittensor.wallet method)": [[7, "bittensor.wallet.create_new_hotkey"]], "create_streaming_response() (bittensor.streamingsynapse method)": [[7, "bittensor.StreamingSynapse.create_streaming_response"]], "custom_rpc_type_registry (in module bittensor)": [[7, "bittensor.custom_rpc_type_registry"]], "data (bittensor.mockkeyfile property)": [[7, "bittensor.Mockkeyfile.data"]], "data (bittensor.keyfile property)": [[7, "bittensor.keyfile.data"]], "debug() (bittensor.logging class method)": [[7, "bittensor.logging.debug"]], "debug() (in module bittensor)": [[7, "bittensor.debug"]], "decrypt() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.decrypt"]], "decrypt() (bittensor.keyfile method)": [[7, "bittensor.keyfile.decrypt"]], "decrypt_keyfile_data() (in module bittensor)": [[7, "bittensor.decrypt_keyfile_data"]], "default() (bittensor.defaultconfig class method)": [[7, "bittensor.DefaultConfig.default"]], "default_verify() (bittensor.axon method)": [[7, "bittensor.axon.default_verify"]], "defaults (in module bittensor)": [[7, "bittensor.defaults"]], "delegate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.delegate"]], "delegated_list_from_vec_u8() (bittensor.delegateinfo class method)": [[7, "bittensor.DelegateInfo.delegated_list_from_vec_u8"]], "dendrite (bittensor.synapse attribute)": [[7, "bittensor.Synapse.dendrite"]], "dendrite (class in bittensor)": [[7, "bittensor.dendrite"]], "deserialize() (bittensor.synapse method)": [[7, "bittensor.Synapse.deserialize"]], "deserialize() (bittensor.tensor method)": [[7, "bittensor.Tensor.deserialize"]], "deserialize_keypair_from_keyfile_data() (in module bittensor)": [[7, "bittensor.deserialize_keypair_from_keyfile_data"]], "determine_chain_endpoint_and_network() (bittensor.subtensor static method)": [[7, "bittensor.subtensor.determine_chain_endpoint_and_network"]], "difficulty (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.difficulty"]], "difficulty() (bittensor.subtensor method)": [[7, "bittensor.subtensor.difficulty"]], "display_mnemonic_msg() (in module bittensor)": [[7, "bittensor.display_mnemonic_msg"]], "dividends (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.dividends"]], "dividends (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.dividends"]], "does_hotkey_exist() (bittensor.subtensor method)": [[7, "bittensor.subtensor.does_hotkey_exist"]], "dtype (bittensor.tensor attribute)": [[7, "bittensor.Tensor.dtype"], [7, "id11"]], "emission (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.emission"]], "emission (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.emission"]], "emission_value (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.emission_value"]], "encode() (bittensor.ipinfo method)": [[7, "bittensor.IPInfo.encode"]], "encrypt() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.encrypt"]], "encrypt() (bittensor.keyfile method)": [[7, "bittensor.keyfile.encrypt"]], "encrypt_keyfile_data() (in module bittensor)": [[7, "bittensor.encrypt_keyfile_data"]], "end (bittensor.proposalvotedata attribute)": [[7, "bittensor.ProposalVoteData.end"]], "error() (bittensor.logging class method)": [[7, "bittensor.logging.error"]], "exception() (bittensor.logging class method)": [[7, "bittensor.logging.exception"]], "exists_on_device() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.exists_on_device"]], "exists_on_device() (bittensor.keyfile method)": [[7, "bittensor.keyfile.exists_on_device"]], "external_ip (bittensor.dendrite attribute)": [[7, "bittensor.dendrite.external_ip"]], "extract_response_json() (bittensor.streamingsynapse method)": [[7, "bittensor.StreamingSynapse.extract_response_json"]], "failed_verification (bittensor.synapse property)": [[7, "bittensor.Synapse.failed_verification"]], "fix_decoded_values() (bittensor.delegateinfo class method)": [[7, "bittensor.DelegateInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.ipinfo class method)": [[7, "bittensor.IPInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.neuroninfo class method)": [[7, "bittensor.NeuronInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.neuroninfolite class method)": [[7, "bittensor.NeuronInfoLite.fix_decoded_values"]], "fix_decoded_values() (bittensor.prometheusinfo class method)": [[7, "bittensor.PrometheusInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.stakeinfo class method)": [[7, "bittensor.StakeInfo.fix_decoded_values"]], "fix_decoded_values() (bittensor.subnethyperparameters class method)": [[7, "bittensor.SubnetHyperparameters.fix_decoded_values"]], "fix_decoded_values() (bittensor.subnetinfo class method)": [[7, "bittensor.SubnetInfo.fix_decoded_values"]], "forward() (bittensor.dendrite method)": [[7, "bittensor.dendrite.forward"], [7, "id24"]], "from_headers() (bittensor.synapse class method)": [[7, "bittensor.Synapse.from_headers"]], "from_neuron_info() (bittensor.axoninfo class method)": [[7, "bittensor.AxonInfo.from_neuron_info"]], "from_parameter_dict() (bittensor.axoninfo class method)": [[7, "bittensor.AxonInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.ipinfo class method)": [[7, "bittensor.IPInfo.from_parameter_dict"]], "from_parameter_dict() (bittensor.subnethyperparameters class method)": [[7, "bittensor.SubnetHyperparameters.from_parameter_dict"]], "from_parameter_dict() (bittensor.subnetinfo class method)": [[7, "bittensor.SubnetInfo.from_parameter_dict"]], "from_scale_encoding() (in module bittensor)": [[7, "bittensor.from_scale_encoding"]], "from_scale_encoding_using_type_string() (in module bittensor)": [[7, "bittensor.from_scale_encoding_using_type_string"]], "from_string() (bittensor.axoninfo class method)": [[7, "bittensor.AxonInfo.from_string"]], "from_vec_u8() (bittensor.delegateinfo class method)": [[7, "bittensor.DelegateInfo.from_vec_u8"]], "from_vec_u8() (bittensor.ipinfo class method)": [[7, "bittensor.IPInfo.from_vec_u8"]], "from_vec_u8() (bittensor.neuroninfo class method)": [[7, "bittensor.NeuronInfo.from_vec_u8"]], "from_vec_u8() (bittensor.neuroninfolite class method)": [[7, "bittensor.NeuronInfoLite.from_vec_u8"]], "from_vec_u8() (bittensor.stakeinfo class method)": [[7, "bittensor.StakeInfo.from_vec_u8"]], "from_vec_u8() (bittensor.subnethyperparameters class method)": [[7, "bittensor.SubnetHyperparameters.from_vec_u8"]], "from_vec_u8() (bittensor.subnetinfo class method)": [[7, "bittensor.SubnetInfo.from_vec_u8"]], "from_weights_bonds_and_neuron_lite() (bittensor.neuroninfo class method)": [[7, "bittensor.NeuronInfo.from_weights_bonds_and_neuron_lite"]], "get_all_neurons_for_pubkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_all_neurons_for_pubkey"]], "get_all_subnet_netuids() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_all_subnet_netuids"]], "get_all_subnets_info() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_all_subnets_info"]], "get_all_uids_for_hotkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_all_uids_for_hotkey"]], "get_axon_info() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_axon_info"]], "get_balance() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_balance"]], "get_balances() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_balances"]], "get_block_hash() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_block_hash"]], "get_coldkey() (bittensor.wallet method)": [[7, "bittensor.wallet.get_coldkey"]], "get_coldkey_password_from_environment() (in module bittensor)": [[7, "bittensor.get_coldkey_password_from_environment"]], "get_coldkeypub() (bittensor.wallet method)": [[7, "bittensor.wallet.get_coldkeypub"]], "get_current_block() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_current_block"]], "get_delegate_by_hotkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_delegate_by_hotkey"]], "get_delegate_take() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_delegate_take"]], "get_delegated() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_delegated"]], "get_delegates() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_delegates"]], "get_emission_value_by_subnet() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_emission_value_by_subnet"]], "get_existential_deposit() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_existential_deposit"]], "get_hotkey() (bittensor.wallet method)": [[7, "bittensor.wallet.get_hotkey"]], "get_hotkey_owner() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_hotkey_owner"]], "get_keypair() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.get_keypair"]], "get_keypair() (bittensor.keyfile method)": [[7, "bittensor.keyfile.get_keypair"]], "get_level() (bittensor.logging class method)": [[7, "bittensor.logging.get_level"]], "get_netuids_for_hotkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_netuids_for_hotkey"]], "get_neuron_for_pubkey_and_subnet() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_neuron_for_pubkey_and_subnet"]], "get_nominators_for_hotkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_nominators_for_hotkey"]], "get_prometheus_info() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_prometheus_info"]], "get_proposal_call_data() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_proposal_call_data"]], "get_proposal_hashes() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_proposal_hashes"]], "get_proposal_vote_data (bittensor.subtensor attribute)": [[7, "bittensor.subtensor.get_proposal_vote_data"]], "get_proposals() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_proposals"]], "get_senate_members() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_senate_members"]], "get_size() (in module bittensor)": [[7, "bittensor.get_size"]], "get_stake() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_stake"]], "get_stake_for_coldkey_and_hotkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_stake_for_coldkey_and_hotkey"]], "get_stake_info_for_coldkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_stake_info_for_coldkey"]], "get_stake_info_for_coldkeys() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_stake_info_for_coldkeys"]], "get_subnet_burn_cost() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_burn_cost"]], "get_subnet_connection_requirement() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_connection_requirement"]], "get_subnet_connection_requirements() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_connection_requirements"]], "get_subnet_hyperparameters() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_hyperparameters"]], "get_subnet_info() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_info"]], "get_subnet_modality() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_modality"]], "get_subnet_owner() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnet_owner"]], "get_subnets() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_subnets"]], "get_total_size() (bittensor.synapse method)": [[7, "bittensor.Synapse.get_total_size"]], "get_total_stake_for_coldkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_total_stake_for_coldkey"]], "get_total_stake_for_hotkey() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_total_stake_for_hotkey"]], "get_total_subnets() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_total_subnets"]], "get_transfer_fee() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_transfer_fee"]], "get_uid_for_hotkey_on_subnet() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_uid_for_hotkey_on_subnet"]], "get_vote_data() (bittensor.subtensor method)": [[7, "bittensor.subtensor.get_vote_data"]], "header_size (bittensor.synapse attribute)": [[7, "bittensor.Synapse.header_size"]], "help() (bittensor.axon class method)": [[7, "bittensor.axon.help"]], "help() (bittensor.logging class method)": [[7, "bittensor.logging.help"]], "help() (bittensor.subtensor class method)": [[7, "bittensor.subtensor.help"]], "help() (bittensor.wallet class method)": [[7, "bittensor.wallet.help"]], "hotkey (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.hotkey"]], "hotkey (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.hotkey"]], "hotkey (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.hotkey"]], "hotkey (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.hotkey"]], "hotkey (bittensor.wallet property)": [[7, "bittensor.wallet.hotkey"]], "hotkey_file (bittensor.wallet property)": [[7, "bittensor.wallet.hotkey_file"]], "hotkey_ss58 (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.hotkey_ss58"]], "hotkey_ss58 (bittensor.stakeinfo attribute)": [[7, "bittensor.StakeInfo.hotkey_ss58"]], "hotkeys (bittensor.metagraph property)": [[7, "bittensor.metagraph.hotkeys"]], "immunity_period (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.immunity_period"]], "immunity_period (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.immunity_period"]], "immunity_period() (bittensor.subtensor method)": [[7, "bittensor.subtensor.immunity_period"]], "incentive (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.incentive"]], "incentive (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.incentive"]], "incentive() (bittensor.subtensor method)": [[7, "bittensor.subtensor.incentive"]], "index (bittensor.proposalvotedata attribute)": [[7, "bittensor.ProposalVoteData.index"]], "info() (bittensor.axon method)": [[7, "bittensor.axon.info"]], "info() (bittensor.logging class method)": [[7, "bittensor.logging.info"]], "ip (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.ip"]], "ip (bittensor.ipinfo attribute)": [[7, "bittensor.IPInfo.ip"]], "ip (bittensor.prometheusinfo attribute)": [[7, "bittensor.PrometheusInfo.ip"]], "ip (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.ip"]], "ip_str() (bittensor.axoninfo method)": [[7, "bittensor.AxonInfo.ip_str"]], "ip_type (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.ip_type"]], "ip_type (bittensor.ipinfo attribute)": [[7, "bittensor.IPInfo.ip_type"]], "ip_type (bittensor.prometheusinfo attribute)": [[7, "bittensor.PrometheusInfo.ip_type"]], "is_blacklist (bittensor.synapse property)": [[7, "bittensor.Synapse.is_blacklist"]], "is_empty (bittensor.prioritythreadpoolexecutor property)": [[7, "bittensor.PriorityThreadPoolExecutor.is_empty"]], "is_encrypted() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.is_encrypted"]], "is_encrypted() (bittensor.keyfile method)": [[7, "bittensor.keyfile.is_encrypted"]], "is_failure (bittensor.synapse property)": [[7, "bittensor.Synapse.is_failure"]], "is_hotkey_delegate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.is_hotkey_delegate"]], "is_hotkey_registered() (bittensor.subtensor method)": [[7, "bittensor.subtensor.is_hotkey_registered"]], "is_hotkey_registered_any() (bittensor.subtensor method)": [[7, "bittensor.subtensor.is_hotkey_registered_any"]], "is_hotkey_registered_on_subnet() (bittensor.subtensor method)": [[7, "bittensor.subtensor.is_hotkey_registered_on_subnet"]], "is_null (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.is_null"]], "is_null (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.is_null"]], "is_readable() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.is_readable"]], "is_readable() (bittensor.keyfile method)": [[7, "bittensor.keyfile.is_readable"]], "is_senate_member() (bittensor.subtensor method)": [[7, "bittensor.subtensor.is_senate_member"]], "is_serving (bittensor.axoninfo property)": [[7, "bittensor.AxonInfo.is_serving"]], "is_set() (bittensor.config method)": [[7, "bittensor.config.is_set"]], "is_success (bittensor.synapse property)": [[7, "bittensor.Synapse.is_success"]], "is_timeout (bittensor.synapse property)": [[7, "bittensor.Synapse.is_timeout"]], "is_writable() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.is_writable"]], "is_writable() (bittensor.keyfile method)": [[7, "bittensor.keyfile.is_writable"]], "kappa (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.kappa"]], "kappa (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.kappa"]], "kappa() (bittensor.subtensor method)": [[7, "bittensor.subtensor.kappa"]], "keyfile (class in bittensor)": [[7, "bittensor.keyfile"]], "keyfile_data (bittensor.keyfile property)": [[7, "bittensor.keyfile.keyfile_data"]], "keyfile_data_encryption_method() (in module bittensor)": [[7, "bittensor.keyfile_data_encryption_method"]], "keyfile_data_is_encrypted() (in module bittensor)": [[7, "bittensor.keyfile_data_is_encrypted"]], "keyfile_data_is_encrypted_ansible() (in module bittensor)": [[7, "bittensor.keyfile_data_is_encrypted_ansible"]], "keyfile_data_is_encrypted_legacy() (in module bittensor)": [[7, "bittensor.keyfile_data_is_encrypted_legacy"]], "keyfile_data_is_encrypted_nacl() (in module bittensor)": [[7, "bittensor.keyfile_data_is_encrypted_nacl"]], "keypair (bittensor.mockkeyfile property)": [[7, "bittensor.Mockkeyfile.keypair"]], "keypair (bittensor.dendrite attribute)": [[7, "bittensor.dendrite.keypair"]], "keypair (bittensor.keyfile property)": [[7, "bittensor.keyfile.keypair"]], "last_update (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.last_update"]], "last_update (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.last_update"]], "leave_senate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.leave_senate"]], "legacy_encrypt_keyfile_data() (in module bittensor)": [[7, "bittensor.legacy_encrypt_keyfile_data"]], "list_from_vec_u8() (bittensor.delegateinfo class method)": [[7, "bittensor.DelegateInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.ipinfo class method)": [[7, "bittensor.IPInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.neuroninfo class method)": [[7, "bittensor.NeuronInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.neuroninfolite class method)": [[7, "bittensor.NeuronInfoLite.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.stakeinfo class method)": [[7, "bittensor.StakeInfo.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.subnethyperparameters class method)": [[7, "bittensor.SubnetHyperparameters.list_from_vec_u8"]], "list_from_vec_u8() (bittensor.subnetinfo class method)": [[7, "bittensor.SubnetInfo.list_from_vec_u8"]], "list_of_tuple_from_vec_u8() (bittensor.stakeinfo class method)": [[7, "bittensor.StakeInfo.list_of_tuple_from_vec_u8"]], "load() (bittensor.metagraph method)": [[7, "bittensor.metagraph.load"]], "load_from_path() (bittensor.metagraph method)": [[7, "bittensor.metagraph.load_from_path"]], "log_filter() (bittensor.logging class method)": [[7, "bittensor.logging.log_filter"]], "log_formatter() (bittensor.logging class method)": [[7, "bittensor.logging.log_formatter"]], "log_save_filter() (bittensor.logging class method)": [[7, "bittensor.logging.log_save_filter"]], "log_save_formatter() (bittensor.logging class method)": [[7, "bittensor.logging.log_save_formatter"]], "logging (class in bittensor)": [[7, "bittensor.logging"]], "make_dirs() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.make_dirs"]], "make_dirs() (bittensor.keyfile method)": [[7, "bittensor.keyfile.make_dirs"]], "max_allowed_validators (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.max_allowed_validators"]], "max_allowed_validators() (bittensor.subtensor method)": [[7, "bittensor.subtensor.max_allowed_validators"]], "max_burn (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.max_burn"]], "max_difficulty (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.max_difficulty"]], "max_n (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.max_n"]], "max_n() (bittensor.subtensor method)": [[7, "bittensor.subtensor.max_n"]], "max_regs_per_block (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.max_regs_per_block"]], "max_weight_limit (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.max_weight_limit"]], "max_weight_limit (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.max_weight_limit"]], "max_weight_limit() (bittensor.subtensor method)": [[7, "bittensor.subtensor.max_weight_limit"]], "merge() (bittensor.config method)": [[7, "bittensor.config.merge"]], "merge_all() (bittensor.config class method)": [[7, "bittensor.config.merge_all"]], "metadata() (bittensor.metagraph method)": [[7, "bittensor.metagraph.metadata"]], "metagraph (class in bittensor)": [[7, "bittensor.metagraph"]], "metagraph() (bittensor.subtensor method)": [[7, "bittensor.subtensor.metagraph"]], "min_allowed_weights (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.min_allowed_weights"]], "min_allowed_weights (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.min_allowed_weights"]], "min_allowed_weights() (bittensor.subtensor method)": [[7, "bittensor.subtensor.min_allowed_weights"]], "min_burn (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.min_burn"]], "min_difficulty (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.min_difficulty"]], "modality (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.modality"]], "name (bittensor.synapse attribute)": [[7, "bittensor.Synapse.name"]], "nays (bittensor.proposalvotedata attribute)": [[7, "bittensor.ProposalVoteData.nays"]], "netuid (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.netuid"]], "netuid (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.netuid"]], "netuid (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.netuid"]], "network (bittensor.subtensor attribute)": [[7, "bittensor.subtensor.network"]], "neuron_for_uid() (bittensor.subtensor method)": [[7, "bittensor.subtensor.neuron_for_uid"]], "neuron_for_uid_lite() (bittensor.subtensor method)": [[7, "bittensor.subtensor.neuron_for_uid_lite"]], "neuron_for_wallet() (bittensor.subtensor method)": [[7, "bittensor.subtensor.neuron_for_wallet"]], "neuron_has_validator_permit() (bittensor.subtensor method)": [[7, "bittensor.subtensor.neuron_has_validator_permit"]], "neurons() (bittensor.subtensor method)": [[7, "bittensor.subtensor.neurons"]], "neurons_lite() (bittensor.subtensor method)": [[7, "bittensor.subtensor.neurons_lite"]], "new_coldkey() (bittensor.wallet method)": [[7, "bittensor.wallet.new_coldkey"]], "new_hotkey() (bittensor.wallet method)": [[7, "bittensor.wallet.new_hotkey"]], "nominate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.nominate"]], "nominators (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.nominators"]], "nonce (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.nonce"]], "numpy() (bittensor.tensor method)": [[7, "bittensor.Tensor.numpy"]], "owner_ss58 (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.owner_ss58"]], "owner_ss58 (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.owner_ss58"]], "parse_headers_to_inputs() (bittensor.synapse class method)": [[7, "bittensor.Synapse.parse_headers_to_inputs"]], "placeholder1 (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.placeholder1"]], "placeholder2 (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.placeholder2"]], "port (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.port"]], "port (bittensor.prometheusinfo attribute)": [[7, "bittensor.PrometheusInfo.port"]], "port (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.port"]], "preprocess_synapse_for_request() (bittensor.dendrite method)": [[7, "bittensor.dendrite.preprocess_synapse_for_request"], [7, "id27"]], "process_server_response() (bittensor.dendrite method)": [[7, "bittensor.dendrite.process_server_response"], [7, "id28"]], "process_streaming_response() (bittensor.streamingsynapse method)": [[7, "bittensor.StreamingSynapse.process_streaming_response"]], "process_time (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.process_time"]], "prometheus_info (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.prometheus_info"]], "prometheus_info (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.prometheus_info"]], "protocol (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.protocol"]], "protocol (bittensor.ipinfo attribute)": [[7, "bittensor.IPInfo.protocol"]], "pruning_score (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.pruning_score"]], "pruning_score (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.pruning_score"]], "query() (bittensor.dendrite method)": [[7, "bittensor.dendrite.query"], [7, "id23"]], "query_constant() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_constant"]], "query_identity() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_identity"]], "query_map() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_map"]], "query_map_subtensor() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_map_subtensor"]], "query_module() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_module"]], "query_runtime_api() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_runtime_api"]], "query_subtensor() (bittensor.subtensor method)": [[7, "bittensor.subtensor.query_subtensor"]], "rank (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.rank"]], "rank (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.rank"]], "recreate() (bittensor.wallet method)": [[7, "bittensor.wallet.recreate"]], "regen_coldkey (bittensor.wallet attribute)": [[7, "bittensor.wallet.regen_coldkey"]], "regen_coldkeypub (bittensor.wallet attribute)": [[7, "bittensor.wallet.regen_coldkeypub"]], "regen_hotkey (bittensor.wallet attribute)": [[7, "bittensor.wallet.regen_hotkey"]], "regenerate_coldkey() (bittensor.wallet method)": [[7, "bittensor.wallet.regenerate_coldkey"]], "regenerate_coldkeypub() (bittensor.wallet method)": [[7, "bittensor.wallet.regenerate_coldkeypub"]], "regenerate_hotkey() (bittensor.wallet method)": [[7, "bittensor.wallet.regenerate_hotkey"]], "register() (bittensor.subtensor method)": [[7, "bittensor.subtensor.register"]], "register_senate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.register_senate"]], "register_subnetwork() (bittensor.subtensor method)": [[7, "bittensor.subtensor.register_subnetwork"]], "registration_allowed (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.registration_allowed"]], "registrations (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.registrations"]], "required_hash_fields (bittensor.synapse attribute)": [[7, "bittensor.Synapse.required_hash_fields"]], "return_per_1000 (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.return_per_1000"]], "rho (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.rho"]], "rho (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.rho"]], "rho() (bittensor.subtensor method)": [[7, "bittensor.subtensor.rho"]], "root_register() (bittensor.subtensor method)": [[7, "bittensor.subtensor.root_register"]], "root_set_weights() (bittensor.subtensor method)": [[7, "bittensor.subtensor.root_set_weights"]], "run() (bittensor.cli method)": [[7, "bittensor.cli.run"]], "run_faucet() (bittensor.subtensor method)": [[7, "bittensor.subtensor.run_faucet"]], "save() (bittensor.metagraph method)": [[7, "bittensor.metagraph.save"]], "scaling_law_power (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.scaling_law_power"]], "scaling_law_power() (bittensor.subtensor method)": [[7, "bittensor.subtensor.scaling_law_power"]], "serialize() (bittensor.tensor static method)": [[7, "bittensor.Tensor.serialize"]], "serialized_keypair_to_keyfile_data() (in module bittensor)": [[7, "bittensor.serialized_keypair_to_keyfile_data"]], "serve() (bittensor.axon method)": [[7, "bittensor.axon.serve"]], "serve() (bittensor.subtensor method)": [[7, "bittensor.subtensor.serve"]], "serve_axon() (bittensor.subtensor method)": [[7, "bittensor.subtensor.serve_axon"]], "serve_prometheus() (bittensor.subtensor method)": [[7, "bittensor.subtensor.serve_prometheus"]], "serving_rate_limit() (bittensor.subtensor method)": [[7, "bittensor.subtensor.serving_rate_limit"]], "session (bittensor.dendrite property)": [[7, "bittensor.dendrite.session"]], "set_coldkey() (bittensor.wallet method)": [[7, "bittensor.wallet.set_coldkey"]], "set_coldkeypub() (bittensor.wallet method)": [[7, "bittensor.wallet.set_coldkeypub"]], "set_debug() (bittensor.logging class method)": [[7, "bittensor.logging.set_debug"]], "set_delegate_take() (bittensor.subtensor method)": [[7, "bittensor.subtensor.set_delegate_take"]], "set_hotkey() (bittensor.wallet method)": [[7, "bittensor.wallet.set_hotkey"]], "set_hyperparameter() (bittensor.subtensor method)": [[7, "bittensor.subtensor.set_hyperparameter"]], "set_keypair() (bittensor.mockkeyfile method)": [[7, "bittensor.Mockkeyfile.set_keypair"]], "set_keypair() (bittensor.keyfile method)": [[7, "bittensor.keyfile.set_keypair"]], "set_name_type() (bittensor.synapse method)": [[7, "bittensor.Synapse.set_name_type"]], "set_trace() (bittensor.logging class method)": [[7, "bittensor.logging.set_trace"]], "set_weights() (bittensor.subtensor method)": [[7, "bittensor.subtensor.set_weights"]], "setup_config() (bittensor.subtensor static method)": [[7, "bittensor.subtensor.setup_config"]], "shape (bittensor.tensor attribute)": [[7, "bittensor.Tensor.shape"], [7, "id12"]], "shutdown() (bittensor.prioritythreadpoolexecutor method)": [[7, "bittensor.PriorityThreadPoolExecutor.shutdown"]], "signature (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.signature"]], "stake (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.stake"]], "stake (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.stake"]], "stake (bittensor.stakeinfo attribute)": [[7, "bittensor.StakeInfo.stake"]], "stake_dict (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.stake_dict"]], "stake_dict (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.stake_dict"]], "start() (bittensor.axon method)": [[7, "bittensor.axon.start"]], "state_call() (bittensor.subtensor method)": [[7, "bittensor.subtensor.state_call"]], "status_code (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.status_code"]], "status_message (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.status_message"]], "stop() (bittensor.axon method)": [[7, "bittensor.axon.stop"]], "stream_response() (bittensor.streamingsynapse.btstreamingresponse method)": [[7, "bittensor.StreamingSynapse.BTStreamingResponse.stream_response"]], "submit() (bittensor.prioritythreadpoolexecutor method)": [[7, "bittensor.PriorityThreadPoolExecutor.submit"]], "subnet_exists() (bittensor.subtensor method)": [[7, "bittensor.subtensor.subnet_exists"]], "subnetwork_n (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.subnetwork_n"]], "subnetwork_n() (bittensor.subtensor method)": [[7, "bittensor.subtensor.subnetwork_n"]], "subtensor (class in bittensor)": [[7, "bittensor.subtensor"]], "success() (bittensor.logging class method)": [[7, "bittensor.logging.success"]], "synapse_history (bittensor.dendrite attribute)": [[7, "bittensor.dendrite.synapse_history"]], "sync() (bittensor.metagraph method)": [[7, "bittensor.metagraph.sync"]], "synergy_scaling_law_power() (bittensor.subtensor method)": [[7, "bittensor.subtensor.synergy_scaling_law_power"]], "take (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.take"]], "target_regs_per_interval (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.target_regs_per_interval"]], "tempo (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.tempo"]], "tempo (bittensor.subnetinfo attribute)": [[7, "bittensor.SubnetInfo.tempo"]], "tempo() (bittensor.subtensor method)": [[7, "bittensor.subtensor.tempo"]], "tensor() (bittensor.tensor method)": [[7, "bittensor.Tensor.tensor"]], "threshold (bittensor.proposalvotedata attribute)": [[7, "bittensor.ProposalVoteData.threshold"]], "timeout (bittensor.synapse attribute)": [[7, "bittensor.Synapse.timeout"]], "to_headers() (bittensor.synapse method)": [[7, "bittensor.Synapse.to_headers"]], "to_parameter_dict() (bittensor.axoninfo method)": [[7, "bittensor.AxonInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.ipinfo method)": [[7, "bittensor.IPInfo.to_parameter_dict"]], "to_parameter_dict() (bittensor.subnethyperparameters method)": [[7, "bittensor.SubnetHyperparameters.to_parameter_dict"]], "to_parameter_dict() (bittensor.subnetinfo method)": [[7, "bittensor.SubnetInfo.to_parameter_dict"]], "to_string() (bittensor.axoninfo method)": [[7, "bittensor.AxonInfo.to_string"]], "to_string() (bittensor.axon method)": [[7, "bittensor.axon.to_string"]], "to_string() (bittensor.config method)": [[7, "bittensor.config.to_string"]], "token_streamer (bittensor.btstreamingresponsemodel attribute)": [[7, "bittensor.BTStreamingResponseModel.token_streamer"], [7, "id9"]], "tolist() (bittensor.tensor method)": [[7, "bittensor.Tensor.tolist"]], "total_daily_return (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.total_daily_return"]], "total_issuance() (bittensor.subtensor method)": [[7, "bittensor.subtensor.total_issuance"]], "total_size (bittensor.synapse attribute)": [[7, "bittensor.Synapse.total_size"]], "total_stake (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.total_stake"]], "total_stake (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.total_stake"]], "total_stake (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.total_stake"]], "total_stake() (bittensor.subtensor method)": [[7, "bittensor.subtensor.total_stake"]], "trace() (bittensor.logging class method)": [[7, "bittensor.logging.trace"]], "trace() (in module bittensor)": [[7, "bittensor.trace"]], "transfer() (bittensor.subtensor method)": [[7, "bittensor.subtensor.transfer"]], "trust (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.trust"]], "trust (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.trust"]], "turn_console_off() (in module bittensor)": [[7, "bittensor.turn_console_off"]], "turn_console_on() (in module bittensor)": [[7, "bittensor.turn_console_on"]], "tx_rate_limit() (bittensor.subtensor method)": [[7, "bittensor.subtensor.tx_rate_limit"]], "uid (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.uid"]], "uid (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.uid"]], "undelegate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.undelegate"]], "unstake() (bittensor.subtensor method)": [[7, "bittensor.subtensor.unstake"]], "unstake_multiple() (bittensor.subtensor method)": [[7, "bittensor.subtensor.unstake_multiple"]], "update_identity() (bittensor.subtensor method)": [[7, "bittensor.subtensor.update_identity"]], "update_with_kwargs() (bittensor.config method)": [[7, "bittensor.config.update_with_kwargs"]], "uuid (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.uuid"]], "validate_assignment (bittensor.streamingsynapse.config attribute)": [[7, "bittensor.StreamingSynapse.Config.validate_assignment"]], "validate_assignment (bittensor.synapse.config attribute)": [[7, "bittensor.Synapse.Config.validate_assignment"]], "validate_assignment (bittensor.tensor.config attribute)": [[7, "bittensor.Tensor.Config.validate_assignment"]], "validate_assignment (bittensor.terminalinfo.config attribute)": [[7, "bittensor.TerminalInfo.Config.validate_assignment"]], "validate_password() (in module bittensor)": [[7, "bittensor.validate_password"]], "validator_batch_size() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_batch_size"]], "validator_epoch_length() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_epoch_length"]], "validator_epochs_per_reset() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_epochs_per_reset"]], "validator_exclude_quantile() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_exclude_quantile"]], "validator_logits_divergence() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_logits_divergence"]], "validator_permit (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.validator_permit"]], "validator_permit (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.validator_permit"]], "validator_permits (bittensor.delegateinfo attribute)": [[7, "bittensor.DelegateInfo.validator_permits"]], "validator_prune_len() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_prune_len"]], "validator_sequence_length() (bittensor.subtensor method)": [[7, "bittensor.subtensor.validator_sequence_length"]], "validator_trust (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.validator_trust"]], "validator_trust (bittensor.neuroninfolite attribute)": [[7, "bittensor.NeuronInfoLite.validator_trust"]], "verify_body_integrity() (bittensor.axon method)": [[7, "bittensor.axon.verify_body_integrity"]], "version (bittensor.axoninfo attribute)": [[7, "bittensor.AxonInfo.version"]], "version (bittensor.prometheusinfo attribute)": [[7, "bittensor.PrometheusInfo.version"]], "version (bittensor.terminalinfo attribute)": [[7, "bittensor.TerminalInfo.version"]], "version_split (in module bittensor)": [[7, "bittensor.version_split"]], "vote_senate() (bittensor.subtensor method)": [[7, "bittensor.subtensor.vote_senate"]], "wallet (class in bittensor)": [[7, "bittensor.wallet"]], "warning() (bittensor.logging class method)": [[7, "bittensor.logging.warning"]], "weights (bittensor.neuroninfo attribute)": [[7, "bittensor.NeuronInfo.weights"]], "weights() (bittensor.subtensor method)": [[7, "bittensor.subtensor.weights"]], "weights_rate_limit (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.weights_rate_limit"]], "weights_version (bittensor.subnethyperparameters attribute)": [[7, "bittensor.SubnetHyperparameters.weights_version"]], "mockkeyfile (class in bittensor.keyfile)": [[8, "bittensor.keyfile.Mockkeyfile"]], "nacl_salt (in module bittensor.keyfile)": [[8, "bittensor.keyfile.NACL_SALT"]], "__repr__() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.__repr__"]], "__repr__() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.__repr__"]], "__str__() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.__str__"]], "__str__() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.__str__"]], "_may_overwrite() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile._may_overwrite"]], "_read_keyfile_data_from_file() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile._read_keyfile_data_from_file"]], "_write_keyfile_data_to_file() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile._write_keyfile_data_to_file"]], "ask_password_to_encrypt() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.ask_password_to_encrypt"]], "bittensor.keyfile": [[8, "module-bittensor.keyfile"]], "check_and_update_encryption() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.check_and_update_encryption"]], "check_and_update_encryption() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.check_and_update_encryption"]], "data (bittensor.keyfile.mockkeyfile property)": [[8, "bittensor.keyfile.Mockkeyfile.data"]], "data (bittensor.keyfile.keyfile property)": [[8, "bittensor.keyfile.keyfile.data"]], "decrypt() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.decrypt"]], "decrypt() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.decrypt"]], "decrypt_keyfile_data() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.decrypt_keyfile_data"]], "deserialize_keypair_from_keyfile_data() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.deserialize_keypair_from_keyfile_data"]], "encrypt() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.encrypt"]], "encrypt() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.encrypt"]], "encrypt_keyfile_data() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.encrypt_keyfile_data"]], "exists_on_device() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.exists_on_device"]], "exists_on_device() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.exists_on_device"]], "get_coldkey_password_from_environment() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.get_coldkey_password_from_environment"]], "get_keypair() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.get_keypair"]], "get_keypair() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.get_keypair"]], "is_encrypted() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.is_encrypted"]], "is_encrypted() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.is_encrypted"]], "is_readable() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.is_readable"]], "is_readable() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.is_readable"]], "is_writable() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.is_writable"]], "is_writable() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.is_writable"]], "keyfile (class in bittensor.keyfile)": [[8, "bittensor.keyfile.keyfile"]], "keyfile_data (bittensor.keyfile.keyfile property)": [[8, "bittensor.keyfile.keyfile.keyfile_data"]], "keyfile_data_encryption_method() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.keyfile_data_encryption_method"]], "keyfile_data_is_encrypted() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.keyfile_data_is_encrypted"]], "keyfile_data_is_encrypted_ansible() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.keyfile_data_is_encrypted_ansible"]], "keyfile_data_is_encrypted_legacy() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.keyfile_data_is_encrypted_legacy"]], "keyfile_data_is_encrypted_nacl() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.keyfile_data_is_encrypted_nacl"]], "keypair (bittensor.keyfile.mockkeyfile property)": [[8, "bittensor.keyfile.Mockkeyfile.keypair"]], "keypair (bittensor.keyfile.keyfile property)": [[8, "bittensor.keyfile.keyfile.keypair"]], "legacy_encrypt_keyfile_data() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.legacy_encrypt_keyfile_data"]], "make_dirs() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.make_dirs"]], "make_dirs() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.make_dirs"]], "serialized_keypair_to_keyfile_data() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.serialized_keypair_to_keyfile_data"]], "set_keypair() (bittensor.keyfile.mockkeyfile method)": [[8, "bittensor.keyfile.Mockkeyfile.set_keypair"]], "set_keypair() (bittensor.keyfile.keyfile method)": [[8, "bittensor.keyfile.keyfile.set_keypair"]], "validate_password() (in module bittensor.keyfile)": [[8, "bittensor.keyfile.validate_password"]], "b (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.B"]], "c (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.C"]], "d (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.D"]], "e (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.E"]], "i (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.I"]], "r (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.R"]], "s (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.S"]], "t (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.T"]], "tv (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.Tv"]], "w (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.W"]], "__repr__() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.__repr__"]], "__str__() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.__str__"]], "_assign_neurons() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._assign_neurons"]], "_create_tensor() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._create_tensor"]], "_initialize_subtensor() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._initialize_subtensor"]], "_process_root_weights() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._process_root_weights"]], "_process_weights_or_bonds() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._process_weights_or_bonds"]], "_set_metagraph_attributes() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._set_metagraph_attributes"]], "_set_weights_and_bonds() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph._set_weights_and_bonds"]], "addresses (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.addresses"]], "bittensor.metagraph": [[9, "module-bittensor.metagraph"]], "coldkeys (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.coldkeys"]], "get_save_dir() (in module bittensor.metagraph)": [[9, "bittensor.metagraph.get_save_dir"]], "hotkeys (bittensor.metagraph.metagraph property)": [[9, "bittensor.metagraph.metagraph.hotkeys"]], "latest_block_path() (in module bittensor.metagraph)": [[9, "bittensor.metagraph.latest_block_path"]], "load() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.load"]], "load_from_path() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.load_from_path"]], "metadata() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.metadata"]], "metagraph (class in bittensor.metagraph)": [[9, "bittensor.metagraph.metagraph"]], "save() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.save"]], "sync() (bittensor.metagraph.metagraph method)": [[9, "bittensor.metagraph.metagraph.sync"]], "btstreamingresponsemodel (class in bittensor.stream)": [[10, "bittensor.stream.BTStreamingResponseModel"]], "streamingsynapse (class in bittensor.stream)": [[10, "bittensor.stream.StreamingSynapse"]], "streamingsynapse.btstreamingresponse (class in bittensor.stream)": [[10, "bittensor.stream.StreamingSynapse.BTStreamingResponse"]], "streamingsynapse.config (class in bittensor.stream)": [[10, "bittensor.stream.StreamingSynapse.Config"]], "__call__() (bittensor.stream.streamingsynapse.btstreamingresponse method)": [[10, "bittensor.stream.StreamingSynapse.BTStreamingResponse.__call__"]], "bittensor.stream": [[10, "module-bittensor.stream"]], "create_streaming_response() (bittensor.stream.streamingsynapse method)": [[10, "bittensor.stream.StreamingSynapse.create_streaming_response"]], "extract_response_json() (bittensor.stream.streamingsynapse method)": [[10, "bittensor.stream.StreamingSynapse.extract_response_json"]], "process_streaming_response() (bittensor.stream.streamingsynapse method)": [[10, "bittensor.stream.StreamingSynapse.process_streaming_response"]], "stream_response() (bittensor.stream.streamingsynapse.btstreamingresponse method)": [[10, "bittensor.stream.StreamingSynapse.BTStreamingResponse.stream_response"]], "token_streamer (bittensor.stream.btstreamingresponsemodel attribute)": [[10, "bittensor.stream.BTStreamingResponseModel.token_streamer"], [10, "id0"]], "validate_assignment (bittensor.stream.streamingsynapse.config attribute)": [[10, "bittensor.stream.StreamingSynapse.Config.validate_assignment"]], "paramwithtypes (class in bittensor.subtensor)": [[11, "bittensor.subtensor.ParamWithTypes"]], "__repr__() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.__repr__"]], "__str__() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.__str__"]], "_do_associate_ips() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_associate_ips"]], "_do_burned_register() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_burned_register"]], "_do_delegation() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_delegation"]], "_do_nominate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_nominate"]], "_do_pow_register() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_pow_register"]], "_do_root_register() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_root_register"]], "_do_serve_axon() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_serve_axon"]], "_do_serve_prometheus() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_serve_prometheus"]], "_do_set_delegate_take() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_set_delegate_take"]], "_do_set_weights() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_set_weights"]], "_do_stake() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_stake"]], "_do_transfer() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_transfer"]], "_do_undelegation() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_undelegation"]], "_do_unstake() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._do_unstake"]], "_encode_params() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor._encode_params"]], "_null_neuron() (bittensor.subtensor.subtensor static method)": [[11, "bittensor.subtensor.subtensor._null_neuron"]], "add_args() (bittensor.subtensor.subtensor class method)": [[11, "bittensor.subtensor.subtensor.add_args"]], "add_stake() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.add_stake"]], "add_stake_multiple() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.add_stake_multiple"]], "associated_validator_ip_info() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.associated_validator_ip_info"]], "bittensor.subtensor": [[11, "module-bittensor.subtensor"]], "block (bittensor.subtensor.subtensor property)": [[11, "bittensor.subtensor.subtensor.block"]], "blocks_since_epoch() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.blocks_since_epoch"]], "bonds() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.bonds"]], "burn() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.burn"]], "burned_register() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.burned_register"]], "chain_endpoint (bittensor.subtensor.subtensor attribute)": [[11, "bittensor.subtensor.subtensor.chain_endpoint"]], "config() (bittensor.subtensor.subtensor static method)": [[11, "bittensor.subtensor.subtensor.config"]], "delegate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.delegate"]], "determine_chain_endpoint_and_network() (bittensor.subtensor.subtensor static method)": [[11, "bittensor.subtensor.subtensor.determine_chain_endpoint_and_network"]], "difficulty() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.difficulty"]], "does_hotkey_exist() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.does_hotkey_exist"]], "get_all_neurons_for_pubkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_all_neurons_for_pubkey"]], "get_all_subnet_netuids() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_all_subnet_netuids"]], "get_all_subnets_info() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_all_subnets_info"]], "get_all_uids_for_hotkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_all_uids_for_hotkey"]], "get_axon_info() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_axon_info"]], "get_balance() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_balance"]], "get_balances() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_balances"]], "get_block_hash() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_block_hash"]], "get_current_block() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_current_block"]], "get_delegate_by_hotkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_delegate_by_hotkey"]], "get_delegate_take() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_delegate_take"]], "get_delegated() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_delegated"]], "get_delegates() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_delegates"]], "get_emission_value_by_subnet() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_emission_value_by_subnet"]], "get_existential_deposit() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_existential_deposit"]], "get_hotkey_owner() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_hotkey_owner"]], "get_netuids_for_hotkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_netuids_for_hotkey"]], "get_neuron_for_pubkey_and_subnet() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_neuron_for_pubkey_and_subnet"]], "get_nominators_for_hotkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_nominators_for_hotkey"]], "get_prometheus_info() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_prometheus_info"]], "get_proposal_call_data() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_proposal_call_data"]], "get_proposal_hashes() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_proposal_hashes"]], "get_proposal_vote_data (bittensor.subtensor.subtensor attribute)": [[11, "bittensor.subtensor.subtensor.get_proposal_vote_data"]], "get_proposals() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_proposals"]], "get_senate_members() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_senate_members"]], "get_stake() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_stake"]], "get_stake_for_coldkey_and_hotkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_stake_for_coldkey_and_hotkey"]], "get_stake_info_for_coldkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_stake_info_for_coldkey"]], "get_stake_info_for_coldkeys() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_stake_info_for_coldkeys"]], "get_subnet_burn_cost() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_burn_cost"]], "get_subnet_connection_requirement() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_connection_requirement"]], "get_subnet_connection_requirements() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_connection_requirements"]], "get_subnet_hyperparameters() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_hyperparameters"]], "get_subnet_info() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_info"]], "get_subnet_modality() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_modality"]], "get_subnet_owner() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnet_owner"]], "get_subnets() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_subnets"]], "get_total_stake_for_coldkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_total_stake_for_coldkey"]], "get_total_stake_for_hotkey() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_total_stake_for_hotkey"]], "get_total_subnets() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_total_subnets"]], "get_transfer_fee() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_transfer_fee"]], "get_uid_for_hotkey_on_subnet() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_uid_for_hotkey_on_subnet"]], "get_vote_data() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.get_vote_data"]], "help() (bittensor.subtensor.subtensor class method)": [[11, "bittensor.subtensor.subtensor.help"]], "immunity_period() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.immunity_period"]], "incentive() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.incentive"]], "is_hotkey_delegate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.is_hotkey_delegate"]], "is_hotkey_registered() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.is_hotkey_registered"]], "is_hotkey_registered_any() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.is_hotkey_registered_any"]], "is_hotkey_registered_on_subnet() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.is_hotkey_registered_on_subnet"]], "is_senate_member() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.is_senate_member"]], "kappa() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.kappa"]], "leave_senate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.leave_senate"]], "logger (in module bittensor.subtensor)": [[11, "bittensor.subtensor.logger"]], "max_allowed_validators() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.max_allowed_validators"]], "max_n() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.max_n"]], "max_weight_limit() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.max_weight_limit"]], "metagraph() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.metagraph"]], "min_allowed_weights() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.min_allowed_weights"]], "name (bittensor.subtensor.paramwithtypes attribute)": [[11, "bittensor.subtensor.ParamWithTypes.name"]], "network (bittensor.subtensor.subtensor attribute)": [[11, "bittensor.subtensor.subtensor.network"]], "neuron_for_uid() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.neuron_for_uid"]], "neuron_for_uid_lite() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.neuron_for_uid_lite"]], "neuron_for_wallet() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.neuron_for_wallet"]], "neuron_has_validator_permit() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.neuron_has_validator_permit"]], "neurons() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.neurons"]], "neurons_lite() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.neurons_lite"]], "nominate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.nominate"]], "query_constant() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_constant"]], "query_identity() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_identity"]], "query_map() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_map"]], "query_map_subtensor() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_map_subtensor"]], "query_module() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_module"]], "query_runtime_api() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_runtime_api"]], "query_subtensor() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.query_subtensor"]], "register() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.register"]], "register_senate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.register_senate"]], "register_subnetwork() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.register_subnetwork"]], "rho() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.rho"]], "root_register() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.root_register"]], "root_set_weights() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.root_set_weights"]], "run_faucet() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.run_faucet"]], "scaling_law_power() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.scaling_law_power"]], "serve() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.serve"]], "serve_axon() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.serve_axon"]], "serve_prometheus() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.serve_prometheus"]], "serving_rate_limit() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.serving_rate_limit"]], "set_delegate_take() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.set_delegate_take"]], "set_hyperparameter() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.set_hyperparameter"]], "set_weights() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.set_weights"]], "setup_config() (bittensor.subtensor.subtensor static method)": [[11, "bittensor.subtensor.subtensor.setup_config"]], "state_call() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.state_call"]], "subnet_exists() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.subnet_exists"]], "subnetwork_n() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.subnetwork_n"]], "subtensor (class in bittensor.subtensor)": [[11, "bittensor.subtensor.subtensor"]], "synergy_scaling_law_power() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.synergy_scaling_law_power"]], "tempo() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.tempo"]], "total_issuance() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.total_issuance"]], "total_stake() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.total_stake"]], "transfer() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.transfer"]], "tx_rate_limit() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.tx_rate_limit"]], "type (bittensor.subtensor.paramwithtypes attribute)": [[11, "bittensor.subtensor.ParamWithTypes.type"]], "undelegate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.undelegate"]], "unstake() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.unstake"]], "unstake_multiple() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.unstake_multiple"]], "update_identity() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.update_identity"]], "validator_batch_size() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_batch_size"]], "validator_epoch_length() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_epoch_length"]], "validator_epochs_per_reset() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_epochs_per_reset"]], "validator_exclude_quantile() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_exclude_quantile"]], "validator_logits_divergence() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_logits_divergence"]], "validator_prune_len() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_prune_len"]], "validator_sequence_length() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.validator_sequence_length"]], "vote_senate() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.vote_senate"]], "weights() (bittensor.subtensor.subtensor method)": [[11, "bittensor.subtensor.subtensor.weights"]], "synapse (class in bittensor.synapse)": [[12, "bittensor.synapse.Synapse"]], "synapse.config (class in bittensor.synapse)": [[12, "bittensor.synapse.Synapse.Config"]], "terminalinfo (class in bittensor.synapse)": [[12, "bittensor.synapse.TerminalInfo"]], "terminalinfo.config (class in bittensor.synapse)": [[12, "bittensor.synapse.TerminalInfo.Config"]], "__setattr__() (bittensor.synapse.synapse method)": [[12, "bittensor.synapse.Synapse.__setattr__"]], "_extract_header_size (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse._extract_header_size"]], "_extract_nonce (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo._extract_nonce"]], "_extract_port (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo._extract_port"]], "_extract_process_time (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo._extract_process_time"]], "_extract_status_code (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo._extract_status_code"]], "_extract_timeout (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse._extract_timeout"]], "_extract_total_size (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse._extract_total_size"]], "_extract_version (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo._extract_version"]], "axon (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.axon"]], "bittensor.synapse": [[12, "module-bittensor.synapse"]], "body_hash (bittensor.synapse.synapse property)": [[12, "bittensor.synapse.Synapse.body_hash"]], "cast_float() (in module bittensor.synapse)": [[12, "bittensor.synapse.cast_float"]], "cast_int() (in module bittensor.synapse)": [[12, "bittensor.synapse.cast_int"]], "computed_body_hash (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.computed_body_hash"]], "dendrite (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.dendrite"]], "deserialize() (bittensor.synapse.synapse method)": [[12, "bittensor.synapse.Synapse.deserialize"]], "failed_verification (bittensor.synapse.synapse property)": [[12, "bittensor.synapse.Synapse.failed_verification"]], "from_headers() (bittensor.synapse.synapse class method)": [[12, "bittensor.synapse.Synapse.from_headers"]], "get_size() (in module bittensor.synapse)": [[12, "bittensor.synapse.get_size"]], "get_total_size() (bittensor.synapse.synapse method)": [[12, "bittensor.synapse.Synapse.get_total_size"]], "header_size (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.header_size"]], "hotkey (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.hotkey"]], "ip (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.ip"]], "is_blacklist (bittensor.synapse.synapse property)": [[12, "bittensor.synapse.Synapse.is_blacklist"]], "is_failure (bittensor.synapse.synapse property)": [[12, "bittensor.synapse.Synapse.is_failure"]], "is_success (bittensor.synapse.synapse property)": [[12, "bittensor.synapse.Synapse.is_success"]], "is_timeout (bittensor.synapse.synapse property)": [[12, "bittensor.synapse.Synapse.is_timeout"]], "name (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.name"]], "nonce (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.nonce"]], "parse_headers_to_inputs() (bittensor.synapse.synapse class method)": [[12, "bittensor.synapse.Synapse.parse_headers_to_inputs"]], "port (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.port"]], "process_time (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.process_time"]], "required_hash_fields (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.required_hash_fields"]], "set_name_type() (bittensor.synapse.synapse method)": [[12, "bittensor.synapse.Synapse.set_name_type"]], "signature (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.signature"]], "status_code (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.status_code"]], "status_message (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.status_message"]], "timeout (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.timeout"]], "to_headers() (bittensor.synapse.synapse method)": [[12, "bittensor.synapse.Synapse.to_headers"]], "total_size (bittensor.synapse.synapse attribute)": [[12, "bittensor.synapse.Synapse.total_size"]], "uuid (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.uuid"]], "validate_assignment (bittensor.synapse.synapse.config attribute)": [[12, "bittensor.synapse.Synapse.Config.validate_assignment"]], "validate_assignment (bittensor.synapse.terminalinfo.config attribute)": [[12, "bittensor.synapse.TerminalInfo.Config.validate_assignment"]], "version (bittensor.synapse.terminalinfo attribute)": [[12, "bittensor.synapse.TerminalInfo.version"]], "torch_dtypes (in module bittensor.tensor)": [[13, "bittensor.tensor.TORCH_DTYPES"]], "tensor (class in bittensor.tensor)": [[13, "bittensor.tensor.Tensor"], [13, "bittensor.tensor.tensor"]], "tensor.config (class in bittensor.tensor)": [[13, "bittensor.tensor.Tensor.Config"]], "_extract_dtype (bittensor.tensor.tensor attribute)": [[13, "bittensor.tensor.Tensor._extract_dtype"]], "_extract_shape (bittensor.tensor.tensor attribute)": [[13, "bittensor.tensor.Tensor._extract_shape"]], "bittensor.tensor": [[13, "module-bittensor.tensor"]], "buffer (bittensor.tensor.tensor attribute)": [[13, "bittensor.tensor.Tensor.buffer"], [13, "id0"]], "cast_dtype() (in module bittensor.tensor)": [[13, "bittensor.tensor.cast_dtype"]], "cast_shape() (in module bittensor.tensor)": [[13, "bittensor.tensor.cast_shape"]], "deserialize() (bittensor.tensor.tensor method)": [[13, "bittensor.tensor.Tensor.deserialize"]], "dtype (bittensor.tensor.tensor attribute)": [[13, "bittensor.tensor.Tensor.dtype"], [13, "id1"]], "numpy() (bittensor.tensor.tensor method)": [[13, "bittensor.tensor.Tensor.numpy"]], "serialize() (bittensor.tensor.tensor static method)": [[13, "bittensor.tensor.Tensor.serialize"]], "shape (bittensor.tensor.tensor attribute)": [[13, "bittensor.tensor.Tensor.shape"], [13, "id2"]], "tensor() (bittensor.tensor.tensor method)": [[13, "bittensor.tensor.Tensor.tensor"]], "tolist() (bittensor.tensor.tensor method)": [[13, "bittensor.tensor.Tensor.tolist"]], "validate_assignment (bittensor.tensor.tensor.config attribute)": [[13, "bittensor.tensor.Tensor.Config.validate_assignment"]], "brokenthreadpool": [[14, "bittensor.threadpool.BrokenThreadPool"]], "null_entry (in module bittensor.threadpool)": [[14, "bittensor.threadpool.NULL_ENTRY"]], "prioritythreadpoolexecutor (class in bittensor.threadpool)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor"]], "_workitem (class in bittensor.threadpool)": [[14, "bittensor.threadpool._WorkItem"]], "__author__ (in module bittensor.threadpool)": [[14, "bittensor.threadpool.__author__"]], "_adjust_thread_count() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor._adjust_thread_count"]], "_counter (bittensor.threadpool.prioritythreadpoolexecutor attribute)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor._counter"]], "_initializer_failed() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor._initializer_failed"]], "_shutdown (in module bittensor.threadpool)": [[14, "bittensor.threadpool._shutdown"]], "_threads_queues (in module bittensor.threadpool)": [[14, "bittensor.threadpool._threads_queues"]], "_worker() (in module bittensor.threadpool)": [[14, "bittensor.threadpool._worker"]], "add_args() (bittensor.threadpool.prioritythreadpoolexecutor class method)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor.add_args"]], "bittensor.threadpool": [[14, "module-bittensor.threadpool"]], "config() (bittensor.threadpool.prioritythreadpoolexecutor class method)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor.config"]], "is_empty (bittensor.threadpool.prioritythreadpoolexecutor property)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor.is_empty"]], "run() (bittensor.threadpool._workitem method)": [[14, "bittensor.threadpool._WorkItem.run"]], "shutdown() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor.shutdown"]], "submit() (bittensor.threadpool.prioritythreadpoolexecutor method)": [[14, "bittensor.threadpool.PriorityThreadPoolExecutor.submit"]], "axonservecallparams (class in bittensor.types)": [[15, "bittensor.types.AxonServeCallParams"]], "prometheusservecallparams (class in bittensor.types)": [[15, "bittensor.types.PrometheusServeCallParams"]], "bittensor.types": [[15, "module-bittensor.types"]], "ip (bittensor.types.axonservecallparams attribute)": [[15, "bittensor.types.AxonServeCallParams.ip"]], "ip (bittensor.types.prometheusservecallparams attribute)": [[15, "bittensor.types.PrometheusServeCallParams.ip"]], "ip_type (bittensor.types.axonservecallparams attribute)": [[15, "bittensor.types.AxonServeCallParams.ip_type"]], "ip_type (bittensor.types.prometheusservecallparams attribute)": [[15, "bittensor.types.PrometheusServeCallParams.ip_type"]], "netuid (bittensor.types.axonservecallparams attribute)": [[15, "bittensor.types.AxonServeCallParams.netuid"]], "netuid (bittensor.types.prometheusservecallparams attribute)": [[15, "bittensor.types.PrometheusServeCallParams.netuid"]], "port (bittensor.types.axonservecallparams attribute)": [[15, "bittensor.types.AxonServeCallParams.port"]], "port (bittensor.types.prometheusservecallparams attribute)": [[15, "bittensor.types.PrometheusServeCallParams.port"]], "version (bittensor.types.axonservecallparams attribute)": [[15, "bittensor.types.AxonServeCallParams.version"]], "version (bittensor.types.prometheusservecallparams attribute)": [[15, "bittensor.types.PrometheusServeCallParams.version"]], "__repr__() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.__repr__"]], "__str__() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.__str__"]], "add_args() (bittensor.wallet.wallet class method)": [[16, "bittensor.wallet.wallet.add_args"]], "bittensor.wallet": [[16, "module-bittensor.wallet"]], "coldkey (bittensor.wallet.wallet property)": [[16, "bittensor.wallet.wallet.coldkey"]], "coldkey_file (bittensor.wallet.wallet property)": [[16, "bittensor.wallet.wallet.coldkey_file"]], "coldkeypub (bittensor.wallet.wallet property)": [[16, "bittensor.wallet.wallet.coldkeypub"]], "coldkeypub_file (bittensor.wallet.wallet property)": [[16, "bittensor.wallet.wallet.coldkeypub_file"]], "config() (bittensor.wallet.wallet class method)": [[16, "bittensor.wallet.wallet.config"]], "create() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.create"]], "create_coldkey_from_uri() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.create_coldkey_from_uri"]], "create_hotkey_from_uri() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.create_hotkey_from_uri"]], "create_if_non_existent() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.create_if_non_existent"]], "create_new_coldkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.create_new_coldkey"]], "create_new_hotkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.create_new_hotkey"]], "display_mnemonic_msg() (in module bittensor.wallet)": [[16, "bittensor.wallet.display_mnemonic_msg"]], "get_coldkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.get_coldkey"]], "get_coldkeypub() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.get_coldkeypub"]], "get_hotkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.get_hotkey"]], "help() (bittensor.wallet.wallet class method)": [[16, "bittensor.wallet.wallet.help"]], "hotkey (bittensor.wallet.wallet property)": [[16, "bittensor.wallet.wallet.hotkey"]], "hotkey_file (bittensor.wallet.wallet property)": [[16, "bittensor.wallet.wallet.hotkey_file"]], "new_coldkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.new_coldkey"]], "new_hotkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.new_hotkey"]], "recreate() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.recreate"]], "regen_coldkey (bittensor.wallet.wallet attribute)": [[16, "bittensor.wallet.wallet.regen_coldkey"]], "regen_coldkeypub (bittensor.wallet.wallet attribute)": [[16, "bittensor.wallet.wallet.regen_coldkeypub"]], "regen_hotkey (bittensor.wallet.wallet attribute)": [[16, "bittensor.wallet.wallet.regen_hotkey"]], "regenerate_coldkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.regenerate_coldkey"]], "regenerate_coldkeypub() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.regenerate_coldkeypub"]], "regenerate_hotkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.regenerate_hotkey"]], "set_coldkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.set_coldkey"]], "set_coldkeypub() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.set_coldkeypub"]], "set_hotkey() (bittensor.wallet.wallet method)": [[16, "bittensor.wallet.wallet.set_hotkey"]], "wallet (class in bittensor.wallet)": [[16, "bittensor.wallet.wallet"]]}})